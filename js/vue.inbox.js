window.$app.defineComponent("inbox","vue-inbox-index",{data:function(){return{isFetchingDialogs:!0,isFetchingMessages:!1,isSending:!1,dialogs:[],details:[],dialogTarget:"all",dialog_id:null,dialog:null,messages:[],limit:20,text:"",dialog_search:""}},created:function(){this.$io.on("events:inbox:message",this.receivedMessage),this.fetchDialogs()},destroyed:function(){this.$io.off("events:inbox:message",this.receivedMessage)},watch:{dialog_id:function(){this.messages=[],this.fetchMessages(),this.$refs.infiniteLoading&&this.$refs.infiniteLoading.$emit("$InfiniteLoading:reset")}},beforeRouteEnter:function(i,s,e){$mx("body").addClass("has-hidden-footer"),e()},beforeRouteLeave:function(i,s,e){$mx("body").removeClass("has-hidden-footer"),e()},methods:{showPhoto:function(i){this.$buefy.modal.open({content:'<p class="image"><img src="'+i+'"></p>',canCancel:["escape","outside"]})},textKeydown:function(i){i.metaKey&&13==i.keyCode&&this.sendMessage()},receivedMessage:function(s){if(this.dialog_id&&s.channel_id==this.dialog.channel_id&&s.id==this.dialog.id)try{for(s.data.message=JSON.parse(s.data.message),this.messages.push(s.data),this.messages.sort(function(i,s){return i.tms-s.tms}),this.scrollEnd(),i=0;i<this.dialogs.length;i++)if(s.channel_id==this.dialogs[i].channel_id&&s.id==this.dialogs[i].id){this.dialogs[i].message=s.data.message,this.dialogs[i].tms_updated=s.data.tms,this.dialogs.sort(function(i,s){return s.tms_updated-i.tms_updated});break}}catch(i){}},infinite:function(s){var e=this.$el.querySelector(".inbox-messages-scroll"),a=e.scrollHeight;this.fetchMessages().then(function(i){i.length?s.loaded():s.complete(),e.scrollTop+=e.scrollHeight-a})},scrollEnd:function(){var s=this;this.$nextTick(function(){var i=s.$el.querySelector(".inbox-messages-scroll");i.scrollTop=i.scrollHeight-i.clientHeight})},sendMessage:function(){var s=this;""!=this.text.trim()&&(this.isSending=!0,this.$api.post("inbox/dialogs/send",{dialog_id:this.dialog_id,message:{text:this.text}}).then(function(i){s.text="",s.isSending=!1}))},fetchMessages:function(){var t=this;return new Promise(function(a,i){t.messages.length?t.$api.get("inbox/dialogs/messages",{dialog_id:t.dialog_id,limit:20,offset:t.messages[0].message_id}).then(function(i){var s=t.messages.length,e=i.response.messages;t.messages=e.reverse().concat(t.messages),s||t.scrollEnd(),a(e)}):t.$api.get("inbox/dialogs/get",{dialog_id:t.dialog_id}).then(function(i){t.dialog=i.response.dialog,t.details=i.response.details,t.messages=m=i.response.messages.reverse(),t.scrollEnd(),a(m)})})},infiniteDialogs:function(i){i.target.scrollHeight-i.target.scrollTop-20<i.target.offsetHeight&&this.dialogs.length>this.limit&&!this.isFetchingDialogs&&(this.limit+=20,this.fetchDialogs())},searchDialog:_.debounce(function(i){this.limit=20,this.fetchDialogs()},500),fetchDialogs:function(){var s=this;this.isFetchingDialogs=!0,this.$api.get("inbox/dialogs/list",{limit:this.limit,query:this.dialog_search}).then(function(i){s.dialogs=i.response.dialogs,s.isFetchingDialogs=!1,s.dialog_id=s.dialogs[0].dialog_id})}},template:'<div class="inbox-main"> <div class="inbox-dialogs"> <div class="inbox-header"> <input type="search" class="input" v-model="dialog_search" placeholder="Поиск" @input="searchDialog"> </div> <div class="inbox-dialogs-scroll" @scroll="infiniteDialogs"> <div v-for="f in dialogs" :class="{in: f.dialog_id == dialog_id}" @click="dialog_id = f.dialog_id"> <img :src="f.avatar?(\'//\'+$account.storage_domain+f.avatar):\'/s/i/empty-avatar.jpg\'" class="profile-avatar image is-48x48"> <div class="is-title"> <div>{{f.full_name}}</div> <div class="has-text-grey" v-if="f.message && f.message.text" v-html="f.message.text"></div> </div> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetchingDialogs"></b-loading> </div> <div class="inbox-messages" :class="{\'is-empty\': !dialog_id && !isFetchingMessages}"> <div class="inbox-header" v-if="dialog && dialog_id"> <img class="profile-avatar image is-32x32 has-mr-2" :src="\'//\'+$account.storage_domain+dialog.avatar"> <div>{{dialog.full_name}}</div> </div> <div style="flex-grow: 1" v-if="isFetchingMessages || !dialog_id"></div> <div class="inbox-messages-scroll" v-else> <infinite-loading @infinite="infinite" direction="top" spinner="spiral" ref="infiniteLoading"> <span slot="no-results">Нет сообщений</span> <span slot="no-more"></span> </infinite-loading> <div v-for="m in messages" class="inbox-message inbox-message"> <div class="inbox-message-content" :class="{received: m.who == \'u\', sent: m.who == \'b\'}"> <div class="inbox-message-avatar" :style="{backgroundImage: \'url(\'+((m.who == \'u\')?(\'//\'+$account.storage_domain+dialog.avatar):(m.avatar?m.avatar:\'/s/i/taplink-logo.jpg\'))+\')\'}"></div> <div class="inbox-message-body"> <a href=\'#\' class="inbox-photo" v-if="m.message.pictures" @click.prevent="showPhoto(photo)" v-for="photo in m.message.pictures"><img :src=\'photo\'></a> <div v-if="m.message.document"> <b>{{m.message.document.file_name}}</b><br>{{m.message.document.file_size}} </div> <div v-if="m.message && m.message.text" v-html="m.message.text" class="inbox-message-text"></div> </div> </div> </div> </div> <div class="inbox-messages-footer"> <textarea v-model="text" class="input" placeholder="Написать сообщение ..." @keydown="textKeydown"></textarea> <div class="level"> <div class="level-left"></div> <div class="level-right"><button class="button is-primary" :class="{\'is-loading\': isSending}" @click="sendMessage">Отправить</button></div> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetchingMessages"></b-loading> </div> <div class="inbox-sidebar"> <div class="inbox-header">Детали</div> <div v-for="d in details" class="inbox-details-block"> <div class="row has-mb-1" v-for="r in d.rows"><div class="col-xs-5 has-text-grey">{{r.title}}:</div> <div class="col-xs-7">{{r.value}}</div></div> </div> </div> </div>'}),window.$app.defineModule("inbox",[]);
