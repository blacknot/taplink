window.$app.defineComponent("products","vue-products-collections-form",{data:function(){return{isUpdating:!1,isFetching:!1,isFetchingProduct:!1,isReadonly:!1,autocompleteProducts:[],query:"",selected:[],values:{collection:"",is_hidden:!1,products:[]}}},created:function(){this.isReadonly=!this.$auth.isAllowEndpoint("products/collections/set"),this.collection_id&&this.fetchData(!0)},props:["collection_id"],mixins:[FormModel],computed:{scrollContainer:function(){return this.$device.mobile?$mx(".main-block")[0]:document.scrollingElement||document.documentElement}},methods:{fetchData:function(t){var e=this;this.isFetching=t,this.$api.get("products/collections/get",{collection_id:this.collection_id}).then(function(t){e.isFetching=!1,e.values=t.response.collection.values})},asyncAutocompleteProduct:_.debounce(function(){var e=this;""!=this.query.trim()?(this.isFetchingProduct=!0,this.$api.get("products/search",{query:this.query}).then(function(t){e.autocompleteProducts=t.response.products.search,e.isFetchingProduct=!1})):this.autocompleteProducts=[]},500),updateData:function(){var e=this;this.isUpdating=!0,this.onAddProduct();var t=_.clone(this.values);t.products=_.map(t.products,function(t){return t.product_id}),this.$api.post("products/collections/set",t,this).then(function(t){"success"==t.result&&e.$parent.close(),e.isUpdating=!1}).catch(function(t){e.isUpdating=!1})},onAction:function(t){var e=this;switch(t){case"delete":this.$confirm(this.$gettext("Вы уверены что хотите удалить эту коллекцию? Вы не сможете её вернуть!"),"is-danger").then(function(){e.$api.post("products/collections/delete",{collection_id:e.collection_id},e).then(function(t){"success"==t.result&&e.$parent.close()})})}},onSelect:function(t){this.selected=t},onAddProduct:function(){this.selected&&!_.isEmpty(this.selected)&&-1==_.findIndex(this.values.products,{product_id:this.selected.product_id})&&(this.values.products.push(this.selected),this.query="")},onRemoveProduct:function(t){this.values.products.splice(t,1)}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Коллекция\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <b-field :label="\'Название\'|gettext" :message="errors.collection" :class="{\'has-error\': errors.collection}"> <b-input v-model="values.collection" :placeholder="\'Укажите название коллекции\'|gettext" :disabled="isReadonly"></b-input> </b-field> <div class="field"> <b-checkbox v-model="values.is_hidden" :disabled="isReadonly">{{\'Скрыть коллекцию из навигации в каталоге\'|gettext}}</b-checkbox> </div> </section> <section class="collection-products-container"> <div class="row row-small has-mb-2"> <div class="col-xs"> <b-autocomplete v-model="query" :disabled="isReadonly" :data="autocompleteProducts" :placeholder="\'Укажите товар чтобы добавить его в коллекцию\'|gettext" field="product" :loading="isFetchingProduct" @input="asyncAutocompleteProduct" @select="onSelect"> </div> <div class="col-xs col-shrink"> <button type="button" class="button is-success" @click="onAddProduct" :disabled="isReadonly">{{\'Добавить\'|gettext}}</button> </div> </div> <mx-item class="is-hidden-mobile mx-item-header" v-if="values.products.length"> <div class="item-row row"> <div class="col-sm">{{\'Товар\'|gettext}}</div> </div> </mx-item> <sortable-list class="collection-products-list" lockAxis="y" v-model="values.products" use-drag-handle :scrollContainer="$mx(\'.modal\')[0]"> <sortable-item v-for="(product, index) in values.products" class="form-fields-item is-narrow" :class="{disabled: isReadonly}" :index="index" :key="index" :item="product"> <div class="form-fields-item-title"> <div v-sortable-handle class="form-fields-item-handle"></div> <span class="row"> <div class="col-xs" :class="{\'has-text-grey-light\': !product.is_visible || !product.is_active}"><p class="form-control-static"><i class="has-text-danger fas fa-lock has-mr-1" v-if="!product.is_visible || !product.is_active" style="opacity:.5"></i>{{ product.product }}</p></div> <div class="col-xs col-shrink"><button class="button has-text-danger is-text" :class="{disabled: isReadonly}" @click="onRemoveProduct(index)"><i class="fa fa-trash-alt"></i></button></div> </span> </div> </sortable-item> </sortable-list> </section> </section> <footer class="modal-card-foot level"> <div class="level-left" v-if="!isReadonly && collection_id"> <vue-component-action-button @action="onAction" :title="\'Действие\'|gettext"> <template slot="actions"> <b-dropdown-item value="delete" class="has-text-danger"><i class="fa fa-trash-alt has-mr-1"></i>{{\'Удалить\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> </div> <div class="level-left" v-if="!collection_id"> <button class="button is-dark is-hidden-tablet" type="button" @click="$parent.close()">{{\'Отмена\'|gettext}}</button> </div> <div class="level-right"> <button v-if="isReadonly" class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button v-else class="button is-primary" :class="{\'is-loading\': isUpdating, disabled: isReadonly}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("products","vue-products-collections-list",{data:function(){return{isFetching:!1,isFiltering:!1,isReadonly:!1,filter:{query:""},sortField:"collection",sortOrder:"asc",perPage:20,columns:["collection","amount"],isAllow:this.$auth.isAllowTariff("business")}},mixins:[ListModel],created:function(){this.isReadonly=!this.$auth.isAllowEndpoint("products/collections/set"),this.$io.on("events:products.collections.list:refresh",this.refreshCollections),this.$io.on("events:products.collections.list:delete",this.deleteCollection),this.fetchData(!0)},destroyed:function(){this.$io.off("events:products.collections.list:refresh",this.refreshCollections),this.$io.off("events:products.collections.list:delete",this.deleteCollection)},computed:{columns_props:function(){if(!this.columns)return[];for(var s={collection:{label:"Название",sortable:!0},amount:{label:"# Товаров",numeric:!0,sortable:!0,classname:"has-text-nowrap has-width-15"}},t=_.map(this.columns,function(t){var e=s[t];return e.visible=!0,e.field=t,e}),e=0;e<11-this.columns.length;e++)t.push({visible:!1});return t}},methods:{refreshCollections:function(t){var s=this;null!=t.product_ids?this.merge(this.fields,"collection_id",t.collection_ids,function(t,e){s.$api.get("products/collections/list",{filter:{collection_ids:t}}).then(function(t){s.fields=e(t.response.collections.fields)})}):(this.clearPages(),this.fetchData(!1,!0))},deleteCollection:function(t){this.checkIds(this.fields,"collection_id",t.collection_ids).length&&(this.next=this.current,this.fetchData(!1,!0))},fetchData:function(t,e){var s=this;!e&&this.checkCache()||(this.isFetching=t,this.$api.get("products/collections/list",{next:this.next,count:this.perPage,sort_field:this.sortField,sort_order:this.sortOrder,filter:this.filter}).then(function(t){s.cachePage(t.response.collections),s.isFetching=!1,s.isFiltering=!1}).catch(function(t){throw s.accesses=[],s.total=0,s.isFetching=!1,s.isFiltering=!1,t}))},onPageChange:function(t){this.page=t,this.fetchData(!0)},onFilter:function(){this.isFiltering=!0,this.clearPages(),this.fetchData(!0)},openForm:function(t){this.$modal("vue-products-collections-form",{collection_id:t},this)},clickRow:function(t){this.openForm(t.collection_id)}},template:'<div> <vue-component-filterbox ref="filterbox" v-if="isAllow" @filter="onFilter" v-model="filter" :is-visible="fields.length" :disabled="isFetching" :with-buttons="true"> <template slot="buttons"> <button class="button" @click="openForm(null)" class="button is-primary is-fullwidth" :class="{disabled: isReadonly}"><i class=\'fa fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новая коллекция\'|gettext}}</span></button> </template> </vue-component-filterbox> <div class="container has-mb-3" :class="{\'has-mt-3\': !isAllow}"> <b-table paginated backend-pagination backend-sorting pagination-simple :data="fields" :loading="isFetching" :current-page="page" :per-page="perPage" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" @click="clickRow" @sort="onSort" hoverable bordered> <b-table-column v-for="(column, index) in columns_props" :field="column.field" :label="column.label|gettext" :class="column.classname" :numeric="column.numeric" :key="index" :visible="column.visible" :sortable="column.sortable" :width="column.width" v-slot="props"> <div :class="{\'has-text-grey-light\': props.row.is_hidden || !props.row.amount}"> <div v-if="column.field == \'collection\'"><div class="has-text-danger is-pulled-right" v-if="props.row.is_hidden"><i class="fas fa-lock" style="margin-left: 10px"></i></div> {{ props.row.collection }}</div> <div v-if="column.field == \'amount\'">{{ props.row.amount|number }}</div> </div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <div v-if="isAllow && $refs.filterbox.hasFilter || filter.query"> <i class="fal fa-search fa-5x has-text-grey-light"></i> <h3>{{\'Ничего не найдено\'|gettext}}</h3> </div> <div v-else> <div class="row"> <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3"> <h3 class="has-p-2 has-text-grey-light has-text-centered has-mb-2"><i class="fal fa-tags has-text-grey-light" style="font-size: 5rem"></i></h3> <div class="has-mb-2">{{\'Коллекции служат для объединения товаров в группы. Одна коллекция может включать любые товары, а один и то же товар может входить в разные коллекции.\'|gettext}}</div> <button class="button" @click="openForm(null)" class="button is-primary" v-if="isAllow" :class="{disabled: isReadonly}"><i class=\'fa fa-plus has-mr-1\'></i>{{\'Новая коллекция\'|gettext}}</button> <div class="has-text-centered" v-else><div class="tag is-danger" style="top: -1px;position: relative;">biz</div> <span class=\'has-text-danger\'>{{\'Доступно на business-тарифе\'|gettext}}</span></div> </div> </div> </div> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div>'}),window.$app.defineComponent("products","vue-products-columns-form",{data:function(){return{isUpdating:!1,isFetching:!1,columns:[],sort:[],titles:[]}},created:function(){this.fetchData(!0)},mixins:[FormModel],methods:{fetchData:function(t){var e=this;this.isFetching=t,this.$api.get("products/columns/get").then(function(t){e.isFetching=!1,e.columns=t.response.products.columns,e.sort=t.response.products.sort,e.titles=t.response.products.titles})},updateData:function(){var e=this;this.isUpdating=!0,this.$api.post("products/columns/set",{columns:this.columns,sort:this.sort},this).then(function(t){"success"==t.result&&e.$parent.close(),e.isUpdating=!1}).catch(function(){e.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Настройки таблицы\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <sortable-list class="form-fields-item-list" lockAxis="y" v-model="sort" use-drag-handle> <sortable-item v-for="(column, index) in sort" class="form-fields-item" :index="index" :key="index" :item="column"> <div class="form-fields-item-title"> <div v-sortable-handle class="form-fields-item-handle"></div> <span><label class="checkbox"><input type="checkbox" name=\'columns[]\' :value="column" v-model="columns"> {{ titles[column]|gettext }}</label></span> </div> </sortable-item> </sortable-list> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Отмена\'|gettext}}</button> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("products","vue-products-discounts-form",{data:function(){return{isUpdating:!1,isFetching:!1,isReadonly:!1,values:{discount_id:null,is_active:!0,title:"",promocode:"",options:{profit:"percentage",percentage:0,apply_options:!0,fixed:0,apply:"order",apply_collections:[],apply_products:[],rule:"none",rule_purchase:0,rule_quantity:0,rule_combo:[]}},variants:{profit:{percentage:this.$gettext("Процент"),fixed:this.$gettext("Фиксированная сумма"),free_shipping:this.$gettext("Бесплатная доставка")},apply:{order:this.$gettext("Всему заказу"),collections:this.$gettext("Товарам из определенных коллекций"),products:this.$gettext("Определенным товарам")},rule:{none:this.$gettext("Отсутствуют"),purchase:this.$gettext("Минимальная сумма покупки"),quantity:this.$gettext("Минимальное количество товаров")}},texts:{promocode:{title_new:this.$gettext("Новый промокод"),title_old:this.$gettext("Промокод"),active:this.$gettext("Активный промокод"),deleteMsg:this.$gettext("Вы уверены что хотите удалить этот промокод? Вы не сможете его вернуть!")},automatic:{title_new:this.$gettext("Новая акция"),title_old:this.$gettext("Акция"),active:this.$gettext("Активная акция"),deleteMsg:this.$gettext("Вы уверены что хотите удалить эту акцию? Вы не сможете его вернуть!")}}}},created:function(){this.isReadonly=!this.$auth.isAllowEndpoint("products/discounts/set"),this.discount_id&&this.fetchData(!0)},props:["type","discount_id"],mixins:[FormModel],methods:{onAction:function(t){switch(t){case"delete":this.onDelete()}},onDelete:function(){var e=this;this.$confirm(this.$gettext(this.texts[this.type].deleteMsg),"is-danger").then(function(){e.$api.get("products/discounts/delete",{discount_id:e.discount_id},e).then(function(t){"success"==t.result&&e.$parent.close()})})},promocodeFilter:function(t){var e=t.which?t.which:t.keyCode;String.fromCharCode(e).toUpperCase().match(/[A-ZА-Яa-zа-я0-9\-_]/)||t.preventDefault()},promocodeFilterAfter:function(){this.values.promocode=this.values.promocode.toUpperCase().replace(/[^A-ZА-Я0-9\-_ ]/g,"").trim().replace(/ /g,"_")},fetchData:function(t){var e=this;this.isFetching=t,this.$api.get("products/discounts/get",{discount_id:this.discount_id}).then(function(t){e.isFetching=!1,e.values=t.response.discounts.values})},updateData:function(){var e=this;this.isUpdating=!0,this.$api.post("products/discounts/set",Object.assign(this.values,{type:this.type}),this).then(function(t){"success"==t.result&&e.$parent.close(),e.isUpdating=!1}).catch(function(t){e.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title" v-if="values.discount_id">{{texts[type].title_old|gettext}}</p> <p class="modal-card-title" v-else>{{texts[type].title_new|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <b-field :label="\'Промокод\'|gettext" :message="errors.promocode" maxlength="16" class="has-mb-1" :class="{\'has-error\': errors.promocode}" v-if="type == \'promocode\'"> <input class="input" v-model="values.promocode" @keypress="promocodeFilter" @change="promocodeFilterAfter" @keyup="promocodeFilterAfter" :disabled="isReadonly"></input> </b-field> <b-field :label="\'Название акции\'|gettext" :message="errors.title" class="has-mb-1" :class="{\'has-error\': errors.title}" v-else> <b-input v-model="values.title" placeholder="Например: SALE" :disabled="isReadonly"></b-input> </b-field> <b-checkbox v-model="values.is_active" :disabled="isReadonly">{{texts[type].active|gettext}}</b-checkbox> </section> <section> <label class="label has-mb-2">{{\'Вид скидки\'|gettext}}</label> <div class="is-block has-mb-1" v-for="(v, k) in variants.profit"> <label class="radio is-flex"> <input type="radio" v-model="values.options.profit" :value="k" :disabled="isReadonly"/> <div class="is-flex-body"> <div class="is-flex-title">{{v|gettext}}</div> <div v-if="k != \'free_shipping\'"> <b-field :message="errors.profit_percentage" class="has-mt-1" :class="{\'has-error\': errors.profit_percentage}" v-if="k == \'percentage\' && values.options.profit == \'percentage\'"> <div class="row"> <div class="col-xs-12 col-sm-6 col-md-5 has-xs-mb-1"> <b-field> <p class="control is-expanded"><number v-model="values.options.percentage" class="input has-text-right" :disabled="isReadonly"/></p> <p class="control"><a class="button is-static">%</a></p> </b-field> </div> <div class="col-xs-12 col-sm-6 col-md-5" style="align-items: center;display: flex;"> <label class="checkbox"> <input type="checkbox" v-model="values.options.apply_options" :value="true" :disabled="isReadonly"/> {{\'Применять к опциям\'|gettext}} </label> </div> </div> </b-field> <b-field :message="errors.profit_fixed" class="has-mt-1" :class="{\'has-error\': errors.profit_fixed}" v-if="[\'percentage\', \'fixed\'].indexOf(values.options.profit) != -1" v-if="k == \'fixed\' && values.options.profit == \'fixed\'"> <div class="row"> <div class="col-xs-12 col-sm-6 col-md-5"> <b-field> <p class="control is-expanded"><number v-model="values.options.fixed" :precision="$account.currency.precision" class="input has-text-right" :disabled="isReadonly"/></p> <p class="control"><a class="button is-static">{{ $account.currency.title }}</a></p> </b-field> </div> </div> </b-field> </div> </div> </label> </div> </section> <section v-if="values.options.profit != \'free_shipping\'"> <label class="label has-mb-2">{{\'Применяется к\'|gettext}}</label> <div class="is-block has-mb-1" v-for="(v, k) in variants.apply"> <label class="radio is-flex"> <input type="radio" v-model="values.options.apply" :value="k" :disabled="isReadonly"/> <div class="is-flex-body"> <div class="is-flex-title">{{v|gettext}}</div> <b-field :message="errors.apply_collections" :class="[\'has-mt-1\', {\'has-error\': errors.apply_collections}]" v-if="k == \'collections\' && values.options.apply == \'collections\'"> <vue-component-autocomplete-collections v-model="values.options.apply_collections" :allowNew="false" :placeholder="\'Начните вводить название коллекции\'|gettext" :disabled="isReadonly"></vue-component-autocomplete-collections> </b-field> <b-field :message="errors.apply_products" :class="[\'has-mt-1\', {\'has-error\': errors.apply_products}]" v-if="k == \'products\' && values.options.apply == \'products\'"> <vue-component-autocomplete-products v-model="values.options.apply_products" :allowNew="false" :placeholder="\'Начните вводить название продуктов\'|gettext" :disabled="isReadonly"></vue-component-autocomplete-products> </b-field> </div> </label> </div> </section> <section v-if="type == \'automatic\'"> <label class="label has-mb-2">{{\'Минимальные требования\'|gettext}}</label> <div class="is-block has-mb-1" v-for="(v, k) in variants.rule"> <label class="radio is-flex"> <input type="radio" v-model="values.options.rule" :value="k" :disabled="isReadonly"/> <div class="is-flex-body"> <div class="is-flex-title">{{v|gettext}}</div> <div class="row has-mt-1" v-if="k == \'purchase\' && values.options.rule == \'purchase\'"> <div class="col-xs-12 col-sm-6 col-md-5"> <b-field :message="errors.rule_purchase" :class="{\'has-error\': errors.rule_purchase}"> <div> <b-field> <p class="control is-expanded"><number v-model="values.options.rule_purchase" :precision="$account.currency.precision" class="input has-text-right" :disabled="isReadonly"/></p> <p class="control"><a class="button is-static">{{ $account.currency.title }}</a></p> </b-field> </div> </b-field> </div> </div> <div class="row has-mt-1" v-if="k == \'quantity\' && values.options.rule == \'quantity\'"> <div class="col-xs-12 col-sm-6 col-md-5"> <b-field :message="errors.rule_quantity" :class="{\'has-error\': errors.rule_quantity}"> <input type="number" v-model="values.options.rule_quantity" class="input has-text-right" min="1" :disabled="isReadonly"> </b-field> </div> </div> <div v-if="k != \'none\' && k != \'combo\' && k== values.options.rule && values.options.apply != \'order\' && values.options.profit != \'free_shipping\'" class="has-mt-1 has-text-grey"> <p v-if="values.options.apply == \'collections\'">{{\'Относится только к выбранным коллекциям\'|gettext}}</p> <p v-if="values.options.apply == \'products\'">{{\'Относится только к выбранным товарам\'|gettext}}</p> </div> </div> </label> </div> </section> </section> <footer class="modal-card-foot level"> <div class="level-left" v-if="!isReadonly && values.discount_id"> <vue-component-action-button @action="onAction" :title="\'Действие\'|gettext"> <template slot="actions"> <b-dropdown-item value="delete" class="has-text-danger" :class="{disabled: values.has_orders}"><i class="fa fa-trash-alt has-mr-1"></i>{{\'Удалить\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> </div> <div class="level-left" v-if="!values.discount_id"> <button class="button is-dark is-hidden-tablet" type="button" @click="$parent.close()">{{\'Отмена\'|gettext}}</button> </div> <div class="level-right"> <button v-if="isReadonly" class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button v-else class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("products","vue-products-discounts-list",{data:function(){return{isFetching:!1,filter:{query:""},isReadonly:!1,sortField:"tms_created",sortOrder:"desc",perPage:20,texts:{promocode:{button:this.$gettext("Добавить промокод"),icon:"fa-ticket",description:this.$gettext("С помощью промокодов можно предоставить скидку или активировать бесплатную доставку. Промокоды могут применяться как ко всему заказу, так и к определенным товарам или коллекциям")},automatic:{button:this.$gettext("Добавить акцию"),icon:"fa-badge-percent",description:this.$gettext("Предложите своим клиентам скидки, которые автоматически применяются в их корзине. Акции могут действовать как для всего ассортимента, так и для определенных товаров или коллекций")}},isAllow:this.$auth.isAllowTariff("business")}},props:["type"],mixins:[ListModel],created:function(){this.isReadonly=!this.$auth.isAllowEndpoint("products/discounts/set"),this.$io.on("events:products.discounts.list:refresh",this.refreshDiscountss),this.fetchData(!0)},destroyed:function(){this.$io.off("events:products.discounts.list:refresh",this.refreshDiscountss)},watch:{type:function(){this.checkedRows=[],this.fields=[],this.sortField="tms_created",this.sortOrder="desc",this.clearPages(),this.fetchData(!0)}},methods:{refreshDiscountss:function(t){null!=t.type&&t.type!=this.type||(this.clearPages(),this.fetchData(!1,!0))},onFilter:function(){this.isFiltering=!0,this.clearPages(),this.fetchData(!0)},openForm:function(t){this.$modal("vue-products-discounts-form",{discount_id:t,type:this.type},this)},clickRow:function(t){this.openForm(t.discount_id)},fetchData:function(t,e){function s(t){l.fields=_.map(t.fields,function(t){var e=t.options,s="",i="",a="";switch(e.profit){case"free_shipping":s=l.$gettext("Бесплатная доставка");break;case"percentage":s=l.$format(l.$gettext("{1} скидки"),l.$decimal(e.percentage)+"%");break;case"fixed":s=l.$format(l.$gettext("{1} скидки"),l.$currency(e.fixed))}if("free_shipping"!=e.profit)switch(i=" на ",e.apply){case"order":i+=l.$gettext("весь заказ");break;case"products":i+=l.$plural("товар|товара|товаров",e.apply_products.length);break;case"collections":i+=l.$plural("коллекцию|коллекции|коллекций",e.apply_collections.length)}if("automatic"==l.type)switch(e.rule){case"purchase":a+=" "+l.$gettext("при заказе на {1}",l.$currency(e.rule_purchase));break;case"quantity":a+=" "+l.$gettext("при заказе на {1}",l.$plural("товар|товара|товаров",e.rule_quantity));break;case"combo":a+=" "+l.$gettext("при наличии в заказе товаров из набора")}return t.description=s+i+a,t}),l.isFetching=!1}var l=this;!e&&this.checkCache(s)||(this.isFetching=t,this.$api.get("products/discounts/list",{next:this.next,type:this.type,count:this.perPage,sort_field:this.sortField,sort_order:this.sortOrder,filter:this.filter}).then(function(t){l.cachePage(t.response.discounts,s)}).catch(function(t){throw l.fields=[],l.total=0,l.isFetching=!1,t}))}},template:'<div> <vue-component-filterbox ref="filterbox" v-if="isAllow" @filter="onFilter" v-model="filter" :is-visible="fields.length" :disabled="isFetching" :with-buttons="true"> <template slot="buttons"> <button class="button" @click="openForm(null)" class="button is-primary is-fullwidth" :class="{disabled: isReadonly}"><i class=\'fa fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{texts[type].button|gettext}}</span></button> </template> </vue-component-filterbox> <div class="container has-mb-3" :class="{\'has-mt-3\': !isAllow}"> <b-table paginated backend-pagination backend-sorting pagination-simple :data="fields" :loading="isFetching" :current-page="page" :per-page="perPage" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" @click="clickRow" @sort="onSort" hoverable bordered> <b-table-column field="promocode" :label="\'Промокод\'|gettext" sortable v-if="type == \'promocode\'" v-slot="props"><div>{{ props.row.promocode }}<div class="has-text-grey">{{ props.row.description }}</div></div></b-table-column> <b-table-column field="title" :label="\'Название\'|gettext" sortable v-else v-slot="props"><div>{{ props.row.title }}<div class="has-text-grey">{{ props.row.description }}</div></div></b-table-column> <b-table-column field="amount_used" :label="\'Использовали\'|gettext" class="has-text-nowrap has-width-10" numeric sortable v-slot="props"><span v-if="props.row.amount_used">{{ $plural(\'раз|раза|раз\', props.row.amount_used) }}</span></b-table-column> <b-table-column field="profile_id" sortable class="has-text-nowrap has-width-10" :label="\'Статус\'|gettext" sortable v-slot="props"> <div class="tag has-tag-dot" :class="props.row.is_active?\'is-success\':\'is-danger\'">{{props.row.is_active?\'Активный\':\'Не активный\'|gettext}}</div> </b-table-column> <b-table-column field="tms_created" :label="\'Дата добавления\'|gettext" class="has-text-nowrap has-width-10" sortable v-slot="props">{{ props.row.tms_created|datetime }}</b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <div v-if="isAllow && $refs.filterbox.hasFilter || filter.query"> <i class="fal fa-search fa-5x has-text-grey-light"></i> <h3>{{\'Ничего не найдено\'|gettext}}</h3> </div> <div v-else> <div class="row"> <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3"> <h3 class="has-p-2 has-text-grey-light has-text-centered has-mb-2"><i :class="[\'fal\', \'has-text-grey-light\', texts[type].icon]" style="font-size: 5rem"></i></h3> <div class="has-mb-2">{{texts[type].description|gettext}}</div> <button class="button" @click="openForm(null)" class="button is-primary" v-if="$auth.isAllowTariff(\'business\')" :class="{disabled: isReadonly}"><i class=\'fa fa-plus has-mr-1\'></i>{{texts[type].button|gettext}}</button> <div class="has-text-centered" v-else><div class="tag is-danger" style="top: -1px;position: relative;">biz</div> <span class=\'has-text-danger\'>{{\'Доступно на business-тарифе\'|gettext}}</span></div> </div> </div> </div> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div>'}),window.$app.defineComponent("products","vue-products-form",{data:function(){return{isUpdating:!1,isFetching:!1,isReadonly:!1,price:0,values:{title:"",sku:"",price:0,price_compare:null,weight:0,width:null,height:null,length:null,amount:null,is_visible:!0,is_shipping:!1,is_active:!0,is_sellable:!0,has_orders:!1,is_variants_all:!0,variants_ids:[],offers:[],options:[],variants:[],pictures:[],collections:[]},variants:{global_variants:[]},activeTab:"common",variantAction:null,picturesUpdating:0}},created:function(){var e=this;this.isReadonly=!this.$auth.isAllowEndpoint("products/set"),this.product_id?this.fetchData(!0):(this.isFetching=!0,this.$api.get("products/info").then(function(t){e.isFetching=!1,e.variants=t.response.product.info.variants}))},computed:{amountSnippet:function(){return this.$gettext("Когда товар закончится, он станет недоступен для заказа. Оставьте поле пустым если товар не ограничен в количестве")},linkProduct:function(){return this.$account.link+"/o/"+this.values.product_id.toString(16)+"/"},amountVariantsValues:function(){return _.reduce(_.map(this.values.variants,function(t){return t.variant_values.length}),function(t,e){return t*e})},variantsLength:function(){var e=1;return _.each(this.values.variants,function(t){return e*=t.variant_values.length}),e}},props:["product_id"],mixins:[FormModel],methods:{updateAmounts:function(){if(0<_.size(this.values.variants)&&!this.values.is_variants_all){var t=0,e=this.values.offers;for(i=0;i<e.length;i++){if(e[i].is_visible&&(null===e[i].amount||""==e[i].amount.toString()))return void(this.values.amount=null);e[i].is_visible&&(t+=parseInt(e[i].amount))}this.values.amount=t}},onAction:function(t){switch(t){case"delete":this.onDelete();break;case"archive":this.onArchive();break;case"clone":var e=!1;_.each(this.values.variants,function(t){e=e||"local"==t.variant_type}),e?this.$alert("Товар содержит варианты, заданные в карточке товара через локальные свойства. Пересоздайте свойства как глобальные и повторите попытку.","is-danger"):(this.product_id=null,this.values.title="",this.values.title="",_.each(this.values.offers,function(t){return t.offer_id=null}),_.each(this.values.options,function(t){return t.option_id=null}),this.$refs.title.focus())}},onArchive:function(){var e=this;this.$confirm(this.$gettext("Вы уверены что хотите отправить этот товар в архив?"),"is-warning").then(function(){e.$api.post("products/archive",{product_ids:[e.product_id]},e).then(function(t){"success"==t.result&&e.$parent.close()})})},onRestore:function(){var e=this;this.$api.get("products/restore",{product_ids:[this.product_id]},this).then(function(t){"success"==t.result&&e.$parent.close()})},onDelete:function(){var e=this;this.$confirm(this.$gettext("Вы уверены что хотите удалить этот товар? Вы не сможете его вернуть!"),"is-danger").then(function(){e.$api.get("products/delete",{product_ids:[e.product_id]},e).then(function(t){"success"==t.result&&e.$parent.close()})})},fetchData:function(t){var s=this;this.isFetching=t,this.$api.get(["products/get","products/info"],{product_id:this.product_id},this).then(function(t){s.isFetching=!1;var e=t.response.product;s.values=e.values,s.variants=e.info.variants,s.updateAmounts()})},updateData:function(){var e=this;this.isUpdating=!0;var t=this.$clone(this.values);t.product_id=this.product_id,t.pictures=_.map(t.pictures,function(t){return t.picture_id}),t.collections=_.map(t.collections,"collection"),t.offers=_.map(t.offers,function(t){return t.variants=_.map(t.variants,"key"),t}),t.variants=_.map(t.variants,function(t){switch(t.variant_type){case"local":t.variant_values=_.map(t.variant_values,"value");break;case"global":t={variant_id:t.variant_id,variant_type:t.variant_type}}return t}),this.$api.post("products/set",t,this).then(function(t){"success"==t.result&&e.$parent.close(),e.isUpdating=!1}).catch(function(t){e.isUpdating=!1})},onVariantAction:function(){var t=this;null!=this.variantAction&&(null==this.values.variants&&(this.values.variants=[]),"add"==this.variantAction?this.values.variants.push({variant_id:null,variant_title:"",variant_values:[],variant_type:"local"}):this.values.variants.push(this.variants.global_variants[this.variantAction]),Vue.nextTick(function(){t.variantAction=null}),_.each(this.values.offers,function(t){t.variants.push({variant_id:null,key:""})}))},onRemoveOffer:function(t){var e=this;this.$confirm(this.$gettext("Вы уверены, что хотите удалить этот вариант?"),"is-danger").then(function(){e.values.offers.splice(t,1),e.updateAmounts()})},onAddOffer:function(){var t=_.map(this.values.variants,function(t){return{variant_id:t.variant_id,key:""}});this.values.offers.push({offer_id:null,variants:t,price:null,amount:null,sku:null,is_visible:!0})},onAddAllOffers:function(){var i=this,s=_.map(this.values.variants,"variant_values");100<this.variantsLength?this.$alert("Всего вариантов: "+this.$number(this.variantsLength)+' шт. Вы не можете иметь более 100 вариантов продукта. Удалите некоторые свойства или используйте опцию "Активируйте все возможные варианты"',"is-danger"):this.variantsLength>this.values.offers.length&&this.$confirm(this.$format(this.$gettext("Будет добавлено вариантов: {1} шт. Добавить?"),this.$number(this.variantsLength-this.values.offers.length)),"is-warning",{yes:this.$gettext("Да"),no:this.$gettext("Нет")}).then(function(){var t=_.reduce(s,function(t,s){return _.flatten(_.map(t,function(e){return _.map(s,function(t){return e.concat([t.key])})}))},[[]]),e=_.map(i.values.offers,function(t){return _.map(t.variants,function(t){return t.key}).join(":")});_.each(t,function(s){var t;-1==e.indexOf(s.join(":"))&&(t=_.map(i.values.variants,function(t,e){return{variant_id:t.variant_id,key:s[e]}}),i.values.offers.push({offer_id:null,variants:t,price:null,amount:null,sku:null,is_visible:!0}))})})},onRemoveVariant:function(e){var t=this;this.$confirm(this.$gettext("Вы уверены, что хотите удалить это свойство?"),"is-danger").then(function(){_.each(t.values.offers,function(t){t.variants.splice(e,1)}),t.values.variants.splice(e,1),0==t.values.variants.length&&(t.values.offers=[]);var s=[];t.values.offers=_.filter(t.values.offers,function(t){var e=_.map(t.variants,function(t){return t.key}).join(":");return-1==s.indexOf(e)&&(s.push(e),!0)}),t.updateAmounts()})},onAddValue:function(t,e){t.variant_values.pop();var s=_.maxBy(t.variant_values,"key");_.find(t.variant_values,["value",e])||t.variant_values.push({key:s?s.key+1:0,value:e})},onValuesRemove:function(e,t,s){function i(){_.each(a.values.offers,function(t){t.variants[s].key>=e.key&&""!==t.variants[s].key&&t.variants[s].key--}),_.each(t.variant_values,function(t){t.key>=e.key&&t.key--})}var a=this,l=_.sumBy(this.values.offers,function(t){return e.key===t.variants[s].key?1:0});l?(t.variant_values.splice(e.key,0,e),this.$confirm(this.$gettext("Вместе с удалением значения этой опции будут удалены добавленные варианты: %s шт.").replace("%s",l),"is-danger").then(function(){t.variant_values.splice(e.key,1),a.values.offers=_.filter(a.values.offers,function(t){return e.key!==t.variants[s].key}),i()})):i()},onRemoveOption:function(t){var e=this;this.$confirm(this.$gettext("Вы уверены, что хотите удалить эту опцию?"),"is-danger").then(function(){e.values.options.splice(t,1)})},onAddOption:function(){this.values.options.push({option_id:null,title:"",price:0})},onPicturesUploading:function(t){this.picturesUpdating=t}},template:'<div class="modal-card modal-card-large" :class="{\'is-rtl\': $account.locale.text_direction == \'rtl\'}"> <header class="modal-card-head"> <p class="modal-card-title" v-if="product_id">{{\'Товар\'|gettext}} <a target="_blank" :href="linkProduct" v-if="values.product_id" class="is-product-link"><i class="fas fa-external-link has-mr-1"></i></a></p> <p class="modal-card-title" v-else>{{\'Новый товар\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs has-text-left"> <li :class="{active: activeTab== \'common\'}"><a href="#" @click="activeTab = \'common\'"><span class="is-hidden-mobile">{{\'Общая информация\'|gettext}}</span><span class="is-visible-inline-mobile">{{\'Общие\'|gettext}}</span></a></li> <li :class="{active: activeTab== \'offers\'}"><a href="#" @click="activeTab = \'offers\'">{{\'Варианты\'|gettext}}</a></li> <li :class="{active: activeTab== \'options\'}"><a href="#" @click="activeTab = \'options\'">{{\'Опции\'|gettext}}</a></li> </ul> <section class="modal-card-body modal-card-body-blocks" v-show="activeTab == \'common\'"> <section> <div class="row row-small"> <div class="col-xs-8 has-mb-2"> <b-field :label="\'Название товара\'|gettext" :message="errors.title" :class="{\'has-error\': errors.title}"> <b-input v-model="values.title" :disabled="isReadonly" maxlength="255" :has-counter="false" ref="title" class="has-rtl"></b-input> </b-field> </div> <div class="col-xs-4 has-mb-2"> <b-field :label="\'Артикул\'|gettext" :message="errors.sku" :class="{\'has-error\': errors.sku}"> <b-input v-model="values.sku" :disabled="isReadonly" maxlength="50" :has-counter="false" class="has-rtl"></b-input> </b-field> </div> </div> <b-field :label="\'Описание товара\'|gettext" :message="errors.description" :class="{\'has-error\': errors.description}"> <vue-component-emoji-picker v-model="values.description"> <b-input v-model="values.description" :disabled="isReadonly" type="textarea" maxlength="65535" :has-counter="false" class="has-rtl"></b-input> </vue-component-emoji-picker> </b-field> <div class="row"> <div class="col-sm-4 col-xs-12 has-mb-2"> <div class="row row-small"> <div class="col-xs-6"> <b-field :label="\'Цена\'|gettext" :message="errors.price" :class="{\'has-error\': errors.price}"> <div class="has-feedback"> <number v-model="values.price" :precision="$account.currency.precision" :disabled="isReadonly" class="input has-text-left"/> <span class="form-control-feedback has-text-grey-light">{{ $account.currency.title }}</span> </div> </b-field> </div> <div class="col-xs-6"> <b-field :label="\'Старая цена\'|gettext" :message="errors.price_compare" :class="{\'has-error\': errors.price_compare}"> <div class="has-feedback"> <number v-model="values.price_compare" :precision="$account.currency.precision" :disabled="isReadonly" class="input has-text-left"/> <span class="form-control-feedback has-text-grey-light">{{ $account.currency.title }}</span> </div> </b-field> </div> </div> </div> <div class="col-sm-8 col-xs-12 has-mb-2"> <b-field :label="\'Коллекции\'|gettext" :message="errors.collections" :class="{\'has-error\': errors.collections}"> <vue-component-autocomplete-collections v-model="values.collections" :disabled="isReadonly" :placeholder="\'Начните вводить название коллекции\'|gettext"/> </b-field> </div> </div> </section> <section> <div class="row"> <div class="col-sm-3 col-xs-12"> <b-field :label="\'Количество в наличии\'|gettext" :message="errors.amount" :class="{\'has-error\': errors.amount}"> <div class="has-feedback"> <number v-model="values.amount" placeholder="∞" precision="0" :disabled="isReadonly || ((_.size(values.variants)> 0) && !values.is_variants_all)" class="input has-text-left" maxlength="6" /> <span class="form-control-feedback has-text-grey-light">шт</span> </div> </b-field> <div class="has-text-grey is-visible-mobile has-mb-2">{{amountSnippet}}</div> </div> <transition name="fade"> <div class="col-sm-9 col-xs-12 last-xs" v-if="values.is_shipping"> <label class="label">{{\'Вес и габариты товара для доставки\'|gettext}}</label> <div class="row row-small"> <div class="col-sm-3 col-xs-12 has-xs-mb-2"> <b-field :message="errors.weight" :class="{\'has-error\': errors.weight}" expanded> <div class="has-feedback"> <number v-model="values.weight" :precision="$account.weight.precision" :disabled="isReadonly || !values.is_shipping" class="input has-text-left"/> <span class="form-control-feedback has-text-grey-light">{{$account.weight.unit_title}}</span> </div> </b-field> </b-field> </div> <div class="col-sm-3 col-xs-4"> <b-field :message="errors.price_compare" :class="{\'has-error\': errors.price_compare}"> <div class="has-feedback"> <number :placeholder="\'Ширина\'|gettext" precision="0" v-model="values.width" maxlength="5" :disabled="isReadonly || !values.is_shipping" class="input has-text-left" max="65535"/> <span class="form-control-feedback has-text-grey-light">мм</span> </div> </b-field> </div> <div class="col-sm-3 col-xs-4"> <b-field :message="errors.price_compare" :class="{\'has-error\': errors.price_compare}"> <div class="has-feedback"> <number :placeholder="\'Высота\'|gettext" precision="0" v-model="values.height" maxlength="5" :disabled="isReadonly || !values.is_shipping" class="input has-text-left" max="65535"/> <span class="form-control-feedback has-text-grey-light">мм</span> </div> </b-field> </div> <div class="col-sm-3 col-xs-4"> <b-field :message="errors.price_compare" :class="{\'has-error\': errors.price_compare}"> <div class="has-feedback"> <number :placeholder="\'Глубина\'|gettext" precision="0" v-model="values.length" maxlength="5" :disabled="isReadonly || !values.is_shipping" class="input has-text-left" max="65535"/> <span class="form-control-feedback has-text-grey-light">мм</span> </div> </b-field> </div> </div> </div> </transition> </div> <div class="has-text-grey is-hidden-mobile">{{amountSnippet}}</div> </section> <section> <div class="row row-small"> <div class="col-sm col-xs-12"> <b-checkbox v-model="values.is_shipping" :disabled="isReadonly" class="is-product-checkbox">{{\'Требуется доставка\'|gettext}}</b-checkbox> <b-checkbox v-model="values.is_visible" :disabled="isReadonly" class="is-product-checkbox">{{\'Виден в каталоге\'|gettext}}</b-checkbox> <b-checkbox v-model="values.is_sellable" :disabled="isReadonly" class="is-product-checkbox">{{\'Доступен для покупки\'|gettext}}</b-checkbox> </div> </div> </section> <section> <b-field :label="\'Фотографии товара\'|gettext"> <vue-component-pictures v-model="values.pictures" :disabled="isReadonly" @startUploading="onPicturesUploading" @stopUploading="onPicturesUploading" accept=\'image/jpeg,image/png,image/gif\' multiple></vue-component-pictures> </b-field> </section> </section> <section class="modal-card-body modal-card-body-blocks" v-show="activeTab == \'offers\'"> <section> <div class="has-mb-2"> <p>{{\'Добавьте варианты, если этот товар поставляется в нескольких версиях, таких как разные размеры или цвета.\'|gettext}}</p> </div> <div class="row"> <div class="col-xs-12 col-sm-4"> <b-select @input="onVariantAction()" v-model="variantAction" :placeholder="\'-- Действие --\'|gettext" :disabled="values.variants.length>= 4 || isReadonly"> <optgroup :label="\'Действие\'|gettext"> <option value="add">{{\'Добавить новое свойство\'|gettext}}</option> </optgroup> <optgroup label="Глобальные свойства" v-if="variants.global_variants.length"> <option :value="i" :disabled="_.find(values.variants, [\'variant_id\', g.variant_id])" v-for="(g, i) in variants.global_variants">{{ g.variant_title }}</option> </optgroup> </b-select> </div> </div> </section> <section v-if="values.variants.length"> <div class="is-hidden-mobile"> <div class="row row-small"> <div class="col-xs-12 col-sm-3"> <label class="label has-mb-2">{{\'Название свойства\'|gettext}}</label> </div> <div class="col-xs-12 col-sm-9"> <label class="label has-mb-2">{{\'Значения свойства\'|gettext}}</label> </div> </div> </div> <div class="row row-small has-mb-2" :class="{disabled: isReadonly}" v-for="(v, index) in values.variants"> <div class="col-xs-12 col-sm-3"> <input type="text" v-model="v.variant_title" class="input has-xs-mb-2" :placeholder="\'Укажите название опции\'|gettext" :disabled="isReadonly || (v.variant_type == \'global\')"> </div> <div class="col-xs"> <b-taginput v-model="v.variant_values" field="value" @add="onAddValue(v, $event)" @remove="onValuesRemove($event, v, index)" confirm-key-codes=\'[13]\' :placeholder="\'Укажите значения через запятую\'|gettext" :disabled="isReadonly || (v.variant_type == \'global\')" attached> </div> <div class="col-xs col-shrink text-xs-right"> <button type="button" class="button is-danger" :disabled="isReadonly" @click="onRemoveVariant(index)"><i class="fa fa-trash-alt"></i></button> </div> </div> </section> <section v-if="values.variants.length"> <b-checkbox v-model="values.is_variants_all" :disabled="isReadonly">{{\'Активировать все возможные варианты\'|gettext}}</b-checkbox> <div v-if="!values.is_variants_all" class="has-mt-2 is-scrollable-offers"> <div class="has-mb-2"> <mx-item class="is-hidden-mobile mx-item-header"> <div class="item-row row"> <div class="col-xs-2 col-sm col-sm-shrink has-text-centered"> <div style="visibility: hidden;height:1px"> <a class="button has-text-danger"><i class="fa fa-eye"></i></a> </div> </div> <div class="col-sm is-paddingless"> <div class="item-row row"> <div class="col-sm" v-for="v in values.variants">{{v.variant_title}}</div> </div> </div> <div class="is-paddingless" :class="\'col-sm-\'+(values.sku?6:4)"> <div class="item-row row"> <div class="col-sm has-text-left">{{\'Цена\'|gettext}}</div> <div class="col-sm has-text-left">{{\'Количество\'|gettext}}</div> <div class="col-sm has-text-left" v-if="values.sku">{{\'Артикул\'|gettext}}</div> <div class="col-xs-2 col-sm col-sm-shrink has-text-centered"> <div style="visibility: hidden;height:1px"> <a class="button has-text-danger"><i class="fa fa-trash-alt"></i></a> </div> </div> </div> </div> </div> </mx-item> <mx-item v-if="values.offers.length == 0"> <div class="item-row row"> <div class="col-xs has-text-centered has-text-grey-light">{{\'Варианты пока не добавлены\'|gettext}}</div> </div> </mx-item> <mx-item v-for="(o, index) in values.offers"> <div class="item-row row"> <div class="col-xs-2 col-sm col-sm-shrink has-text-right is-hidden-mobile"> <button type="button" class="button is-light" :disabled="isReadonly" :class="{disabled: isReadonly}" tabindex="-1" @click="o.is_visible = !o.is_visible;updateAmounts()"><i :class="[\'fa\', {\'fa-eye\': o.is_visible, \'fa-eye-slash\': !o.is_visible}]"></i></button> </div> <div class="col-sm is-paddingless"> <div class="item-row row"> <div class="col-sm" v-for="(v, index) in o.variants" :style="{opacity: o.is_visible?\'1\':\'.5\'}"> <b-select v-model="v.key" :disabled="isReadonly || !o.is_visible" expanded> <option value="">{{\'-- Не выбрано --\'|gettext}}</option> <option v-for="w in values.variants[index].variant_values" :value="w.key">{{w.value}}</option> </b-select> </div> </div> </div> <div class="is-paddingless" :class="\'col-sm-\'+(values.sku?6:4)"> <div class="item-row row"> <div class="col-sm col-xs-12 has-xs-mb-2" :style="{opacity: o.is_visible?\'1\':\'.5\'}"> <div class="has-feedback"> <number type="text" class="input has-text-left" :precision="$account.currency.precision" :placeholder=\'values.price\' v-model="o.price" :disabled="isReadonly || !o.is_visible"/> <span class="form-control-feedback has-text-grey-light">{{$account.currency.title}}</span> </div> </div> <div class="col-sm col-xs-12 has-xs-mb-2" :style="{opacity: o.is_visible?\'1\':\'.5\'}"> <div class="has-feedback"> <number type="text" placeholder="∞" class="input has-text-left" :precision="0" v-model="o.amount" @input="updateAmounts" :disabled="isReadonly || !o.is_visible"/> <span class="form-control-feedback has-text-grey-light">шт</span> </div> </div> <div class="col-sm col-xs-12 has-xs-mb-2" :style="{opacity: o.is_visible?\'1\':\'.5\'}" v-if="values.sku"> <input type="text" v-model="o.sku" maxlength="50" class="input" :disabled="isReadonly || !o.is_visible" placeholder="Артикул"> </div> <div class="col-xs-6 col-sm col-sm-shrink has-text-right is-visible-mobile"> <button type="button" class="button is-light is-fullwidth" :disabled="isReadonly" tabindex="-1" :class="{disabled: isReadonly}" @click="o.is_visible = !o.is_visible"><i :class="[\'fa\', {\'fa-eye\': o.is_visible, \'fa-eye-slash\': !o.is_visible}]"></i></button> </div> <div class="col-xs-6 col-sm col-sm-shrink has-text-right last-xs"> <button type="button" class="button has-text-danger is-fullwidth" :disabled="isReadonly" tabindex="-1" :class="{disabled: isReadonly}" @click="onRemoveOffer(index)"><i class="fa fa-trash-alt"></i></button> </div> </div> </div> </div> </mx-item> </div> <div class="level"> <div class="level-left has-text-grey"> {{\'Всего вариантов\'|gettext}}: {{values.offers.length|number}} </div> <div class="level-right"> <a @click="onAddOffer" v-if="!isReadonly" :class="{disabled: values.offers.length>= 100 || values.offers.length >= variantsLength}">{{\'Добавить вариант\'|gettext}}</a><span class="has-text-grey" style="padding:0 .7rem"> &bull;</span> <a @click="onAddAllOffers" v-if="!isReadonly" :class="{disabled: amountVariantsValues== values.offers.length}">{{\'Добавить все варианты\'|gettext}}</a> </div> </div> </div> </section> </section> <section class="modal-card-body modal-card-body-blocks" v-show="activeTab == \'options\'"> <section> <div class="has-mb-2"> <p>{{\'Вы можете добавить дополнительные опции к вашему товару\'|gettext}}</p> </div> <div class="has-mb-2" id=\'productsOptionsBody\' v-if="values.options.length"> <mx-item class="is-hidden-mobile mx-item-header"> <div class="item-row row"> <div class="col-xs-9">{{\'Опция\'|gettext}}</div> <div class="col-xs col-price">{{\'Цена\'|gettext}}</div> <div class="col-xs col-shrink has-text-centered"> <a href=\'#\' class="button has-text-danger" style="visibility: hidden;height:1px"><i class="fa fa-trash-alt"></i></a> </div> </div> </mx-item> <mx-item v-for="(o, index) in values.options"> <div class="item-row row"> <div class="col-sm-9 col-xs-12 has-xs-mb-2"><input type="text" class="input" :placeholder="\'Укажите название опции\'|gettext" v-model="o.title" :disabled="isReadonly"></div> <div class="col-sm col-xs-10 col-price"> <div class="has-feedback"> <number type="text" class="input has-text-left" :precision="$account.currency.precision" v-model="o.price" :disabled="isReadonly"/> <span class="form-control-feedback has-text-grey-light">{{ $account.currency.title }}</span> </div> </div> <div class="col-xs-2 col-sm col-sm-shrink has-text-centered"> <button type="button" class="button has-text-danger" @click="onRemoveOption(index)" :disabled="isReadonly" :class="{disabled: isReadonly}"><i class="fa fa-trash-alt"></i></button> </div> </div> </mx-item> </div> <a href=\'#\' @click="onAddOption()" v-if="!isReadonly">{{\'Добавить опцию\'|gettext}}</a> </section> </section> <footer class="modal-card-foot level"> <div class="level-left" v-if="!isReadonly && values.product_id"> <vue-component-action-button @action="onAction" v-if="values.is_active" :title="\'Действие\'|gettext"> <template slot="actions"> <b-dropdown-item value="clone"><i class="fa fa-clone has-mr-1"></i>{{\'Дублировать\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider" aria-role="menuitem"> <b-dropdown-item value="archive"><i class="fa fa-archive "></i>{{\'В архив\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider" aria-role="menuitem"> <b-dropdown-item value="delete" class="has-text-danger" :disabled="values.has_orders"><i class="fa fa-trash-alt has-mr-1"></i>{{\'Удалить\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> <button v-if="!values.is_active" @click="onRestore" type="button" class="button is-success" name="action" value="restore"><i class="fa fa-undo has-mr-1"></i>{{\'Восстановить\'|gettext}}</button> </div> <div class="level-left" v-if="!values.product_id"> <button class="button is-dark is-hidden-tablet" type="button" @click="$parent.close()">{{\'Отмена\'|gettext}}</button> </div> <div class="level-right"> <button class="button is-dark" type="button" @click="$parent.close()" v-if="isReadonly">{{\'Закрыть\'|gettext}}</button> <button v-else class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData" :disabled="picturesUpdating> 0">{{\'Сохранить\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("products","vue-products-import-form",{data:function(){return{data:null,isUpdating:!1,isFetching:!0,is_done:!1,amount_inserted:0,amount_products:0}},mounted:function(){var e=this;this.$api.get("products/import/info").then(function(t){e.columns=t.response.products.import.columns,e.isFetching=!1})},mixins:[FormModel],methods:{updateData:function(){var e=this;this.isUpdating=!0,this.$api.post("products/import/set",{data:this.data},this).then(function(t){"success"==t.result&&(e.amount_inserted=t.response.amount_inserted,e.amount_products=t.response.amount_products,e.is_done=t.response.is_done),e.isUpdating=!1}).catch(function(t){e.isUpdating=!1})}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Загрузка товаров из Excel\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="message is-success" v-if="is_done"><div class="message-body">Добавленно товаров: {{amount_inserted|number}} из {{amount_products|number}}</div></div> <div v-else> <vue-component-grid class="has-mb-4" :columns="columns" v-model="data" v-if="!isFetching"/> <div class="block-arrow-left-top" style="margin-top: -15px;opacity:0.5"> Скопируйте нужные ячейки из Excel и вставьте в эту таблицу </div> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button v-if="!is_done" class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Загрузить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("products","vue-products-list",{data:function(){return{isSortable:!1,isReadonly:!1,isFiltering:!1,isFetching:!1,columns:!1,columns_props:{title:{label:"Название",sortable:!0},status:{label:"Статус",classname:"has-width-10"},price:{label:"Цена",numeric:!0,sortable:!0,classname:"has-text-nowrap has-width-10"},weight:{label:"Вес",numeric:!0,sortable:!0,classname:"has-text-nowrap has-width-10"},tms_created:{label:"Дата добавления",sortable:!0,classname:"has-text-nowrap has-width-10"},collections:{label:"Коллекции",classname:"has-text-nowrap"},amount:{label:"Кол-во в наличии",classname:"has-text-nowrap",numeric:!0,sortable:!0}},dropdown_items:[{label:this.$gettext("Требуется доставка"),items:{"is_shipping:*":"Не важно","is_shipping:true":this.$gettext("Да"),"is_shipping:false":this.$gettext("Нет")}},{label:this.$gettext("Виден в каталоге"),items:{"is_visible:*":"Не важно","is_visible:true":this.$gettext("Да"),"is_visible:false":this.$gettext("Нет")}},{label:this.$gettext("Доступен для покупки"),items:{"is_sellable:*":"Не важно","is_sellable:true":this.$gettext("Да"),"is_sellable:false":this.$gettext("Нет")}}],filter:{query:"",price:{from:"",until:""},collections:[],properties:["is_shipping:*","is_visible:*","is_sellable:*"]},sortField:"ordernum",sortOrder:"desc",tmpSort:{field:"",order:""},isAllow:this.$auth.isAllowTariff("business")}},mixins:[ListModel,SortableTable],props:["type"],computed:{table_columns:function(){var s=this;if(!this.columns)return[];for(var t=_.map(this.columns,function(t){var e=s.columns_props[t];return e.visible=!0,e.field=t,e}),e=0;e<6-this.columns.length;e++)t.push({visible:!1});return t[0].numeric=!1,t},currency_title:function(){return this.$account.currency.title},linkShop:function(){return this.$account.link+"/m/"}},watch:{type:function(){this.checkedRows=[],this.clearPages(),this.fetchData(!0)},isSortable:function(t){t?window.addEventListener("scroll",this.resortEventScroll):window.removeEventListener("scroll",this.resortEventScroll)}},created:function(){this.isReadonly=!this.$auth.isAllowEndpoint("products/set"),this.$io.on("events:products.list:refresh",this.refreshProducts),this.$io.on("events:products.list:delete",this.deleteProduct),this.$io.on("events:products.list:columns",this.refreshColumns),this.fetchData(!0)},beforeDestroy:function(){this.isSortable&&window.removeEventListener("scroll",this.resortEventScroll),this.$io.off("events:products.list:refresh",this.refreshProducts),this.$io.off("events:products.list:delete",this.deleteProduct),this.$io.off("events:products.list:columns",this.refreshColumns)},methods:{resortEventScroll:function(){this.bottomVisible()&&!this.isFetching&&this.next&&(this.page++,this.fetchData(!0))},bottomVisible:function(){var t=window.scrollY,e=document.documentElement.clientHeight;return document.documentElement.scrollHeight<e+t+200&&t},onDropdown:function(t){switch(t){case"view":window.open(this.linkShop);break;case"import":this.$modal("vue-products-import-form");break;case"columns":this.$modal("vue-products-columns-form");break;case"resort":this.isSortable=!0,this.tmpSort={field:this.sortField,order:this.sortOrder},this.onSort("ordernum","desc"),this.fields=[]}},stopResort:function(){this.onSort(this.tmpSort.field,this.tmpSort.order),this.isSortable=!1},onAction:function(t){var e=this,s=null;switch(t){case"delete":s=this.$gettext("Вы уверены что хотите удалить эти товары?")}function i(){e.$api.post("products/"+t,{product_ids:e.checkedRows},e).then(function(t){"success"==t.result&&(e.checkedRows=[])})}s?this.$confirm(s,"is-danger").then(i):i()},refreshProducts:function(t){var s=this;null!=t.product_ids?this.merge(this.fields,"product_id",t.product_ids,function(t,e){s.$api.get("products/list",{filter:{product_ids:t}}).then(function(t){s.fields=e(t.response.products.fields)})}):(this.clearPages(),this.fetchData(!1,!1))},deleteProduct:function(t){console.log(t),console.log(this.fields);var e=this.checkIds(this.fields,"product_id",t.product_ids);console.log(e),e.length&&(this.next=this.current,this.fetchData(!1,!0))},refreshColumns:function(t){var e=_.difference(t,this.columns).length;this.columns=t,e&&this.fetchData(!1,!0)},fetchData:function(t,e){function s(t){i.isSortable?i.fields=i.fields.concat(t.fields):i.fields=t.fields,i.columns||(i.columns=t.columns)}var i=this;!e&&this.checkCache(s)||(this.isFetching=t,this.$api.post(this.columns?"products/list":["products/list","products/columns/get"],{next:this.next,count:this.perPage,columns:this.columns,sort_field:this.sortField,sort_order:this.sortOrder,filter:this.isSortable?[]:this.filter,type:this.type}).then(function(t){i.cachePage(t.response.products,s),i.isFetching=!1,i.isFiltering=!1}).catch(function(t){throw i.accesses=[],i.total=0,i.isFetching=!1,i.isFiltering=!1,t}))},onFilter:function(){this.isFiltering=!0,this.clearPages(),this.fetchData(!0)},clickRow:function(t){this.$modal("vue-products-form",{product_id:t.product_id},this)},onReSort:function(t,e,s,i){var a=this;this.isFetching=!0,this.$api.get("products/resort",{product_id:s.product_id,index_product_id:i.product_id},this).then(function(t){a.isFetching=!1})}},template:'<div> <vue-component-filterbox ref="filterbox" v-if="isAllow" :showToolbar="isSortable" @dropdown="onDropdown" :is-visible="fields.length" @action="onAction" @filter="onFilter" :disabled="isFetching" :selected="checkedRows" v-model="filter" :with-dropdown="true" :with-filters="true" :with-buttons="true"> <template slot="toolbar"> <a @click="stopResort" class="button is-dark"><i class="fal fa-check has-mr-2"></i>{{\'Завершить сортировку\'|gettext}}</a> </template> <template slot="buttons"> <a @click="clickRow({product_id: null})" class="button is-primary is-fullwidth" :class="{disabled: isReadonly}"><i class=\'fa fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый товар\'|gettext}} </span></a> </template> <template slot="dropdown"> <b-dropdown-item value="view"><i class="fal fa-shopping-bag has-text-centered has-mr-1"></i> {{\'Открыть магазин\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider"> <b-dropdown-item value="columns"><i class="fas fa-bars fa-rotate-90 has-text-centered has-mr-1"></i> {{\'Настроить колонки таблицы\'|gettext}}</b-dropdown-item> <b-dropdown-item value="resort" class="is-hidden-touch"><i class="fal fa-arrows has-text-centered has-mr-1"></i> Настроить порядок товаров</b-dropdown-item> <b-dropdown-item value="import"><i class="fal fa-cloud-upload has-text-centered has-mr-1"></i> {{\'Загрузить товары\'|gettext}}</b-dropdown-item> </template> <template slot="actions"> <b-dropdown-item value="archive" v-if="type == \'active\'"><i class="fa fa-archive has-text-centered has-mr-1"></i> {{\'В архив\'|gettext}}</b-dropdown-item> <b-dropdown-item value="restore" v-if="type == \'archive\'"><i class="fa fa-undo has-text-centered has-mr-1"></i> {{\'Восстановить\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider" v-if="type == \'active\'"> <b-dropdown-item value="delete" v-if="type == \'active\'" class="has-text-danger"><i class="fa fa-trash-alt has-text-centered has-mr-1"></i> {{\'Удалить\'|gettext}}</b-dropdown-item> </template> <template slot="filters"> <div class="row"> <div class="col-xs-12 col-sm-4 has-mb-2"> <label class="label">{{\'Коллекции\'|gettext}}</label> <vue-component-autocomplete-collections v-model="filter.collections" :allow-new="false" :placeholder="\'Начните вводить название коллекции\'|gettext"></vue-component-autocomplete-collections> </div> <div class="col-xs-12 col-sm-4 has-mb-2"> <label class="label">{{\'Цена\'|gettext}}</label> <div class="row row-small"> <div class="col-xs"><number v-model="filter.price.from" :precision="$account.currency.precision" class="input" :placeholder="\'От\'|gettext"></number></div> <div class="col-xs col-shrink has-text-grey" style="line-height: 2.45em">-</div> <div class="col-xs"><number v-model="filter.price.until" :precision="$account.currency.precision" class="input" :placeholder="\'До\'|gettext"></number></div> </div> </div> <div class="col-xs-12 col-sm-4 has-mb-2"> <label class="label">{{\'Свойства\'|gettext}}</label> <vue-component-dropdown-checklist :list="dropdown_items" v-model="filter.properties"></vue-component-dropdown-checklist> </div> </div> </template> </vue-component-filterbox> <div class="container has-mb-3" :class="{\'has-mt-3\': !isAllow}"> <b-table :paginated="!isSortable" backend-pagination backend-sorting pagination-simple :data="fields" :loading="isFetching" :current-page="page" :per-page="perPage" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" @click="clickRow" @sort="onSort" :draggable="isSortable" @dragstart="rowDragStart" :class="{\'is-sortable\': isSortable}" @drop="rowDrop" @dragover="rowDragOver" @dragleave="rowDragLeave" :hoverable="!isSortable" bordered v-if="columns"> <b-table-column v-for="(column, index) in table_columns" :field="column.field" :label="column.label|gettext" :visible="column.visible" :numeric="column.numeric && index" :key="index" :sortable="column.sortable && !isSortable" :width="column.width" v-slot="props"> <template v-slot:header="{ column }" v-if="!index"> <b-checkbox @click.native.stop="onCheckAll($event, checkedRows)" v-if="!index && fields.length"></b-checkbox>{{column.label}} </template> <div :class="[column.classname, {\'has-text-grey-light\': !props.row.is_visible}]"> <b-checkbox @click.native.stop v-if="index == 0":disabled="isReadonly" :native-value="props.row.product_id" v-model="checkedRows"></b-checkbox> <span v-if="column.field == \'status\'"><div class="tag has-tag-dot" :class="props.row.is_active?\'is-success\':\'is-danger\'">{{props.row.is_active?\'Активный\':\'Не активный\'|gettext}}</div></span> <span v-if="column.field == \'price\'"> <span v-if="props.row.price_compare" class="has-text-grey-light has-text-strike">{{ props.row.price_compare|currency(currency_title) }}</span> {{ props.row.price|currency(currency_title) }} </span> <span v-if="column.field == \'title\'"> <div class="has-text-danger is-pulled-right" v-if="!props.row.is_visible"><i class="fas fa-lock has-ml-1"></i></div> {{ props.row.title }} </span> <span v-if="column.field == \'weight\'"> {{ props.row.weight|weight(true) }}</span> <span v-if="column.field == \'tms_created\'"> {{ props.row.tms_created|datetime }} </span> <span v-if="column.field == \'amount\'"> {{ props.row.amount }} </span> <span v-if="column.field == \'collections\'"> <div class="tags" v-f="props.row.collections"> <span class="tag is-light" v-for="c in props.row.collections">{{ c }}</span> </div> </span> </div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <div v-if="isAllow && $refs.filterbox.hasFilter || filter.query"> <i class="fal fa-search fa-5x has-text-grey-light"></i> <h3>{{\'Ничего не найдено\'|gettext}}</h3> </div> <div v-else> <div class="row"> <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3"> <div v-if="type == \'active\'"> <h3 class="has-p-2 has-text-grey-light has-text-centered has-mb-2"><i class="fal fa-boxes-alt has-text-grey-light" style="font-size: 5rem"></i></h3> <div class="has-mb-2">{{\'Список всех товаров, которые представлены в вашем магазине и доступны для заказа\'|gettext}}</div> <a @click="clickRow({product_id: null})" class="button is-primary" :class="{disabled: isReadonly}" v-if="isAllow"><i class=\'fa fa-plus\'></i><span class=\'has-ml-1\'>{{\'Новый товар\'|gettext}} </span></a> </div> <div v-else> <h3 class="has-p-2 has-text-grey-light has-text-centered has-mb-2"><i class="fal fa-archive has-text-grey-light" style="font-size: 5rem"></i></h3> <div class="has-mb-2">{{\'Снятые с продажи товары. Заказать товар из архива нельзя, но при необходимости любой товар из архива можно снова сделать активным\'|gettext}}</div> </div> </div> </div> <div class="has-text-centered" v-if="!isAllow"><div class="tag is-danger" style="top: -1px;position: relative;">biz</div> <span class=\'has-text-danger\'>{{\'Доступно на business-тарифе\'|gettext}}</span></div> </div> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div>'}),window.$app.defineComponent("products","vue-products-variants-form",{data:function(){return{isUpdating:!1,isFetching:!1,isReadonly:!1,query:"",values:{variant_title:"",variant_values:[{key:void 0,value:"",is_busy:!1}]}}},created:function(){this.isReadonly=!this.$auth.isAllowEndpoint("products/variants/set"),this.variant_id&&this.fetchData(!0)},props:["variant_id"],mixins:[FormModel],computed:{isUsed:function(){return-1!=_.findIndex(this.values.variant_values,{is_used:!0})}},methods:{textChanged:function(t){var e=this.values.variant_values;!e[e.length-1].key&&e[e.length-1]==t&&e[e.length-1].value.trim().length&&e.push({key:void 0,value:"",is_busy:!1}),1<e.length&&!e[e.length-2].key&&e[e.length-2]==t&&!e[e.length-2].value.trim().length&&e.pop()},fetchData:function(t){var e=this;this.isFetching=t,this.$api.get("products/variants/get",{variant_id:this.variant_id}).then(function(t){e.isFetching=!1,e.values=t.response.variant.values,e.values.variant_values.push({key:void 0,value:"",is_busy:!1})})},updateData:function(){var e=this,t=_.clone(this.values),s=_.maxBy(t.variant_values,"key"),i=null==s||null==s.key?-1:s.key;t.variant_values=_.filter(_.map(t.variant_values,function(t){var e=null!=t.key||t.value.trim().length?t:null;return e&&null==e.key&&(e.key=++i),e})),this.isUpdating=!0,this.$api.post("products/variants/set",t,this).then(function(t){"success"==t.result&&e.$parent.close(),e.isUpdating=!1}).catch(function(t){e.isUpdating=!1})},onAction:function(t){var e=this;switch(t){case"delete":this.$confirm(this.$gettext("Вы уверены что хотите удалить этот вариант? Вы не сможете её вернуть!"),"is-danger").then(function(){e.$api.post("products/variants/delete",{variant_id:e.variant_id},e).then(function(t){"success"==t.result&&e.$parent.close()})})}},onRemoveValue:function(t){this.values.variant_values.splice(t,1)}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Глобальное свойство товара\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <b-field :label="\'Название\'|gettext" :message="errors.variant_title" :class="{\'has-error\': errors.variant_title}"> <b-input v-model="values.variant_title" :placeholder="\'Укажите название свойства\'|gettext" :disabled="isReadonly"></b-input> </b-field> <label class="label">{{\'Варианты\'|gettext}}</label> <mx-item v-for="(v, i) in values.variant_values"> <div class="item-row row"> <div class="col-xs"><input type=\'text\' class=\'input variant-item\' v-model="v.value" @input="textChanged(v)" :disabled="isReadonly" :placeholder="\'Укажите значение свойства\'|gettext"></div> <div class="col-xs col-shrink"><button type="button" tabindex="-1" class="button has-text-danger is-text" :class="{disabled: isReadonly || v.is_used}" @click="onRemoveValue(i)" :disabled="isReadonly || v.is_used"><i class="fa fa-trash-alt"></i></button></div> </div> </mx-item> </section> </section> <footer class="modal-card-foot level"> <div class="level-left" v-if="!isReadonly && variant_id && !isUsed"> <vue-component-action-button @action="onAction" :title="\'Действие\'|gettext"> <template slot="actions"> <b-dropdown-item value="delete" class="has-text-danger"><i class="fa fa-trash-alt has-mr-1"></i>{{\'Удалить\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> </div> <div class="level-left" v-if="!variant_id"> <button class="button is-dark is-hidden-tablet" type="button" @click="$parent.close()">{{\'Отмена\'|gettext}}</button> </div> <div class="level-right"> <button v-if="isReadonly" class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button v-else class="button is-primary" :class="{\'is-loading\': isUpdating, disabled: isReadonly}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("products","vue-products-variants-list",{data:function(){return{isFetching:!1,isFiltering:!1,isReadonly:!1,filter:{query:""},sortField:"variant_title",sortOrder:"asc",perPage:20,columns:["variant_title","variant_values"],isAllow:this.$auth.isAllowTariff("business")}},mixins:[ListModel],created:function(){this.isReadonly=!this.$auth.isAllowEndpoint("products/variants/set"),this.$io.on("events:products.variants.list:refresh",this.refreshvariants),this.$io.on("events:products.variants.list:delete",this.deletevariant),this.fetchData(!0)},destroyed:function(){this.$io.off("events:products.variants.list:refresh",this.refreshvariants),this.$io.off("events:products.variants.list:delete",this.deletevariant)},computed:{columns_props:function(){if(!this.columns)return[];for(var s={variant_title:{label:"Название",sortable:!0,classname:"has-text-nowrap has-width-25"},variant_values:{label:"Варианты"}},t=_.map(this.columns,function(t){var e=s[t];return e.visible=!0,e.field=t,e}),e=0;e<11-this.columns.length;e++)t.push({visible:!1});return t}},methods:{refreshvariants:function(t){var s=this;null!=t.product_ids?this.merge(this.fields,"variant_id",t.variant_ids,function(t,e){s.$api.get("products/variants/list",{filter:{variant_ids:t}}).then(function(t){s.fields=e(t.response.variants.fields)})}):this.fetchData(!1,!0)},deletevariant:function(t){this.checkIds(this.fields,"variant_id",t.variant_ids).length&&this.fetchData(!1,!0)},fetchData:function(t,e){var s=this;!e&&this.checkCache()||(this.isFetching=t,this.$api.get("products/variants/list",{next:this.next,count:this.perPage,sort_field:this.sortField,sort_order:this.sortOrder,filter:this.filter}).then(function(t){s.cachePage(t.response.variants),s.isFetching=!1,s.isFiltering=!1}).catch(function(t){throw s.accesses=[],s.total=0,s.isFetching=!1,s.isFiltering=!1,t}))},onPageChange:function(t){this.page=t,this.fetchData(!0)},onFilter:function(){this.isFiltering=!0,this.clearPages(),this.fetchData(!0)},clickRow:function(t){this.openForm(t.variant_id)},openForm:function(t){this.$modal("vue-products-variants-form",{variant_id:t},this)}},template:'<div> <vue-component-filterbox ref="filterbox" v-if="isAllow" @filter="onFilter" v-model="filter" :is-visible="fields.length" :disabled="isFetching" :with-buttons="true"> <template slot="buttons"> <button class="button" @click="openForm(null)" class="button is-primary is-fullwidth" :class="{disabled: isReadonly}"><i class=\'fa fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Добавить свойство\'|gettext}}</span></button> </template> </vue-component-filterbox> <div class="container has-mb-3" :class="{\'has-mt-3\': !isAllow}"> <b-table paginated backend-pagination backend-sorting pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" @click="clickRow" @sort="onSort" hoverable bordered> <b-table-column v-for="(column, index) in columns_props" :field="column.field" :label="column.label|gettext" :class="column.classname" :numeric="column.numeric" :key="index" :visible="column.visible" :sortable="column.sortable" :width="column.width" v-slot="props"> <div v-if="column.field == \'variant_title\'">{{ props.row.variant_title }}</div> <div v-if="column.field == \'variant_values\'"><div class="tags"> <span class="tag is-light" v-for="c in props.row.variant_values">{{ c }}</span> </div></div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <div v-if="isAllow && $refs.filterbox.hasFilter || filter.query"> <i class="fal fa-search fa-5x has-text-grey-light"></i> <h3>{{\'Ничего не найдено\'|gettext}}</h3> </div> <div v-else> <div class="row"> <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3"> <h3 class="has-p-2 has-text-grey-light has-text-centered has-mb-2"><i class="fal fa-swatchbook has-text-grey-light" style="font-size: 5rem"></i></h3> <div class="has-mb-2">{{\'Глобальные свойства содержат наборы "вариантов", которые в один клик могут быть добавлены к любому товару магазина. Через глобальные свойства удобно размещать размерную сетку или иные параметры, выбор которых покупателем актуален более чем для одного товара вашего ассортимента.\'|gettext}}</div> <button class="button" @click="openForm(null)" class="button is-primary" :class="{disabled: isReadonly}" v-if="isAllow"><i class=\'fa fa-plus has-mr-1\'></i>{{\'Добавить свойство\'|gettext}}</button> <div class="has-text-centered" v-else><div class="tag is-danger" style="top: -1px;position: relative;">biz</div> <span class=\'has-text-danger\'>{{\'Доступно на business-тарифе\'|gettext}}</span></div> </div> </div> </div> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div>'}),window.$app.defineModule("products",[{path:"/:page_id/products/active/",component:"vue-products-list",meta:{statistic_event:"products",title:"Активные"},props:{type:"active"},name:"products.active"},{path:"/:page_id/products/archive/",component:"vue-products-list",meta:{title:"Архив"},props:{type:"archive"},name:"products.archive"},{path:"/:page_id/products/collections/",component:"vue-products-collections-list",meta:{title:"Коллекции"},props:!0,name:"products.collections"},{path:"/:page_id/products/variants/",component:"vue-products-variants-list",meta:{title:"Свойства"},props:!0,name:"products.variants"},{path:"/:page_id/products/promocodes/",component:"vue-products-discounts-list",meta:{title:"Промокоды"},props:{type:"promocode"},name:"products.promocodes"},{path:"/:page_id/products/discounts/",component:"vue-products-discounts-list",meta:{title:"Акции"},props:{type:"automatic"},name:"products.discounts"}]);
