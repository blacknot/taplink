var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function _defineProperty(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}window.$app.defineComponent("manager","vue-manager-cms-blog-author-form",{data:function(){return{isFetching:!1,isUpdating:!1,values:{author_id:null,title:"",subtitle:"",picture:null}}},props:["author_id"],mixins:[FormModel],created:function(){this.fetchData()},methods:{fetchData:function(){var t=this;this.isFetching=!0,this.$api.get("manager/blog/authors/get",{author_id:this.author_id}).then(function(e){t.isFetching=!1,"success"==e.result&&(t.values=e.response.values)})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/blog/authors/set",Object.assign({author_id:this.author_id},this.values)).then(function(e){t.isUpdating=!1,"success"==e.result&&(t.$parent.$parent.fetchData(),t.$parent.close())})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Автор</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <b-field :label="\'Имя\'|gettext" :message="errors.title" :class="{\'has-error\': errors.title}"> <input class="input" v-model="values.title"></input> </b-field> <b-field :label="\'Должность\'|gettext" :message="errors.subtitle" :class="{\'has-error\': errors.subtitle}"> <input class="input" v-model="values.subtitle"></input> </b-field> <vue-component-pictures v-model="values.picture" class-container="is-square" accept=\'image/jpeg,image/png,image/gif\' :cropper-options="{aspectRatio: 1, autoCropArea: .9, viewMode: 1, movable: true, zoomable: false}" :button-title="\'Загрузить картинку\'|gettext" button-icon="fa fal fa-cloud-upload" updatable></vue-component-pictures> </section> <footer class="modal-card-foot"> <button class="button is-primary level-item" :class="{\'is-loading\': isUpdating}" type="button" @click="updateData">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-blog-authors-list-form",{data:function(){return{isFetching:!1,fields:[]}},props:["language_id"],created:function(){this.fetchData()},methods:{fetchData:function(){var t=this;this.isFetching=!0,this.$api.get("manager/blog/authors/list",{language_id:this.language_id}).then(function(e){t.isFetching=!1,"success"==e.result&&(t.fields=e.response.authors.fields),t.isFetching=!1})},openAuthorForm:function(e){this.$modal("vue-manager-cms-blog-author-form",{author_id:e},this)}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Авторы</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section v-for="f in fields"> <div class="media"> <div class="media-content"> <h4>{{f.title}}</h4> <p class="has-text-grey">{{f.subtitle}}</p> </div> <button class="button is-light media-right" @click="openAuthorForm(f.author_id)"><i class="fal fa-pencil"></i></button> </div> </section> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-blog-autocomplete-tags",{data:function(){return{isFetchingTags:!1,autocompleteTags:[]}},props:{value:String,disabled:{type:Boolean,default:!1},placeholder:{type:String}},watch:{value:function(){this.$emit("input",this.value)}},methods:{onAddingTag:function(e){return!_.find(this.value,["tag_id",e.tag_id])},onAddedTag:function(e){"string"==typeof e&&(this.value.pop(),this.value.push({tag_id:null,tag:e}))},asyncAutocompleteTag:_.debounce(function(e){var t=this;""!=e.trim()?(this.isFetchingTags=!0,this.$api.get("manager/blog/tags/search",{query:e}).then(function(e){t.autocompleteTags=_.differenceWith(e.response.tags.search,t.value,function(e,t){return e.tag_id==t.tag_id}),t.isFetchingTags=!1})):this.autocompleteTags=[]},300)},template:'<b-taginput v-model="value" :data="autocompleteTags" :before-adding="onAddingTag" @add="onAddedTag" :allow-new="true" confirm-key-codes=\'[13]\' autocomplete field="tag" @typing="asyncAutocompleteTag" :placeholder="placeholder" :disabled="disabled" :loading="isFetchingTags" attached> <template slot-scope="props"> <strong>{{props.option.tag}}</strong> </template> <template slot="empty"> <div v-if="isFetchingTags">{{\'Идет загрузка\'|gettext}}</div> <div v-else>{{\'Ничего не найдено\'|gettext}}</div> </template> </b-taginput>'}),window.$app.defineComponent("manager","vue-manager-cms-blog-form",{data:function(){return{currentTab:"common",isUpdating:!1,isFetching:!1,values:{post_id:null,author_id:null,title:"",seo_title:"",filename:"",body:"",body_doc:this.post_id?null:[],seo_description:"",is_draft:!0,picture:null,picture_position:"50% 50%",language_id:null,tags:"",picture_color:"#eeeeee",snippet:"",comments_question:""},menu:{common:this.$gettext("Общие"),settings:this.$gettext("Настройки"),picture:this.$gettext("Изображение"),seo:this.$gettext("Настройки SEO")},variants:null}},created:function(){var t=this;this.post_id?this.fetchData(!0):(this.isFetching=!0,this.$api.get("manager/blog/info").then(function(e){t.isFetching=!1,"success"==e.result&&(t.variants=e.response.variants,t.values.language_id=e.response.language_id)})),this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.save}},this.$form.top.title=this.$gettext("Публикация")},props:["post_id"],mixins:[FormModel],computed:{link:function(){var e=this.variants.language_id[this.values.language_id].language_code,t="ru"==e?"ru":"at";return"//taplink."+t+"/"+("ru"==t?"":e+"/")+"blog/"+this.values.filename+".html"},authors:function(){var e=null!=this.variants.author_id[this.values.language_id]?this.variants.author_id[this.values.language_id]:[];return _.combine(_.map(e,"author_id"),e)},categories:function(){var e=null!=this.variants.category_id[this.values.language_id]?this.variants.category_id[this.values.language_id]:[];return _.combine(_.map(e,"category_id"),e)},allowAuthors:function(){return this.$auth.isAllowEndpoint("manager/blog/authors/set")}},watch:{isUpdating:function(e){this.$form.top.buttons.save.classname="is-primary"+(e?" is-loading":"")},values:{handler:function(){null==this.authors[this.values.author_id]&&(this.values.author_id=null),null==this.categories[this.values.category_id]&&(this.values.category_id=null)},deep:!0}},methods:{filenameFilter:function(e){var t=e.which?e.which:e.keyCode;String.fromCharCode(t).match(/[A-Za-z0-9\-_]/)||e.preventDefault()},filenameFilterAfter:function(e){e.target.value=e.target.value.toLowerCase().replace(/[^a-z0-9\-_ ]/g,"").trim().replace(/ /g,"_")},fetchData:function(e){var t=this;this.isFetching=e,this.$api.get(this.variants?"manager/blog/get":["manager/blog/get","manager/blog/info"],{post_id:this.post_id}).then(function(e){t.isFetching=!1,"success"==e.result&&(t.values=e.response.blog.post,t.variants||(t.variants=e.response.variants),t.$nextTick(function(){$mx(t.$refs.title).trigger("change"),$mx(t.$refs.snippet).trigger("change")}))})},save:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/blog/set",this.values,this).then(function(e){"success"==e.result&&t.$form.close(),t.isUpdating=!1}).catch(function(e){t.isUpdating=!1})},openAuthorsForm:function(){this.$modal("vue-manager-cms-blog-authors-list-form",{language_id:this.values.language_id})}},template:'<div :class="{\'blog-tab-editor\': currentTab== \'common\'}"> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a v-for="(t, k) in menu" class="button" :class="{active: k== currentTab}" @click="currentTab = k">{{t|gettext}}</a> <a v-if="values.post_id" :href="link" target="_blank" class="button is-text" style="text-decoration: none;margin-left: auto;z-index: 1"><i class="fa fa-external-link has-mr-1"></i>Открыть в отдельной вкладке</a> </div> </div> </div> </div> <section class="container has-mb-2 has-mt-2" v-show="currentTab == \'common\'"> <textarea ref="title" v-model="values.title" :placeholder="\'Заголовок\'|gettext" class="autoresize-init input title has-mb-2 has-mt-3" style="background: transparent;border: 0;padding: 0;box-shadow: none !important;font-size: 3.2rem;font-weight: bold;text-align:center;resize: none;"></textarea> <textarea ref="snippet" v-model="values.snippet" :placeholder="\'Краткое описание\'|gettext" class="autoresize-init input has-mb-2 title" style="line-height: 1.5;font-size: 18px;background: transparent;border: 0;padding: 0;box-shadow: none !important;resize: none;"></textarea> <div class="blog-post-picture has-mb-4" style="background-size: cover" :style="{\'background-image\': values.picture?(\'url(\'+values.picture.link+\')\'):\'\', \'background-color\': values.picture_color, \'background-position\': values.picture_position}"> <div style="padding-top: 30%"></div> </div> <vue-component-htmleditor v-model="values.body_doc" v-if="values.body_doc" class="hero-block blog-post-editor"></vue-component-htmleditor> </section> <section class="container has-mt-2 has-mb-2" v-if="currentTab == \'seo\'"> <b-field :label="\'Заголовок страницы\'|gettext"> <b-input maxlength="4096" type="text" v-model="values.seo_title"></b-input> </b-field> <b-field :label="\'SEO описание\'|gettext"> <b-input maxlength="4096" type="textarea" v-model="values.seo_description"></b-input> </b-field> </section> <section class="container has-mt-2 has-mb-2" v-if="currentTab == \'picture\'"> <div class="row"> <div class="col-xs-12 col-md-6 has-mb-2"> <label class="label">{{\'Изображение\'|gettext}}</label> <vue-component-pictures v-model="values.picture" class="blog-picture" :button-title="\'Загрузить картинку\'|gettext" button-icon="fa fal fa-cloud-upload" updatable></vue-component-pictures> <p class="has-text-grey-light has-mb-2">{{\'Размер изображения\'|gettext}}: 600x400 px</p> <vue-component-colorpicker v-model="values.picture_color" position-horizontal="left" :withOpacity="false" :label="\'Цвет фона\'|gettext" class="has-mb-3"></vue-component-colorpicker> </div> <div class="col-xs-12 col-md-6 has-mb-2"> <div v-if="values.picture"> <label class="label">{{\'Размеры\'|gettext}}</label> <div class="media"> <vue-component-background-position-editor v-model="values.picture_position" class="media-left"/> <div class="media-content"> <div :style="{\'background-color\': \'#aaa\', \'background-size\': \'cover\', \'background-image\': \'url(\'+values.picture.link+\')\', \'background-position\': values.picture_position}" class="has-mb-2"><div style="padding-top: 30%"></div></div> <div :style="{\'width\': \'30%\', \'background-color\': \'#aaa\', \'background-size\': \'cover\', \'background-image\': \'url(\'+values.picture.link+\')\', \'background-position\': values.picture_position}"><div style="padding-top: 100%"></div></div> </div> </div> </div> </div> </div> </section> <section class="container has-mt-2 has-mb-2" v-if="currentTab == \'settings\'"> <div class="row row-small"> <div class="col-xs-12 col-sm has-mb-3"> <b-field :label="\'Имя файла\'|gettext" :message="errors.filename" :class="{\'has-error\': errors.filename}"> <div class="control is-expanded"><input class="input" v-model="values.filename" @keypress="filenameFilter" @change="filenameFilterAfter" @keyup="filenameFilterAfter"></input></div> </b-field> </div> <div class="col-xs-12 col-sm-2 has-mb-3"> <b-field :label="\'Язык\'|gettext" :message="errors.language_id" :class="{\'has-error\': errors.language_id}"> <b-select v-model="values.language_id" :disabled="isFetching" icon-pack="fal" icon="globe" expanded> <option :value="null">{{\'-- Все языки --\'|gettext}}</option> <option v-for="(l, k) in variants.language_id" :value="k"> {{l.language_title}} </option> </b-select> </b-field> </div> <div class="col-xs-12 col-sm-2 has-mb-3" v-if="variants.author_id[values.language_id] != undefined"> <b-field :label="\'Автор\'|gettext" :message="errors.author_id" :class="{\'has-error\': errors.author_id}"> <vue-component-dropdown v-model="values.author_id" class="is-action-dropdown" button-class="button" :expanded="true"> <span slot="button"><i class="fal fa-user has-mr-1 has-text-grey"></i><span v-if="values.author_id !== null">{{authors[values.author_id].title}}</span><span v-else>{{\'Не выбрано\'|gettext}}</span></span> <div> <b-dropdown-item :value="null" class="has-text-grey">-- {{\'Не выбрано\'|gettext}} --</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider" v-if="_.size(authors)"> <b-dropdown-item v-for="a in authors" :value="a.author_id">{{a.title}}</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider" v-if="allowAuthors"> <b-dropdown-item custom v-if="allowAuthors"><a @click="openAuthorsForm" class="has-text-black"><i class="fa fa-sliders-h has-mr-1"></i>{{\'Настроить\'|gettext}}</a></b-dropdown-item> </div> </vue-component-dropdown> </b-field> </div> </div> <div class="row has-mb-4"> <div class="col-xs-12 col-sm-4"> <b-field :label="\'Метки\'|gettext"> <vue-manager-cms-blog-autocomplete-tags v-model="values.tags"/> </b-field> </div> <div class="col-xs-12 col-sm-4"> <b-field :label="\'Категория\'|gettext"> <vue-component-dropdown v-model="values.category_id" class="is-action-dropdown" button-class="button" :expanded="true"> <span slot="button"><span v-if="values.category_id !== null">{{categories[values.category_id].category}}</span><span v-else>{{\'Не выбрано\'|gettext}}</span></span> <div> <b-dropdown-item :value="null" class="has-text-grey">-- {{\'Не выбрано\'|gettext}} --</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider" v-if="_.size(categories)"> <b-dropdown-item v-for="a in categories" :value="a.category_id">{{a.category}}</b-dropdown-item> </div> </vue-component-dropdown> </b-field> </div> <div class="col-xs-12 col-sm-4"> <b-field label="Время чтения"> <b-input maxlength="3" type="number" v-model="values.reading_time"></b-input> </b-field> </div> </div> <b-field label="Вопрос перед комментариями"> <b-input maxlength="255" v-model="values.comments_question"></b-input> </b-field> <mx-toggle v-model="values.is_draft" :title="\'Черновик\'|gettext"></mx-toggle> </section> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-blog-list",{data:function(){return{isFetching:!1,filter:{query:"",language_id:null,category_id:null},variants:null,perPage:20,info:null}},mixins:[ListModel],props:["page_id"],computed:{allowCategories:function(){return this.$auth.isAllowEndpoint("manager/blog/categories/set")}},created:function(){this.$io.on("events:manager.blog.list:refresh",this.refresh),this.fetchData(!0)},destroyed:function(){this.$io.off("events:manager.blog.list:refresh",this.refresh)},methods:{onFilter:function(){this.clearPages(),this.fetchData(!0)},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.post(this.variants?"manager/blog/list":["manager/blog/list","manager/blog/info"],{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){"success"==e.result&&(s.variants||(s.variants=e.response.variants),s.cachePage(e.response.blog)),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},onPageChange:function(e){this.page=e,this.fetchData()},clickRow:function(e){this.$form.open("vue-manager-cms-blog-form",{post_id:e.post_id})}},template:'<div> <vue-component-submenu menu="manager.cms" :page_id="page_id"></vue-component-submenu> <vue-component-filterbox @filter="onFilter" v-model="filter" :disabled="isFetching" :with-buttons="true" :with-dropdown="!true"> <template slot="buttons" v-if="variants"> <div class="row row-small"> <div class="col-xs" v-if="_.size(variants.category_id)> 1"> <b-select v-model="filter.category_id" :disabled="isFetching" :placeholder="\'-- Все категории --\'|gettext" icon-pack="fal" icon="layer-group"> <option :value="null">{{\'-- Все категории --\'|gettext}}</option> <optgroup v-for="(cl, lid) in variants.category_id" :label="variants.language_id[lid].language_title"> <option v-for="(c, k) in cl" :value="c.category_id"> {{c.category}} </option> </optgroup> </b-select> </div> <div class="col-xs" v-if="_.size(variants.language_id)> 1"> <b-select v-model="filter.language_id" :disabled="isFetching" :placeholder="\'-- Все языки --\'|gettext" icon-pack="fal" icon="globe"> <option :value="null">{{\'-- Все языки --\'|gettext}}</option> <option v-for="(l, k) in variants.language_id" :value="k"> {{l.language_title}} </option> </b-select> </div> <div class="col-xs"> <a @click="$form.open(\'vue-manager-cms-blog-form\')" class="button is-primary is-fullwidth1"><i class="fas fa-plus has-mr-2"></i>{{\'Новая публикация\'|gettext}}</a> </div> </div> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable bordered> <b-table-column field="title" :label="\'Заголовок\'|gettext" v-slot="props"> <div class="has-text-danger is-pulled-right" v-if="props.row.is_draft"><i class="fas fa-eye-slash has-ml-1"></i></div> <div :class="{\'has-text-grey-light\': props.row.is_draft}">{{ props.row.title }}</div> </b-table-column> <b-table-column field="tms_created" :label="\'Дата\'|gettext" numeric v-slot="props"> <div :class="{\'has-text-grey-light\': props.row.is_draft}">{{ props.row.tms_created|date }}</div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-docs-index",{data:function(){return{isFetching:!1,isAddFormOpened:!1,document_id:null,documents:[],variants:null,language_id:null,language_default_id:null,language_add_id:null,books:[],book:null}},props:["page_id"],created:function(){this.$io.on("events:manager.docs.list:refresh",this.refresh),this.fetchData(!0)},destroyed:function(){this.$io.off("events:manager.docs.list:refresh",this.refresh)},computed:{document:function(){return this.documents[this.document_id]||null},locale:function(){return this.document.languages[this.language_id]||null}},methods:{addLanguage:function(){this.document.languages[this.language_add_id]={language_id:this.language_add_id,is_draft:!1,title:"",body:null},this.isAddFormOpened=!1,this.language_id=this.language_add_id,this.language_add_id=null},select:function(s){var a=this;null==this.documents[s]?(this.isFetching=!0,this.$api.get("manager/docs/get",{document_id:s}).then(function(e){var t;"success"==e.result&&(t=e.response.docs,a.documents[s]=t.document,a.document_id=s),a.isFetching=!1})):this.document_id=s},editDocument:function(){null==this.document.languages[this.language_id]&&(this.language_add_id=this.language_default_id,this.addLanguage()),this.$form.open(null),this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.save}},this.$form.top.title="Редактирование"},save:function(){var t=this;this.isFetching=!0,this.$api.post("manager/docs/set",this.document).then(function(e){t.$form.close(),t.isFetching=!1})},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get("manager/docs/index").then(function(e){var t;"success"==e.result&&(t=e.response.docs,s.books=t.books,s.book=t.book,s.variants=t.variants,s.document_id=t.document.document_id,s.documents[s.document_id]=t.document,s.language_default_id=s.language_id=s.variants.language_id[0].language_id),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e})}},template:'<div> <vue-component-submenu menu="manager.cms" :page_id="page_id"></vue-component-submenu> <div class="container has-mt-3 has-mb-3"> <div class="row"> <div class="col-xs-12 col-sm-3"> <div class="docs-sidebar" :class="{disabled: $form.isOpenedHeader}" v-if="book"> <div v-for="item in book.tree"> <a :class="{in: item.id == document_id}" @click="select(item.id)">{{item.title}}</a> <div v-for="s in item.sub" class="is-2"> <a :class="{in: s.id == document_id}" @click="select(s.id)">{{s.title}}</a> </div> </div> </div> </div> <div class="col-xs-12 col-sm-9"> <div v-if="$form.isOpenedHeader"> <div class="has-mb-2"> <div class="level is-mobile"> <div class="level-left"> <div class="select has-mr-1" v-if="language_id != null"> <select class="input" v-model="language_id" :disabled="isFetching"> <option v-for="v in variants.language_id" :value="v.language_id" :disabled="document.languages[v.language_id] == undefined">{{v.language_title}}</option> </select> </div> <button class="button is-dark" @click="isAddFormOpened = true" :disabled="isFetching || (_.size(document.languages) == _.size(variants.language_id))"><i class="fa fa-plus"></i></button> </div> <div class="level-right" v-if="language_id != null"> <mx-toggle v-model="locale.is_draft" :title="\'Черновик\'|gettext" :disabled="isFetching"></mx-toggle> </div> </div> </div> <input v-model="locale.title" placeholder="Заголовок" class="input has-mb-2"> <vue-component-htmleditor v-model="locale.body"></vue-component-htmleditor> </div> <div v-else-if="document"> <div class="has-mb-2"> <button class="button is-dark" @click="editDocument">{{\'Редактировать\'|gettext}}</button> </div> <div class="panel panel-default has-p-2"> <vue-component-document v-model="locale.body" class="hero-block blog-post hero-text" v-if="locale"/> </div> </div> </div> </div> </div> <b-modal v-model="isAddFormOpened" :has-modal-card="true" v-if="variants"> <div class="modal-card has-text-black" style="font-size: 1rem"> <header class="modal-card-head"><p class="modal-card-title">{{\'Добавление языка\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="isAddFormOpened = false"></button></header> <section class="modal-card-body"> <b-select :placeholder="\'Язык\'|gettext" v-model="language_add_id" :disabled="isFetching"> <option v-for="v in variants.language_id" :value="v.language_id" v-if="document.languages[v.language_id] == undefined">{{v.language_title}}</option> </b-select> </section> <div class="modal-card-foot"> <button type="button" class="button is-dark" @click="isAddFormOpened = false">{{\'Закрыть\'|gettext}}</button> <button type="button" class="button is-primary" @click="addLanguage" :disabled="language_add_id == null">{{\'Доабвить\'|gettext}}</button> </div> </div> </b-modal> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-guides-form",{data:function(){return{isUpdating:!1,isFetching:!1,isAddFormOpened:!1,language_id:null,language_add_id:null,currentTab:"common",menu:{common:this.$gettext("Общие"),settings:this.$gettext("Настройки")},values:{guide_id:null,filename:"",locales:{}},variants:{language_id:[]},editor:null,language_id:null}},created:function(){this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.save,disabled:!0}}},props:["guide_id"],mixins:[FormModel],mounted:function(){this.fetchData(!0)},watch:{values:{deep:!0,handler:function(){this.$form.top.title=this.title}},isUpdating:function(e){this.$form.top.buttons.save.classname="is-primary"+(e?" is-loading":"")},language_id:function(e){this.$form.top.buttons.save.disabled=!e}},computed:{title:function(){var e=this.$gettext("Инструкция");return null!=this.language_id&&this.values.locales[this.language_id].title||e}},methods:{addLanguage:function(){this.values.locales[this.language_add_id]={language_id:this.language_add_id,is_draft:!1,title:"",doc:null},this.isAddFormOpened=!1,this.language_id=this.language_add_id,this.language_add_id=null},filenameFilter:function(e){var t=e.which?e.which:e.keyCode;String.fromCharCode(t).match(/[A-Za-z0-9\-_]/)||e.preventDefault()},filenameFilterAfter:function(e){e.target.value=e.target.value.toLowerCase().replace(/[^a-z0-9\-_ ]/g,"").trim().replace(/ /g,"_")},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(this.guide_id?["manager/guides/get","manager/guides/info"]:"manager/guides/info",{guide_id:this.guide_id}).then(function(e){var t;s.isFetching=!1,"success"==e.result&&(null!=(t=e.response.guides).variants&&(s.variants=t.variants),null!=t.values?(s.values=t.values,_.size(s.values.locales)?s.language_id=_.keys(s.values.locales)[0]:s.isAddFormOpened=!0):s.isAddFormOpened=!0)})},save:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/guides/set",this.values,this).then(function(e){"success"==e.result&&t.$form.close(),t.isUpdating=!1}).catch(function(e){t.isUpdating=!1})}},template:'<div> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a v-for="(t, k) in menu" class="button" :class="{active: k== currentTab}" @click="currentTab = k">{{t|gettext}}</a> </div> </div> </div> </div> <div class="container has-mt-2 has-mb-2"> <div class="level is-mobile"> <div class="level-left"> <div class="select has-mr-1" v-if="language_id != null"> <select class="input" v-model="language_id" :disabled="isFetching"> <option v-for="v in variants.language_id" :value="v.language_id" :disabled="values.locales[v.language_id] == undefined">{{v.language_title}}</option> </select> </div> <button class="button is-dark" @click="isAddFormOpened = true" :disabled="isFetching || (_.size(values.locales) == _.size(variants.language_id))"><i class="fa fa-plus"></i></button> </div> <div class="level-right" v-if="language_id != null"> <mx-toggle v-model="values.locales[language_id].is_draft" :title="\'Черновик\'|gettext" :disabled="isFetching"></mx-toggle> </div> </div> </div> <div class="container has-mb-2" v-show="currentTab == \'common\'" :style="{height:isFetching?\'250px\':\'unset\'}"> <vue-component-htmleditor v-model="values.locales[language_id].doc" v-if="language_id != null" class="hero-block blog-post hero-text"></vue-component-htmleditor> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div> <section class="container has-mb-2" v-if="currentTab == \'settings\'"> <div class="panel panel-default has-p-2"> <b-field label="Имя файла" :message="errors.filename" :class="{\'has-error\': errors.filename}"> <p class="control"> <b-field> <div class="control is-expanded"><input class="input" v-model="values.filename" @keypress="filenameFilter" @change="filenameFilterAfter" @keyup="filenameFilterAfter"></input></div> </b-field> </p> </b-field> <b-field label="Заголовок"> <input class="input" v-model="values.locales[language_id].title"></input> </b-field> </div> </section> <b-modal v-model="isAddFormOpened" :has-modal-card="true"> <div class="modal-card has-text-black" style="font-size: 1rem"> <header class="modal-card-head"><p class="modal-card-title">{{\'Добавление языка\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="isAddFormOpened = false"></button></header> <section class="modal-card-body"> <b-select :placeholder="\'Язык\'|gettext" v-model="language_add_id" :disabled="isFetching"> <option v-for="v in variants.language_id" :value="v.language_id" v-if="values.locales[v.language_id] == undefined">{{v.language_title}}</option> </b-select> </section> <div class="modal-card-foot"> <button type="button" class="button is-dark" @click="isAddFormOpened = false">{{\'Закрыть\'|gettext}}</button> <button type="button" class="button is-primary" @click="addLanguage" :disabled="language_add_id == null">{{\'Доабвить\'|gettext}}</button> </div> </div> </b-modal> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-guides-list",{data:function(){return{isFetching:!1,filter:{query:""},perPage:20,variants:null}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.guides.list:refresh",this.refresh),this.fetchData(!0)},destroyed:function(){this.$io.off("events:manager.guides.list:refresh",this.refresh)},methods:{implode:function(e){return _.map(e,function(e){return'<div style="display:flex;align-items:center" '+(e.is_draft?'class="has-text-grey-light"':"")+'><span title="ru" class="iti-flag '+e.language_code+' has-mr-1" style="display: inline-block;"></span>'+e.title+"</div>"}).join("")},onFilter:function(){this.clearPages(),this.fetchData(!0)},refresh:function(e){var s=this;null!=e.guide_ids?this.merge(this.fields,"guide_id",e.guide_ids,function(e,t){s.$api.get("manager/guides/list",{filter:{guide_ids:e}}).then(function(e){s.fields=t(e.response.guides.fields)})}):this.fetchData(!1,!0)},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get(this.next?"manager/guides/list":["manager/guides/list","manager/guides/info"],{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){var t;"success"==e.result&&(null!=(t=e.response.guides).variants&&(s.variants=t.variants),s.cachePage(t)),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},onPageChange:function(e){this.page=e,this.fetchData()},clickRow:function(e){this.$form.open("vue-manager-cms-guides-form",{guide_id:e.guide_id})}},template:'<div> <vue-component-submenu menu="manager.cms" :page_id="page_id"></vue-component-submenu> <vue-component-filterbox @filter="onFilter" v-model="filter" :disabled="isFetching" :with-buttons="true"> <template slot="buttons"> <a @click="$form.open(\'vue-manager-guides-form\')" class="button is-primary is-fullwidth"><i class="fa fa-plus has-mr-2"></i>{{\'Добавить инструкцию\'|gettext}}</a> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable bordered> <b-table-column field="title" label="Группа" class="has-width-20" v-slot="props"> <span class="is-pulled-right tags is-hidden-mobile"><span v-for="l in variants.language_id" class="tag" :class="{\'is-dark\': props.row.languages[l.language_id] != undefined}" :style="{opacity: (props.row.languages[l.language_id] != undefined && props.row.languages[l.language_id].is_draft)?.5:1}">{{l.language_code}}</span></span> <div> <div>{{props.row.title}}</div> <div class="has-text-grey">{{props.row.guide_group_title}}</div> </div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-block-form",{data:function(){return{picture_visible:"show",picture_visible_values:{show:this.$gettext("Показать"),hide:this.$gettext("Скрыть")},option_index:-1,view_options:[],locale:1,language_id:null,currentTab:"html",menu:{html:"HTML",css:"CSS",js:"JS",languages:this.$gettext("Многоязычность"),settings:this.$gettext("Настройки")},isFetching:!1,isUpdating:!1,values:{block_id:null,design_id:null,html:"",css_files:[],js_files:[],block_css:{none:"",xs:"",sm:"",md:""},design_css_fonts:"",block_js:"",design_css:{none:"",xs:"",sm:"",md:""},design_js:"",phrases:{},locales:{},name:"",title:"",css_options:[],models:[]},variants:{},target:"block",view:"view",pictures:null,maxFilesize:this.$account.limits.upload_max_filesize,file:null,isUploading:!1,media:"none"}},props:["block_id","id"],mixins:[FormModel],created:function(){this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.updateData}},this.$form.top.title=this.$gettext("Блок"),this.fetchData(!0)},watch:{isUpdating:function(e){this.$form.top.buttons.save.classname="is-primary"+(e?" is-loading":"")},view:function(e){"pictures"==e&&null===this.pictures&&this.values.design_id&&this.fetchPictures()},currentTab:function(e){"js"==e&&-1!=["options","fonts"].indexOf(this.target)&&(this.target="block")}},computed:{renderLink:function(){return this.block_id&&null!=this.variants.language_id?"/system/page/preview.html?block_id="+this.block_id+"&picture_visible="+this.picture_visible+"&locale="+this.variants.language_id[this.locale].language_code+"&options="+this.view_options:"about:blank"}},methods:{toggleOption:function(e){var t=this.view_options.indexOf(e);-1==t?this.view_options.push(e):this.view_options.splice(t,1)},addOptions:function(){var e=prompt("Укажите название опции","");e&&(this.values.css_options.push({title:e,css:{none:"",xs:"",sm:"",md:""}}),this.option_index=this.values.css_options.length-1)},fetchPictures:function(){var t=this;this.isFetching=!0,this.$api.get("manager/cms/pages/pictures/list",{design_id:this.values.design_id}).then(function(e){"success"==e.result&&(t.pictures=e.response.pictures),t.isFetching=!1}).catch(function(e){t.isFetching=!1})},dropFilesChanged:function(){var t=this;if(/\.(jpe?g|png|gif|svg)$/i.test(this.file.name)){if(this.maxSizeBytes&&this.file.size>this.maxSizeBytes)return this.$alert(this.$gettext("Максимальный размер файла: %s").replace("%s",this.maxFilesize),"is-danger");var e=new FormData;e.append("file",this.file),e.append("design_id",this.values.design_id),e.append("block_id",this.values.block_id),e.append("language_code",i18n.locale),this.isUploading=!0,this.$http.request({url:"/pictures/upload?target=cms",method:"post",data:e}).then(function(e){"success"==e.result||"error"==e.result&&t.$alert(e.error,"is-danger"),t.isUploading=!1,t.file=null,t.fetchPictures()}).catch(function(){t.isUploading=!1,t.$alert(t.$gettext("Во время загрузки картинки возникла ошибка"))})}else this.isUploading=!1,this.$alert(this.$gettext("Недопустимый формат файла"))},designChanged:function(){var s=this;this.isFetching=!0,this.$api.get("manager/cms/pages/blocks/design",{design_id:this.values.design_id}).then(function(e){var t;"success"==e.result&&(t=e.response,s.values.design_css=t.values.css,s.values.design_js=t.values.js,s.values.design_css_fonts=t.values.css_fonts,s.values.js_files=t.values.js_files,s.values.css_files=t.values.css_files,s.pictures=null),s.isFetching=!1}).catch(function(e){s.isFetching=!1})},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(this.block_id?["manager/cms/pages/blocks/get","manager/cms/pages/blocks/info"]:"manager/cms/pages/blocks/info",{id:this.id,block_id:this.block_id}).then(function(e){var t;"success"==e.result&&((t=e.response).values&&(s.values=t.values),s.variants=t.variants),s.isFetching=!1}).catch(function(e){throw s.isFetching=!1,e})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/cms/pages/blocks/set",Object.assign({id:this.id},this.values)).then(function(e){"success"==e.result&&(t.$refs.iframe&&t.$refs.iframe.contentWindow.location.reload(),t.values.block_id||t.$form.close()),t.isUpdating=!1})}},template:'<div class="cms-pages-block-form"> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a v-for="(t, k) in menu" class="button" :class="{active: k== currentTab}" @click="currentTab = k">{{t|gettext}}</a> </div> </div> </div> </div> <section v-if="currentTab == \'languages\'"> <div class="container has-pt-2 has-pb-2"> <vue-manager-cms-pages-locales :locales.sync="values.locales" :phrases.sync="values.phrases" :language_id.sync="language_id" :variants="variants" :disabled="isFetching"/> </div> </section> <section v-if="currentTab == \'settings\'"> <div class="container has-pt-2 has-pb-2"> <b-field :label="\'Заголовок\'|gettext" :message="errors.title" :class="{\'has-error\': errors.title}"> <div class="control is-expanded"><input class="input" v-model="values.title"></input></div> </b-field> <b-field :label="\'Дизайн\'|gettext" :message="errors.title" :class="{\'has-error\': errors.title}"> <b-select class="has-mr-1" v-model="values.design_id" :disabled="isFetching" :placeholder="\'Не выбрано\'|gettext" @input="designChanged"> <option :value="null">-- {{\'Не выбрано\'|gettext}} --</option> <option v-for="(title, id) in variants.design_id" :value="id">{{title}}</option> </b-select> </b-field> <b-field :label="\'Модель\'|gettext" :message="errors.title" :class="{\'has-error\': errors.title}"> <div> <div class="has-mb-2" v-for="(v, k) in values.models" style="display: flex"> <b-select class="has-mr-1" v-model="values.models[k]" :disabled="isFetching" :placeholder="\'Не выбрано\'|gettext"> <option :value="null">-- {{\'Не выбрано\'|gettext}} --</option> <option v-for="m in variants.model_id" :value="m.model_name">{{m.model_title}}</option> </b-select> <button class="button is-light has-text-danger" @click="values.models.splice(k, 1)"><i class="fa fa-trash-alt"></i></button> </div> </div> </b-field> <button class="button is-light" @click="values.models.push(null)"><i class="fa fa-plus has-mr-1"></i>Добавить модель</button> </div> </section> <section v-if="[\'settings\', \'languages\'].indexOf(currentTab) == -1" style="flex-grow: 1" class="row row-noborder"> <div class="col-xs-12 col-sm-6"> <b-field class="has-tabs-style is-marginless" style="flex-grow: 0" v-if="[\'css\', \'js\'].indexOf(currentTab) != -1"> <b-radio-button v-model="target" type="active" class="is-expanded" native-value="block">{{\'Блок\'|gettext}}</b-radio-button> <b-radio-button v-model="target" type="active" class="is-expanded" native-value="design">{{\'Общие\'|gettext}}</b-radio-button> <b-radio-button v-model="target" type="active" class="is-expanded" native-value="options" v-if="currentTab == \'css\'">{{\'Опции\'|gettext}}</b-radio-button> <b-radio-button v-model="target" type="active" class="is-expanded" native-value="fonts" v-if="currentTab == \'css\'">{{\'Шрифты\'|gettext}}</b-radio-button> </b-field> <div v-if="target == \'options\'" style="padding-bottom: 0;display: flex;flex-direction: row;justify-content: space-between;flex-grow:0; background: var(--background-white-color);border-bottom: 1px solid var(--border-grey-color);" class="has-p-2"> <div> <vue-component-dropdown v-model="option_index" class="is-action-dropdown is-cms-pages-choose-locale" button-class="button is-text"> <span slot="button"><b>{{\'Опция\'|gettext}}:</b> <span v-if="option_index != -1">{{values.css_options[option_index].title}}</span><span v-else>{{\'Не выбрано\'|gettext}}</span></span> <b-dropdown-item style="border-radius:1rem" class="is-hidden-desktop">{{\'Отмена\'|gettext}}</b-dropdown-item> <div> <b-dropdown-item v-for="(v, i) in values.css_options" :value="i">{{v.title}}</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider" v-if="_.size(values.css_options)"> <b-dropdown-item @click="addOptions">{{\'Добавить\'|gettext}}</b-dropdown-item> </div> </vue-component-dropdown> </div> <div> </div> </div> <vue-component-codemirror v-if="currentTab == \'html\'" v-model="values.html" mode="text/x-smarty" base-mode="text/html" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'block\' && media== \'none\'" v-model="values.block_css.none" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'block\' && media== \'xs\'" v-model="values.block_css.xs" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'block\' && media== \'sm\'" v-model="values.block_css.sm" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'block\' && media== \'md\'" v-model="values.block_css.md" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'design\' && media== \'none\'" v-model="values.design_css.none" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'design\' && media== \'xs\'" v-model="values.design_css.xs" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'design\' && media== \'sm\'" v-model="values.design_css.sm" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'design\' && media== \'md\'" v-model="values.design_css.md" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'js\' && target== \'block\'" v-model="values.block_js" mode="text/javascript" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'js\' && target== \'design\'" v-model="values.design_js" mode="text/javascript" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'fonts\'" v-model="values.design_css_fonts" mode="text/css" :line-wrapping="false"/> <vue-component-codemirror v-if="currentTab == \'css\' && target== \'options\' && option_index != -1" v-model="values.css_options[option_index].css[media]" mode="text/css" :line-wrapping="false"/> <div v-if="[\'css\', \'js\'].indexOf(currentTab) != -1 && (target == \'design\')" style="display: flex;flex-direction: row;justify-content: space-between;flex-grow:0;padding: .5rem 1rem"> <div>{{\'Файлы\'|gettext}}:</div> <div class="has-text-right"> <span v-if="currentTab == \'css\'">{{_.size(values.css_files)}}</span> <span v-if="currentTab == \'js\'">{{_.size(values.js_files)}}</span> </div> </div> <b-field class="has-tabs-style is-marginless" style="flex-grow: 0" v-if="currentTab == \'css\' && (([\'block\', \'design\'].indexOf(target) != -1) || (target == \'options\' && option_index != -1))"> <b-radio-button v-model="media" type="active" class="is-expanded" native-value="none" style="width:25%">None</b-radio-button> <b-radio-button v-model="media" type="active" class="is-expanded" native-value="xs" style="width:25%">Mobile (max-width: 767px)</b-radio-button> <b-radio-button v-model="media" type="active" class="is-expanded" native-value="sm" style="width:25%">Tablet (max-width: 991px)</b-radio-button> <b-radio-button v-model="media" type="active" class="is-expanded" native-value="md" style="width:25%">Desktop (min-width: 992px)</b-radio-button> </b-field> </div> <div class="col-xs-12 col-sm-6"> <b-field class="has-tabs-style is-marginless" style="flex-grow: 0"> <b-radio-button v-model="view" type="active" class="is-expanded" native-value="view">{{\'Просмотр\'|gettext}}</b-radio-button> <b-radio-button v-model="view" type="active" class="is-expanded" native-value="pictures">{{\'Изображения\'|gettext}}</b-radio-button> </b-field> <div v-if="view == \'view\' && (variants.language_id != undefined)" style="padding-bottom: 0;display: flex;flex-direction: row;justify-content: space-between;flex-grow:0; background: var(--background-white-color);border-bottom: 1px solid var(--border-grey-color);" class="has-p-2"> <div> <vue-component-dropdown v-model="locale" class="is-action-dropdown is-cms-pages-choose-locale" button-class="button is-text"> <span slot="button"><b>{{\'Язык\'|gettext}}:</b> {{variants.language_id[locale].language_title}}</span> <b-dropdown-item style="border-radius:1rem" class="is-hidden-desktop">{{\'Отмена\'|gettext}}</b-dropdown-item> <div> <b-dropdown-item v-for="v in variants.language_id" :value="v.language_id" :disabled="values.locales[v.language_id] == undefined">{{v.language_title}}</b-dropdown-item> </div> </vue-component-dropdown> <vue-component-dropdown v-model="picture_visible" class="is-action-dropdown is-cms-pages-choose-locale" button-class="button is-text"> <span slot="button"><b>{{\'Картинки\'|gettext}}:</b> {{picture_visible_values[picture_visible]}}</span></span> <b-dropdown-item style="border-radius:1rem" class="is-hidden-desktop">{{\'Отмена\'|gettext}}</b-dropdown-item> <div> <b-dropdown-item v-for="(v, k) in picture_visible_values" :value="k">{{v}}</b-dropdown-item> </div> </vue-component-dropdown> <vue-component-dropdown class="is-action-dropdown is-cms-pages-choose-locale" button-class="button is-text" v-if="_.size(values.css_options)"> <span slot="button"><b>{{\'Опции\'|gettext}}:</b> <span v-if="!view_options.length">{{\'Не выбрано\'|gettext}}</span><span v-else>{{view_options.length}}</span></span> <b-dropdown-item style="border-radius:1rem" class="is-hidden-desktop">{{\'Отмена\'|gettext}}</b-dropdown-item> <div> <b-dropdown-item v-for="(v, i) in values.css_options" @click="toggleOption(i)" :class="{\'is-active\': view_options.indexOf(i) != -1}">{{v.title}}</b-dropdown-item> </div> </vue-component-dropdown> </div> <div> <a :href="renderLink" target="_blank" class="button is-text" style="text-decoration: none"><i class="fa fa-external-link has-mr-1"></i>Открыть в отдельной вкладке</a> </div> </div> <iframe :src="renderLink" frameborder="0" width="100%" height="100%" ref="iframe" v-if="view == \'view\'"></iframe> <div v-if="view == \'pictures\'" class="has-p-2" style="overflow-y:hidden"> <div class="panel panel-default cms-pages-pictures"> <b-upload v-model="file" @input="dropFilesChanged(false)" class="has-p-2 has-text-primary has-p-2"> <a :class="{\'is-loading\': isUploading}"><div><i class="fa fa-plus has-mr-2"></i>{{\'Загрузить картинку\'|gettext}}</div></a> </b-upload> <div v-for="p in pictures"> <img :src="\'//\'+$account.storage_domain+\'/p/\'+p.picture.filename"> <div> <input type="text" class="input" v-model="p.name"> </div> </div> </div> </div> </div> </section> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-blocks",{data:function(){return{filter:{query:"",design_id:null,page_id:null},variants:null,isFetching:!1}},mixins:[ListModel],props:["id"],created:function(){this.filter.page_id=this.id,this.$io.on("events:manager.cms.pages.blocks:refresh",this.refresh),this.fetchData(!0)},destroyed:function(){this.$io.off("events:manager.cms.pages.blocks:refresh",this.refresh)},methods:{refreshData:function(e){e.id==this.id&&this.refresh()},onFilter:function(){this.clearPages(),this.fetchData(!0)},newBlock:function(){this.$form.open("vue-manager-cms-pages-block-form",{block_id:null,id:this.id})},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get(this.variants?"manager/cms/pages/blocks/list":["manager/cms/pages/blocks/list","manager/cms/pages/blocks/info"],{id:this.id,next:this.next,count:this.perPage,filter:this.filter}).then(function(e){"success"==e.result&&(s.cachePage(e.response),s.variants||(s.variants=e.response.variants)),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},clickRow:function(e){this.$form.open("vue-manager-cms-pages-block-form",{block_id:e.block_id,id:this.id})}},template:'<div> <vue-component-filterbox :is-visible="fields.length" :disabled="isFetching" v-model="filter" :with-buttons="true" @filter="onFilter"> <template slot="buttons" v-if="variants"> <div class="row row-small"> <div class="col-xs" v-if="_.size(variants.page_id)> 1" :placeholder="\'-- Все страницы --\'|gettext"> <b-select v-model="filter.page_id" :disabled="isFetching" icon-pack="fal" icon="home"> <option :value="null">{{\'-- Все страницы --\'|gettext}}</option> <option v-for="l in variants.page_id" :value="l.page_id">{{l.page_title}}</option> </b-select> </div> <div class="col-xs" v-if="_.size(variants.design_id)> 1" :placeholder="\'-- Все дизайны --\'|gettext"> <b-select v-model="filter.design_id" :disabled="isFetching" icon-pack="fal" icon="palette"> <option :value="null">{{\'-- Все дизайны --\'|gettext}}</option> <option v-for="(l, k) in variants.design_id" :value="k">{{l}}</option> </b-select> </div> <div class="col-xs"> <a @click="newBlock" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый блок\'|gettext}} </span></a> </div> </div> </template> </vue-component-filterbox> <div class="container has-mb-3"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable bordered> <b-table-column field="title" :label="\'Заголовок\'|gettext" v-slot="props"> <div><span v-if="props.row.title">{{ props.row.title }}</span><span v-else class="has-text-grey">{{\'Без имени\'|gettext}}</span></div> </b-table-column> <b-table-column field="title" :label="\'Страница\'|gettext" v-slot="props"> <div>{{ props.row.page_title }}</div> </b-table-column> <b-table-column field="title" :label="\'Дизайн\'|gettext" v-slot="props"> <div>{{ props.row.desgn_title }}</div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-compile-form",{data:function(){return{isUpdating:!1,isDone:!1,steps:{compile:{state:"wait",title:"Компиляция"},compact:{state:"wait",title:"Упаковка"},compress:{state:"wait",title:"Сжатие"},sync:{state:"wait",title:"Синхронизация"}}}},props:["variant_id","page_id"],created:function(){this.$io.on("events:manager.cms.pages:compile",this.step)},destroyed:function(){this.$io.off("events:manager.cms.pages:compile",this.step)},computed:{amountDone:function(){return _.sum(_.map(this.steps,function(e){return"wait"!=e.state?1:0}))}},methods:{step:function(e){this.steps[e.name].state=e.state,this.amountDone==_.size(this.steps)&&(this.isUpdating=!1,this.isDone=!0)},update:function(){var t=this;this.isUpdating=!0,this.$api.get("manager/cms/pages/variants/compile",{page_id:this.page_id,variant_id:this.variant_id}).then(function(e){"success"==e.result&&t.step({name:"compile",state:"good"})})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Обновление</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="cms-pages-compile-steps"> <div v-for="s in steps"> <i class="fas" :class="{\'fa-circle\': s.state == \'wait\', \'fa-check-circle\': s.state == \'good\', \'fa-times-circle\': s.state == \'bad\', \'has-text-success\': s.state == \'good\', \'has-text-danger\': s.state == \'bad\', \'has-text-grey\': s.state == \'wait\'}"></i> {{s.title}} </div> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary level-item" :class="{\'is-loading\': isUpdating}" type="button" @click="update" :disabled="isDone">{{\'Обновить\'|gettext}}</button> </footer> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-conditions-editor",{data:function(){return{conditions_types:["host","lang","country"],comparisons_types:{"==":"Равен","<>":"Не равен"}}},props:["value"],methods:{addConditionSection:function(){this.value.push([{name:null,value:"",comp:"=="}])},addConditionRule:function(e){this.value[e].push({name:null,value:""})},removeConditionRule:function(e,t){var s=this;this.$confirm("Вы действительно хотите удалить?").then(function(){s.value[e].splice(t,1)})},removeConditionSection:function(e){var t=this;this.$confirm("Вы действительно хотите удалить?").then(function(){t.value.splice(e+1,1)})}},template:'<div> <div style="padding: .5rem 0 1rem;display: flex;justify-content: space-between"><span style="font-weight: bold">{{\'Условия отображения\'|gettext}}</span><a @click="removeConditionSection(-1)" class="has-text-danger" v-if="value.length">{{\'Удалить\'|gettext}}</a></div> <div v-for="(list, i) in value"> <div class="has-mb-2 row row-small" v-for="(v, j) in list"> <div class="col-sm-3"> <b-select expanded v-model="v.name" :placeholder="\'Не выбрано\'|gettext"> <option :value="null">-- {{\'Не выбрано\'|gettext}} --</option> <option v-for="t in conditions_types" :value="t">{{t}}</option> </b-select> </div> <div class="col-sm-3"> <b-select expanded v-model="v.comp"> <option v-for="(v, k) in comparisons_types" :value="k">{{v}}</option> </b-select> </div> <div class="col-sm"> <input type="text" class="input" v-model="v.value"> </div> <div class="col-sm col-shrink"> <button class="button is-light has-text-danger" @click="removeConditionRule(i, j)" v-if="j"><i class="fa fa-trash-alt"></i></button> <button class="button is-primary" @click="addConditionRule(i)" v-else><i class="fa fa-plus"></i></button> </div> </div> <div style="padding: .5rem 0 1rem;display: flex;justify-content: space-between"><span style="text-transform: uppercase;font-weight: bold">{{\'или\'|gettext}}</span><a @click="removeConditionSection(i)" class="has-text-danger" v-if="i < value.length-1">{{\'Удалить\'|gettext}}</a></div> </div> <button class="button is-light" @click="addConditionSection"><i class="fa fa-plus has-mr-1"></i>{{\'Добавить условие\'|gettext}}</button> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-locale-import-form",{data:function(){return{data:null,isUpdating:!1,isFetching:!0,is_done:!1,amount_updated:0,amount_notfound:0,current_language:"ru"}},props:["blocks","languages","current"],mounted:function(){this.current_language=2==this.current?1:2,this.isFetching=!1},mixins:[FormModel],methods:{updateData:function(){var i=this,n={};_.each(this.data.cells,function(e){e.A=e.A.trim(),e.B=e.B.trim(),e.A&&e.B&&(n[e.A]=e.B)});_.each(this.blocks,function(e){null!=e.locales[i.current]&&(e.locales[i.current]=function s(a,e){return _.each(e,function(e,t){"object"===(void 0===e?"undefined":_typeof(e))&&null!=e.picture_id?a[t]=s(a[t],e):null!=n[e]?(a[t]=n[e],i.amount_updated++):i.amount_notfound++}),a}(e.locales[i.current],e.locales[i.current_language]))}),this.is_done=!0}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Загрузка языка из Excel\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="message is-success" v-if="is_done && amount_updated"><div class="message-body">Обновлено фраз: {{amount_updated|number}}</div></div> <div class="message is-danger" v-if="is_done && amount_notfound"><div class="message-body">Не найдено фраз: {{amount_notfound|number}}</div></div> <div v-else> <b-field label="Базовый язык"> <b-select v-model="current_language"> <option :value="v.language_id" v-for="v in languages">{{v.language_title}}</option> </b-select> </b-field> <vue-component-grid class="has-mb-4" v-model="data" v-if="!isFetching" cols="2"/> <div class="block-arrow-left-top" style="margin-top: -15px;opacity:0.5"> Скопируйте нужные ячейки из Excel и вставьте в эту таблицу </div> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button v-if="!is_done" class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Загрузить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-locales",{data:function(){return{isAddFormOpened:!1,language_add_id:null}},props:["locales","phrases","language_id","variants","disabled"],computed:{values:function(){return this.language_id?this.locales[this.language_id]:this.phrases}},methods:{addLanguage:function(){_.isArray(this.locales)&&!this.locales.length&&(this.locales={});this.locales[this.language_add_id]=Vue.observable(function s(a){return _.each(a,function(e,t){"object"===(void 0===e?"undefined":_typeof(e))?a[t]=s(e):"picture"==e&&(a[t]=null)}),a}(_.clone(this.phrases))),this.$emit("update:locales",this.locales),this.isAddFormOpened=!1,this.language_id=this.language_add_id,this.language_add_id=null,this.$emit("update:language_id",this.language_id)},merge:function(a,e){var i=this;null==a&&(a={});function n(e,t,s){_.isObject(s)&&null==s.picture_id?e in t?t[e]=i.merge(t[e],s):Object.assign(t,_defineProperty({},e,s)):!_.isObject(s)&&_.isObject(t[e])||Object.assign(t,_defineProperty({},e,s))}var l=_.clone(a),t=_.clone(e);return"object"===(void 0===a?"undefined":_typeof(a))&&"object"===(void 0===t?"undefined":_typeof(t))&&(_.each(t,function(e,s){_.isArray(l[s])?_.isArray(e)?_.each(e,function(e,t){l[s][t]=_.clone(a[s][0]),n(t,l[s],_.clone(e))}):Object.assign(l,_defineProperty({},s,[e])):n(s,l,e)}),_.each(t,function(e,t){null==a[t]&&delete l[t]})),l},phrasesUpdated:function(){var s=this;this.language_id||_.each(this.locales,function(e,t){s.locales[t]=s.merge(s.phrases,e)}),this.$emit("update:phrases",this.phrases),this.$emit("update:locales",this.locales)},addPhrase:function(){var e=prompt("Укажите название переменной","");e&&(_.isArray(this.phrases)&&!this.phrases.length&&(this.phrases={}),this.$set(this.phrases,e,""),this.phrasesUpdated())}},template:'<div> <div class="level is-mobile"> <div class="level-left"> <div class="select has-mr-1"> <select class="input" v-model="language_id" :disabled="disabled" :placeholder="\'Переменные\'|gettext"> <option :value="null">{{\'Переменные\'|gettext}}</option> <optgroup :label="\'Языки\'||gettext"> <option v-for="v in variants.language_id" :value="v.language_id" :disabled="locales[v.language_id] == undefined">{{v.language_title}}</option> </optgroup> </select> </div> <button class="button is-dark" @click="isAddFormOpened = true" :disabled="disabled || (_.size(locales) == _.size(variants.language_id))"><i class="fa fa-plus"></i></button> </div> </div> <hr class="is-hidden-mobile"> <div class="panel panel-default"> <div class="cms-pages-phrases"> <div> <div class="is-marginless" style="border-left: 0"> <span> <span>$locale</span> <button class="button is-light" @click="addPhrase" v-if="language_id == null"><i class="fa fa-plus"></i></button> </span> </div> </div> </div> <vue-manager-cms-pages-phrases v-model="values" :phrases="phrases" :is-editable="language_id == null" @input="phrasesUpdated"/> </div> <b-modal v-model="isAddFormOpened" :has-modal-card="true"> <div class="modal-card has-text-black" style="font-size: 1rem"> <header class="modal-card-head"><p class="modal-card-title">{{\'Добавление языка\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="isAddFormOpened = false"></button></header> <section class="modal-card-body"> <b-select :placeholder="\'Язык\'|gettext" v-model="language_add_id" :disabled="disabled"> <option v-for="v in variants.language_id" :value="v.language_id" v-if="locales[v.language_id] == undefined">{{v.language_title}}</option> </b-select> </section> <div class="modal-card-foot"> <button type="button" class="button is-primary" @click="addLanguage" :disabled="language_add_id == null">{{\'Доабвить\'|gettext}}</button> </div> </div> </b-modal> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-page-form",{data:function(){return{currentTab:"common",tabs:[{name:"common",title:this.$gettext("Общие")}],isFetching:!1,isUpdating:!1,values:{page_id:null,page_title:"",path:""},variants:null}},props:["page_id"],mixins:[FormModel],created:function(){this.fetchData()},methods:{addLanguage:function(){this.values.seo.push({language_id:null,title:"",description:""})},fetchData:function(){var t=this;this.isFetching=!0,this.$api.get(this.page_id?["manager/cms/pages/page/get","manager/cms/pages/page/info"]:"manager/cms/pages/page/info",{page_id:this.page_id}).then(function(e){"success"==e.result&&(t.values=e.response.values,t.variants=e.response.variants),t.isFetching=!1}).catch(function(e){throw t.isFetching=!1,e})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/cms/pages/page/set",this.values,this).then(function(e){"success"==e.result&&(t.$parent.$parent.title=e.response.values.page_title,t.$parent.close()),t.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Страница</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs nav-tabs-scroll has-text-left"> <li v-for="v in tabs" :class="{active: currentTab== v.name}"><a @click="currentTab = v.name">{{v.title}}</a></li> </ul> <section class="modal-card-body" v-if="currentTab == \'common\'"> <b-field :label="\'Заголовок\'|gettext" :message="errors.page_title" :class="{\'has-error\': errors.page_title}"> <input class="input" v-model="values.page_title"></input> </b-field> <b-field :label="\'URL\'|gettext" :message="errors.path" :class="{\'has-error\': errors.path}"> <input class="input" v-model="values.path"></input> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-primary level-item" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-page",{data:function(){return{isFetching:!1,title:""}},props:["page_id","id"],created:function(){var t=this;this.isFetching=!0,this.$api.get("manager/cms/pages/get",{page_id:this.id}).then(function(e){"success"==e.result&&(t.title=e.response.page_title),t.isFetching=!1})},methods:{openPageForm:function(){this.$modal("vue-manager-cms-pages-page-form",{page_id:this.id},this)}},template:'<div> <vue-component-submenu menu="manager.cms" :page_id="page_id"></vue-component-submenu> <div class="container has-mt-3 has-mb-3"> <div class="level has-mb-3"> <div class="level-left"> <h3>{{title}}</h3> </div> <div class="level-right"> <router-link :to="{name: \'manager.cms.pages\'}" class="button is-light"><i class="fa fa-undo has-text-grey-light has-mr-1"></i>{{\'К списку\'|$gettext}}</router-link> <button class="button is-light has-ml-2" @click="openPageForm"><i class="fa fa-sliders-h has-mr-1"></i>Настройки страницы</button> </div> </div> <div class="field has-tabs-style has-mb-2"> <div class="field-body"> <div class="field has-addons"> <div class="control is-expanded" style="width: 50%;"> <router-link :to="{name: \'manager.cms.pages.variants\', params: {page_id: page_id, id: id}}" class="b-radio radio button">Варианты</router-link> </div> <div class="control is-expanded" style="width: 50%;"> <router-link :to="{name: \'manager.cms.pages.blocks\', params: {page_id: page_id, id: id}}" class="b-radio radio button">Блоки</router-link> </div> </div> </div> </div> </div> <router-view></router-view> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-pages",{data:function(){return{isFetching:!1,perPage:20,info:null}},mixins:[ListModel],props:["page_id"],created:function(){this.fetchData(!0)},destroyed:function(){},methods:{onFilter:function(){this.clearPages(),this.fetchData(!0)},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/cms/pages/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){"success"==e.result&&s.cachePage(e.response),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},onPageChange:function(e){this.page=e,this.fetchData()},clickRow:function(e){this.$router.push({name:"manager.cms.pages.variants",params:{page_id:this.page_id,id:e.page_id}})}},template:'<div> <vue-component-submenu menu="manager.cms" :page_id="page_id"></vue-component-submenu> <div class="container has-mt-3"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable bordered> <b-table-column field="title" :label="\'Заголовок\'|gettext" v-slot="props"> <div class="has-text-danger is-pulled-right" v-if="props.row.is_draft"><i class="fas fa-eye-slash has-ml-1"></i></div> <div :class="{\'has-text-grey-light\': props.row.is_draft}">{{ props.row.page_title }}</div> </b-table-column> <b-table-column field="title" label="URL" v-slot="props"> <div>{{ props.row.path }}</div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-phrases",{props:["value","phrases","isEditable","index","base","root"],methods:{updated:function(){this.$emit("input",this.value)},changeType:function(e){var t=this;this.$confirm("Перевести в массив?").then(function(){t.value[e]=[t.value[e]],t.updated()})},changeScalarType:function(e){this.value[e]="picture"==this.value[e]?"":"picture"},addArrayItem:function(e){function i(s,a){return _.each(s,function(e,t){_.isObject(e)||_.isArray(e)?null!=e.picture_id?s[t]=null:i(s[t],a):s[t]=a&&"picture"==s[t]?null:""}),s}var t=(t=null==this.value[e][0]?null:i(_.clone(this.value[e][0]),!1))||i(_.clone(this.phrases[e][0]),!0);this.value[e].push(t),this.updated()},addPhrase:function(e){var t=prompt("Укажите название переменной","");t&&(_.isArray(this.value[e])?this.$set(this.value[e][0],t,""):_.isObject(this.value[e])?this.$set(this.value[e],t,""):this.$set(this.value,e,_defineProperty({},t,"")),this.updated())},deletePhrase:function(e){var t=this;this.$confirm(this.$gettext("Удалить?"),"is-danger").then(function(){t.$delete(t.value,e),t.updated()})}},template:'<div class="cms-pages-phrases" :data-index="!isEditable?index:null"> <div> <div v-for="(v, k) in value"> <span> <div v-if="(phrases[k] == \'picture\') && !isEditable"> <label class="label">{{k}}</label> <vue-component-pictures v-model="value[k]" @upload="updated" @delete="updated" button-icon="fa fal fa-cloud-upload" updatable></vue-component-pictures> </div> <span v-else-if="isEditable || _.isObject(v) || _.isArray(v)">{{k}} <a class="has-text-grey has-ml-2" v-if="(_.isObject(v) || _.isArray(v)) && isEditable" @click="changeType(k)">/ <span v-if="_.isArray(v)">array</span><span v-else>hash</span></a> <a class="has-text-grey has-ml-2" v-if="(!_.isObject(v) && !_.isArray(v)) && isEditable" @click="changeScalarType(k)">/ <span v-if="v == \'picture\'">picture</span><span v-else>string</span></a> </span> <input v-else type="text" v-model="value[k]" class="input" :placeholder="(base && base[k])?base[k]:(root?root[k]:k)" @input="updated" v-else> <span v-if="isEditable"> <button class="button is-light has-text-danger has-mr-1" @click="deletePhrase(k)" :class="{disabled: (_.isObject(v) && _.size(v)) || (_.isArray(v) && _.size(v[0]))}"><i class="fa fa-trash-alt"></i></button> <button class="button is-light" @click="addPhrase(k)"><i class="fa fa-plus"></i></button> </span> <span v-else-if="!isEditable && _.isArray(v)"> <button class="button is-light" @click="addArrayItem(k)"><i class="fa fa-plus"></i></button> </span> </span> <vue-manager-cms-pages-phrases v-model="v" :phrases="phrases[k]" :base="base?base[k]:null" :root="root?root[k]:null" v-if="_.isObject(v) && (phrases[k] != \'picture\')" :is-editable="isEditable"/> <vue-manager-cms-pages-phrases v-for="(w, j) in v" :index="j+1" @delete="v.splice(j, 1)" :phrases="phrases[k][0]" :base="base?base[k][j]:null" :root="root?root[k][j]:null" v-model="w" v-if="_.isArray(v) && (phrases[k] != \'picture\')" :is-editable="isEditable"/> </div> </div> <button class="button is-light has-m-2" @click="$emit(\'delete\')" v-if="!isEditable && (index != null)"><i class="fa fa-trash-alt has-text-danger"></i></button> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-variant-block-form",{data:function(){return{value:null}},props:["block"],created:function(){this.value=_.clone(this.block)},methods:{update:function(){Object.assign(this.block,this.value),this.$parent.$parent.updateData(),this.$parent.close()}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Настройка блока</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <mx-toggle v-model="value.is_active" :title="\'Активен\'|gettext" class="has-mb-2"></mx-toggle> <vue-manager-cms-pages-conditions-editor v-model="value.conditions"/> </section> <footer class="modal-card-foot"> <button class="button is-primary level-item" type="button" @click="update">{{\'Сохранить\'|gettext}}</button> </footer> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-variant-form",{data:function(){return{picture_visible:"show",picture_visible_values:{show:this.$gettext("Показать"),hide:this.$gettext("Скрыть")},locale:1,currentTab:"common",menu:{common:this.$gettext("Общие"),settings:this.$gettext("Настройки"),languages:this.$gettext("Многоязычность"),conditions:this.$gettext("Условия")},values:{blocks:{},blocks_order:[],conditions:[],has_header:!0,has_footer:!0,is_active:!0,title:"",variant_id:null},block_add_id:null,design_add_id:null,isAddFormOpened:!1,isFetching:!1,isFetchingForm:!1,variants:null}},props:["variant_id","page_id"],created:function(){this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.updateData}},this.$form.top.title=this.$gettext("Вариант"),this.fetchData(!0)},watch:{locale:function(){var s=this;_.each(this.values.blocks_order,function(e){var t=s.values.blocks[e.block_id].phrases;null==s.values.blocks[e.block_id].locales[s.locale]&&_.size(t)&&(s.values.blocks[e.block_id].locales[s.locale]=Vue.observable(function s(a){return _.each(a,function(e,t){"object"===(void 0===e?"undefined":_typeof(e))?a[t]=s(e):"picture"==e&&(a[t]=null)}),a}(_.clone(t))))})}},computed:{renderLink:function(){return this.variant_id&&null!=this.variants?"/system/page/preview.html?variant_id="+this.variant_id+"&picture_visible="+this.picture_visible+"&locale="+this.variants.locales[this.locale].language_code:"about:blank"},availableLocales:function(){var s=[];return _.each(this.values.blocks,function(e){_.size(e.locales)&&_.each(e.locales,function(e,t){!function s(e){var a=!1;return _.each(e,function(e,t){_.isObject(e)||_.isArray(e)?null==e.picture_id&&!s(e)||(a=!0):e&&(a=!0)}),a}(e)||s.push(parseInt(t))})}),_.uniq(s)},phrasesLeft:function(){var s=this,i=0;return _.each(this.values.blocks_order,function(e){var t=s.values.blocks[e.block_id];null!=t.locales[s.locale]&&!function s(e,a){_.each(e,function(e,t){"object"!==(void 0===e?"undefined":_typeof(e))||a&&null!=a[t]&&null!=a[t].picture_id?""!==e||a&&""===a[t]||i++:s(e,a?a[t]:null)})}(t.locales[s.locale],1==s.locale?null:t.locales[2==s.locale?1:2])}),i}},methods:{importLocaleForm:function(){this.$modal("vue-manager-cms-pages-locale-import-form",{blocks:this.values.blocks,languages:this.variants.locales,current:this.locale},this)},renderLinkLocale:function(e){return this.variant_id&&null!=this.variants?"/system/page/preview.html?block_id="+e+"&locale="+this.variants.locales[this.locale].language_code:"about:blank"},toggleOption:function(e,t){var s=t.options.indexOf(e);-1==s?t.options.push(e):t.options.splice(s,1)},compleForm:function(){this.$modal("vue-manager-cms-pages-compile-form",{page_id:this.page_id,variant_id:this.variant_id},this)},addBlock:function(){var t=this;this.isAddFormOpened=!0,this.block_add_id=null,(this.design_add_id=null)==this.variants.design_id&&(this.isFetchingForm=!0,this.$api.get("manager/cms/pages/variants/blocks/info",{page_id:this.page_id,variant_id:this.variant_id}).then(function(e){"success"==e.result&&(console.log(_.clone(t.variants)),t.variants=_.merge(t.variants,e.response.variants),console.log(t.variants)),t.isFetchingForm=!1}).catch(function(e){throw t.isFetchingForm=!1,e}))},addBlockDone:function(){var t=this;this.$api.get("manager/cms/pages/variants/blocks/add",{block_id:this.block_add_id,variant_id:this.variant_id,page_id:this.page_id}).then(function(e){"success"==e.result&&(t.isAddFormOpened=!1,t.fetchData(!1)),t.isFetching=!1})},deleteBlock:function(e){var t=this;this.$confirm("Удалить?").then(function(){t.isFetching=!0,t.$api.get("manager/cms/pages/variants/blocks/delete",{block_id:e,variant_id:t.variant_id,page_id:t.page_id}).then(function(e){"success"==e.result&&t.fetchData(!1),t.isFetching=!1})})},editBlock:function(e){this.$modal("vue-manager-cms-pages-variant-block-form",{block:e},this)},sortEnd:function(){var e=this;this.$nextTick(function(){e.updateData()})},fetchData:function(e){var t=this;this.isFetching=e,this.$api.get(this.variant_id?["manager/cms/pages/variants/get","manager/cms/pages/variants/info"]:"manager/cms/pages/variants/info",{variant_id:this.variant_id}).then(function(e){"success"==e.result&&(t.variant_id&&(t.values=e.response.values),t.variants=e.response.variants),t.isFetching=!1}).catch(function(e){throw t.isFetching=!1,e})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/cms/pages/variants/set",Object.assign({page_id:this.page_id,variant_id:this.variant_id},this.values)).then(function(e){"success"==e.result&&t.reloadPreview(),t.isUpdating=!1})},reloadPreview:function(){"common"!=this.currentTab&&"languages"!=this.currentTab||this.$refs.iframe.contentWindow.location.reload()}},template:'<div class="cms-pages-block-form"> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a v-for="(t, k) in menu" class="button" :class="{active: k== currentTab}" @click="currentTab = k">{{t|gettext}}</a> </div> </div> </div> </div> <section v-if="currentTab == \'conditions\'"> <div class="container has-mt-2 has-mb-2"> <div class="panel panel-default has-p-2"> <vue-manager-cms-pages-conditions-editor v-model="values.conditions"/> </div> </div> </section> <section v-if="currentTab == \'settings\'"> <div class="container has-mt-2 has-mb-2"> <b-field label="Заголовок"> <input type="text" class="input" v-model="values.title"> </b-field> <mx-toggle v-model="values.is_active" :title="\'Активен\'|gettext" class="has-mb-2"></mx-toggle> <mx-toggle v-model="values.has_header" :title="\'Показыать меню\'|gettext" class="has-mb-2"></mx-toggle> <mx-toggle v-model="values.has_footer" :title="\'Показыать подвал\'|gettext"></mx-toggle> </div> </section> <section v-if="(currentTab == \'common\' || currentTab== \'languages\')" style="flex-grow: 1" class="row row-noborder"> <div class="col-xs-12 col-sm-6" v-if="currentTab == \'common\'"> <div style="padding-bottom: 0;display: flex;flex-direction: row;justify-content: space-between;flex-grow:0; background: var(--background-white-color);border-bottom: 1px solid var(--border-grey-color);" class="has-p-2"> <button class="button is-black" @click="addBlock"><i class="fa fa-plus has-mr-1"></i>{{\'Добавить блок\'|gettext}}</button> <button class="button is-light" @click="compleForm" v-if="variant_id"><i class="fa fa-sync has-mr-1"></i>{{\'Обновить\'|gettext}}</button> </div> <div class="has-p-2"> <div class="panel panel-default"> <sortable-list lockAxis="y" v-model="values.blocks_order" use-drag-handle @sortEnd="sortEnd" :useWindowAsScrollContainer="true"> <sortable-item v-for="(b, id) in values.blocks_order" class="cms-manager-pages-variant" :item="b" :index="id" :key="b.block_id"> <div> <div :class="{\'has-text-grey-light\': !b.is_active}"><b><i class="fas fa-bars has-mr-2 has-text-grey-light" v-sortable-handle style="cursor: -webkit-grabbing"></i>{{values.blocks[b.block_id].title}}</b></div> <div> <vue-component-dropdown class="is-action-dropdown is-cms-pages-choose-locale" button-class="button is-text" v-if="_.size(values.blocks[b.block_id].css_options)" @active-change="updateData"> <span slot="button"><b>{{\'Опции\'|gettext}}:</b> <span v-if="b.options.length">{{b.options.length}}</span><span v-else>{{\'Не выбрано\'|gettext}}</span></span> <b-dropdown-item style="border-radius:1rem" class="is-hidden-desktop">{{\'Отмена\'|gettext}}</b-dropdown-item> <div> <b-dropdown-item v-for="(v, i) in values.blocks[b.block_id].css_options" @click="toggleOption(i, b)" :class="{\'is-active\': b.options.indexOf(i) != -1}">{{v}}</b-dropdown-item> </div> </vue-component-dropdown> <button class="button is-light" @click="editBlock(b)"><i class="fa fa-sliders-h" :class="{\'has-hint\': b.conditions.length}"></i></button> <button class="button is-light has-text-danger" @click="deleteBlock(b.block_id)"><i class="fa fa-trash-alt"></i></button> </div> </div> </sortable-item> </sortable-list> </div> </div> </div> <div class="col-xs-12 col-sm-6" v-if="currentTab == \'languages\'"> <div style="padding-bottom: 0;display: flex;flex-direction: row;justify-content: space-between;flex-grow:0; background: var(--background-white-color);border-bottom: 1px solid var(--border-grey-color);" class="has-p-2"> <span class="button is-text" style="text-decoration: none;cursor: default">Осталось фраз: {{phrasesLeft}}</span> <button class="button is-light" @click="importLocaleForm" :disabled="locale == 1"><i class="fas fa-upload has-mr-1"></i>{{\'Загрузить из Excel\'|gettext}}</button> </div> <div v-for="(b, k) in values.blocks_order"> <div class="cms-manager-pages-variant-locale-title" @click="console.log($event.target);$mx($event.target).toggleClass(\'in\')">{{values.blocks[b.block_id].title}}<button class="button is-text is-pulled-right"><i class="fa fa-chevron-down"></i></button></div> <vue-manager-cms-pages-phrases v-model="values.blocks[b.block_id].locales[locale]" :base="(locale == 1)?null:(values.blocks[b.block_id].locales[(locale == 2)?1:2])" :root="(locale == 1)?null:values.blocks[b.block_id].locales[1]" :is-editable="false" :phrases="values.blocks[b.block_id].phrases"/> </div> <div style="flex-grow: 1"></div> </div> <div class="col-xs-12 col-sm-6"> <div style="padding-bottom: 0;display: flex;flex-direction: row;justify-content: space-between;flex-grow:0; background: var(--background-white-color);border-bottom: 1px solid var(--border-grey-color);" class="has-p-2"> <div v-if="variants != null"> <vue-component-dropdown v-model="locale" class="is-action-dropdown is-cms-pages-choose-locale" button-class="button is-text"> <span slot="button"><b>{{\'Язык\'|gettext}}:</b> {{variants.locales[locale].language_title}}</span> <b-dropdown-item style="border-radius:1rem" class="is-hidden-desktop">{{\'Отмена\'|gettext}}</b-dropdown-item> <div> <b-dropdown-item v-for="v in variants.locales" :value="v.language_id" :class="{\'has-text-grey-light\': availableLocales.indexOf(v.language_id) == -1}">{{v.language_title}}</b-dropdown-item> </div> </vue-component-dropdown> <vue-component-dropdown v-model="picture_visible" class="is-action-dropdown is-cms-pages-choose-locale" button-class="button is-text"> <span slot="button"><b>{{\'Картинки\'|gettext}}:</b> {{picture_visible_values[picture_visible]}}</span></span> <b-dropdown-item style="border-radius:1rem" class="is-hidden-desktop">{{\'Отмена\'|gettext}}</b-dropdown-item> <div> <b-dropdown-item v-for="(v, k) in picture_visible_values" :value="k">{{v}}</b-dropdown-item> </div> </vue-component-dropdown> </div> <div> <a :href="renderLink" target="_blank" class="button is-text" style="text-decoration: none"><i class="fa fa-external-link has-mr-1"></i>Открыть в отдельной вкладке</a> </div> </div> <iframe :src="renderLink" frameborder="0" width="100%" height="100%" ref="iframe"></iframe> </div> </section> <b-modal v-model="isAddFormOpened" :has-modal-card="true"> <div class="modal-card has-text-black" style="font-size: 1rem"> <header class="modal-card-head"><p class="modal-card-title">{{\'Добавление блока\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="isAddFormOpened = false"></button></header> <section class="modal-card-body" v-if="variants"> <b-field :label="\'Дизайн\'|gettext"> <b-select :placeholder="\'Дизайн\'|gettext" v-model="design_add_id" expanded> <option v-for="v in variants.design_id" :value="v.design_id">{{v.title}}</option> </b-select> </b-field> <b-field :label="\'Блок\'|gettext" v-if="design_add_id"> <b-select :placeholder="\'Блок\'|gettext" v-model="block_add_id" expanded> <option v-for="v in variants.block_id" :value="v.block_id" v-if="v.design_id == design_add_id" :disabled="values.blocks[v.block_id] != undefined">{{v.title}}</option> </b-select> </b-field> </section> <div class="modal-card-foot"> <button type="button" class="button is-dark" @click="isAddFormOpened = false">{{\'Закрыть\'|gettext}}</button> <button type="button" class="button is-primary" @click="addBlockDone" :disabled="block_add_id == null">{{\'Доабвить\'|gettext}}</button> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetchingForm"></b-loading> </b-modal> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-pages-variants",{data:function(){return{filter:{query:""},isFetching:!1}},mixins:[ListModel],props:["id"],created:function(){this.$io.on("events:manager.cms.pages.variants:refresh",this.refreshData),this.fetchData(!0)},destroyed:function(){this.$io.off("events:manager.cms.pages.variants:refresh",this.refreshData)},methods:{refreshData:function(e){console.log(e),e.id==this.id&&this.refresh()},onFilter:function(){this.clearPages(),this.fetchData(!0)},newVariant:function(){this.$form.open("vue-manager-cms-pages-variant-form",{variant_id:null,page_id:this.id})},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/cms/pages/variants/list",{page_id:this.id,next:this.next,count:this.perPage,filter:this.filter}).then(function(e){"success"==e.result&&(_.each(e.response.fields,function(e){e.conditions_many=!(1==_.size(e.conditions)&&_.size(e.conditions[0])),e.conditions=_.map(e.conditions,function(e){var t=_.map(e,function(e){return"<dt>"+e.name+"</dt>"+e.comp+' <dd>"'+e.value+'"</dd>'});return t.length?"<span>"+t.join("<dc>and</dc>")+"</span>":t.join()}).join("<dc>or</dc>")}),s.cachePage(e.response)),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},parseCondition:function(e){return"<span><b>"+e.name+":</b> "+e.value+"</span>"},clickRow:function(e){this.$form.open("vue-manager-cms-pages-variant-form",{page_id:this.id,variant_id:e.variant_id})}},template:'<div> <vue-component-filterbox :is-visible="fields.length" :disabled="isFetching" v-model="filter" :with-buttons="true" @filter="onFilter"> <template slot="buttons"> <a @click="newVariant" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый вариант\'|gettext}} </span></a> </template> </vue-component-filterbox> <div class="container has-mb-3"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable bordered> <b-table-column field="title" :label="\'Заголовок\'|gettext" v-slot="props"> <div class="has-text-danger is-pulled-right" v-if="!props.row.is_active"><i class="fas fa-eye-slash has-ml-1"></i></div> <div class="has-text-warning is-pulled-right" v-if="props.row.need_update">{{\'Требуется обновление\'|gettext}}<i class="fa fa-engine-warning has-ml-1"></i></div> <div :class="{\'has-text-grey-light\': !props.row.is_active}">{{ props.row.title }}</div> <span class="cms-pages-conditions has-mt-1" :class="{\'is-disabled\': !props.row.is_active}" v-html="props.row.conditions"></span> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-questions-form",{data:function(){return{isUpdating:!1,isFetching:!1,language_id:null,language_add_id:null,isAddFormOpened:!1,variants:{language_id:{}},values:{locales:{},questions_group_id:null},options:{theme:"snow"},currentTab:"common",menu:{common:this.$gettext("Общие"),settings:this.$gettext("Настройки")}}},created:function(){this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.save,disabled:!0}},this.$form.top.title=this.$gettext("Вопрос")},mounted:function(){this.fetchData(!0)},props:["question_id"],mixins:[FormModel],computed:{question:function(){return this.values.locales[this.language_id]}},watch:{isUpdating:function(e){this.$form.top.buttons.save.classname="is-primary"+(e?" is-loading":"")},language_id:function(e){this.$form.top.buttons.save.disabled=!e}},methods:{addLanguage:function(){this.values.locales[this.language_add_id]={language_id:this.language_add_id,is_visible:!0,is_visible_app:!0,question:"",answer_doc:{}},this.isAddFormOpened=!1,this.language_id=this.language_add_id,this.language_add_id=null},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(this.question_id?["manager/cms/questions/get","manager/cms/questions/info"]:"manager/cms/questions/info",{question_id:this.question_id}).then(function(e){s.isFetching=!1;var t=e.response.questions;null!=t.variants&&(s.variants=t.variants),null!=t.values?(s.values=t.values,_.size(s.values.locales)?s.language_id=_.keys(s.values.locales)[0]:s.isAddFormOpened=!0):s.isAddFormOpened=!0})},save:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/cms/questions/set",Object.assign(this.values,{question_id:this.question_id}),this).then(function(e){"success"==e.result&&t.$form.close(),t.isUpdating=!1}).catch(function(e){t.isUpdating=!1})}},template:'<div> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a v-for="(t, k) in menu" class="button" :class="{active: k== currentTab}" @click="currentTab = k">{{t|gettext}}</a> </div> </div> </div> </div> <div class="container has-mt-2 has-mb-2"> <div class="level is-mobile"> <div class="level-left"> <div class="select has-mr-1" v-if="language_id != null"> <select class="input" v-model="language_id" :disabled="isFetching"> <option v-for="v in variants.language_id" :value="v.language_id" :disabled="values.locales[v.language_id] == undefined">{{v.language_title}}</option> </select> </div> <button class="button is-dark" @click="isAddFormOpened = true" :disabled="isFetching || (_.size(values.locales) == _.size(variants.language_id))"><i class="fa fa-plus"></i></button> </div> </div> <hr class="is-hidden-mobile"> </div> <div class="container has-mb-2" v-show="currentTab == \'common\'" :style="{height:isFetching?\'250px\':\'unset\'}"> <div v-if="language_id != null"> <b-field label="Вопрос"> <b-input v-model="question.question"></b-input> </b-field> <b-field :label="\'Ответ\'|gettext" :message="errors.body" :class="{\'has-error\': errors.body}"> <vue-component-htmleditor v-model="question.answer_doc" class="hero-block blog-post hero-text"></vue-component-htmleditor> </b-field> </div> </div> <section class="container has-mb-2" v-if="currentTab == \'settings\'"> <b-field :label="\'Группа\'|gettext"> <b-select v-model="values.questions_group_id"> <optgroup :label="p.questions_part_title" v-for="p in variants.groups"> <option :value="g.questions_group_id" v-for="g in p.groups">{{g.questions_group_title}}</option> </optgroup> </b-select> </b-field> <mx-toggle v-model="question.is_visible" :title="\'Показывать\'|gettext"></mx-toggle> <mx-toggle v-model="question.is_visible_app" :title="\'Показывать в справочном центре\'|gettext"></mx-toggle> </section> <b-modal v-model="isAddFormOpened" :has-modal-card="true"> <div class="modal-card has-text-black" style="font-size: 1rem"> <header class="modal-card-head"><p class="modal-card-title">{{\'Добавление языка\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="isAddFormOpened = false"></button></header> <section class="modal-card-body"> <b-select :placeholder="\'Язык\'|gettext" v-model="language_add_id" :disabled="isFetching"> <option v-for="v in variants.language_id" :value="v.language_id" v-if="values.locales[v.language_id] == undefined">{{v.language_title}}</option> </b-select> </section> <div class="modal-card-foot"> <button type="button" class="button is-dark" @click="isAddFormOpened = false">{{\'Закрыть\'|gettext}}</button> <button type="button" class="button is-primary" @click="addLanguage" :disabled="language_add_id == null">{{\'Доабвить\'|gettext}}</button> </div> </div> </b-modal> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-questions-groups-form",{data:function(){return{currentLanguage:"ru",languages:{},parts:{},currentTab:null,isUpdating:!1,isFetching:!1}},created:function(){this.$form.top.title=this.$gettext("Группы"),this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.updateData}},this.fetchData(!0)},computed:{menu:function(){return _.map(this.languages,function(e){return{meta:{title:e.language_title},name:e.language_code}})}},methods:{openSEOForm:function(e){this.$modal("vue-manager-cms-questions-seo-form",{values:e,currentLanguage:this.currentLanguage})},currentMenuCheck:function(e){return this.currentLanguage==e.name},fetchData:function(e){var t=this;this.isFetching=e,this.$api.get("manager/cms/questions/groups/get").then(function(e){t.isFetching=!1,t.parts=e.response.questions.parts,t.languages=e.response.questions.languages})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/cms/questions/groups/set",{parts:this.parts}).then(function(e){t.isUpdating=!1,t.$parent.close()})},doAddGroup:function(e){var t={};_.each(this.languages,function(e){t[e.language_code]=""}),e.groups.push({questions_group_title:t,seo_title:t,seo_description:t})},doAddPart:function(){var t={};_.each(this.languages,function(e){t[e.language_code]=""}),this.parts.push({questions_part_name:"",questions_part_title:t,groups:[]})}},template:'<div> <vue-component-submenu :menu="menu" :active_function="currentMenuCheck" :is-manual-menu="true" v-if="!isFetching" :current.sync="currentLanguage"/> <div class="container has-mt-2 has-mb-2"> <sortable-list class="form-fields-item-list" lockAxis="y" v-model="parts" use-drag-handle> <sortable-item v-for="(p, i) in parts" class="form-fields-item is-narrow" :index="i" :key="i" :item="p"> <div class="form-fields-item-title has-pr-2"> <div v-sortable-handle class="form-fields-item-handle"></div> <span class="row"> <div class="col-xs"> <input type="text" class="input" v-model="p.questions_part_title[currentLanguage]"> </div> <div class="col-xs col-sm-5"> <input type="text" class="input" v-model="p.questions_part_name" placeholder="Имя папки" :disabled="currentLanguage != \'ru\'"> </div> </span> <div style="margin-left: 3rem"> <sortable-list class="form-fields-item-list" lockAxis="y" v-model="p.groups" use-drag-handle> <sortable-item v-for="(g, j) in p.groups" class="form-fields-item is-narrow" :index="j" :key="j" :item="g"> <div class="form-fields-item-title has-background-white"> <div v-sortable-handle class="form-fields-item-handle"></div> <span class="row"> <div class="col-xs"> <div class="has-feedback"> <input type="text" class="input" v-model="g.questions_group_title[currentLanguage]"> <a class="form-control-feedback has-text-grey-light has-mr-2" @click="openSEOForm(g)">SEO</a> </div> </div> <div class="col-xs col-sm-5"> <input type="text" class="input" v-model="g.questions_group_name" placeholder="Имя подпапки" :disabled="currentLanguage != \'ru\'"> </div> </span> </div> </sortable-item> </sortable-list> <a @click="doAddGroup(p)" class="button is-dark is-small has-mb-1 has-mt-1">Добавить группу</a> </div> </div> </sortable-item> </sortable-list> <a @click="doAddPart" class="button is-black has-mb-1 has-mt-2">Добавить раздел</a> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-questions-list",{data:function(){return{isFetching:!1,isSortable:!1,variants:{groups:[],language_id:{}},filter:{query:""},filter_questions_group_id:"",perPage:100,action:null}},props:["page_id"],mixins:[ListModel,SortableTable],created:function(){this.$io.on("events:manager.questions.list:refresh",this.refresh),this.fetchData(!0,!0)},destroyed:function(){this.$io.off("events:manager.questions.list:refresh",this.refresh)},methods:{onDropdown:function(e){switch(e){case"newgroup":this.$form.open("vue-manager-cms-questions-groups-form");break;case"resort":this.isSortable=!0}},onFilter:function(){this.clearPages(),this.fetchData(!1,!1,!0)},openForm:function(e){this.$form.open("vue-manager-cms-questions-form",{question_id:e.question_id})},fetchData:function(e,t,s){var a=this;!s&&this.checkCache()||(this.isFetching=e,this.$api.get(t?["manager/cms/questions/list","manager/cms/questions/info"]:"manager/cms/questions/list",{next:this.next,count:this.perPage,filter:{questions_group_id:this.filter_questions_group_id,query:this.filter.query}}).then(function(e){a.cachePage(e.response.questions),t&&(a.variants=e.response.questions.variants),a.isFetching=!1}).catch(function(e){throw a.fields=[],a.total=0,a.isFetching=!1,e}))},onReSort:function(e,t,s,a){var i=this;this.isFetching=!0,this.$api.get("manager/cms/questions/sort",{question_id:s.question_id,index_question_id:a.question_id,questions_group_id:this.filter_questions_group_id},this).then(function(e){i.isFetching=!1})},onPageChange:function(e){this.page=e,this.fetchData()}},template:'<div> <vue-component-submenu menu="manager.cms" :page_id="page_id"/> <vue-component-filterbox :showToolbar="isSortable" @dropdown="onDropdown" v-model="filter" @filter="onFilter" :disabled="isFetching" :with-dropdown="true" :with-buttons="true"> <template slot="toolbar"> <a @click="isSortable = false" class="button is-dark"><i class="fal fa-check has-mr-2"></i> Завершить сортировку</a> </template> <template slot="dropdown"> <b-dropdown-item value="newgroup"><i class="fal fa-layer-group has-text-centered has-mr-1"></i> Настроить группы</b-dropdown-item> <b-dropdown-item value="resort" :disabled="filter.query != \'\' || filter_questions_group_id== \'\'"><i class="fal fa-arrows has-text-centered has-mr-1"></i> Сортировать</b-dropdown-item> </template> <template slot="buttons"> <div class="row row-small"> <div class="col-xs"> <span class="select is-fullwidth"> <select v-model="filter_questions_group_id" @change="onFilter"> <option value="">-- Все группы --</option> <optgroup :label="p.questions_part_title" v-for="p in variants.groups"> <option :value="g.questions_group_id" v-for="g in p.groups">{{g.questions_group_title}}</option> </optgroup> </select> </span> </div> <div class="col-xs"> <a @click="$form.open(\'vue-manager-cms-questions-form\')" class="button is-primary is-fullwidth"><i class="fa fa-plus has-mr-2"></i>{{\'Добавить вопрос\'|gettext}}</a> </div> </div> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" :class="{\'is-sortable\': isSortable}" hoverable bordered :draggable="isSortable" @dragstart="rowDragStart" @drop="rowDrop" @dragover="rowDragOver" @dragleave="rowDragLeave" @click="openForm"> <b-table-column field="question" label="Вопрос" v-slot="props"> <span class="is-pulled-right tags is-hidden-mobile"><span v-for="l in variants.language_id" class="tag" :class="{\'is-dark\': props.row.languages[l.language_id] != undefined}">{{l.language_code}}</span></span> <div> <div>{{props.row.question}}</div> <div class="has-text-grey">{{props.row.groupname}}</div> </div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-cms-questions-seo-form",{props:["values","currentLanguage"],template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'SEO настройки\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <b-field label="Title"> <input type="text" class="input" v-model="values.seo_title[currentLanguage]"> </b-field> <b-field label="Description"> <input type="text" class="input" v-model="values.seo_description[currentLanguage]"> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> </div>'}),window.$app.defineComponent("manager","vue-manager-currency",{data:function(){return{providers:{},currency:{},data:{}}},created:function(){this.fetchData()},methods:{fetchData:function(){var s=this;this.isFetching=!0,this.$api.get("manager/currency/get").then(function(e){var t=e.response.currency;s.providers=t.providers,s.currency=t.currency,s.data=t.data,s.isFetching=!1}).catch(function(e){throw s.locales=[],e})},changeValue:function(e,t,s){var a=e.target;a.disabled=!0,this.$api.get("manager/currency/set",{payment_provider_id:t,currency_id:s,value:a.checked}).then(function(e){a.disabled=!1})}},template:'<div class="container has-mb-4 has-mt-4"> <div class="row row-small"> <div class="col-sm-2"> <table class="table" style="width: 100%"> <thead> <tr> <td>Провайдер</td> </tr> </thead> <tbody> <tr v-for="(p, i) in providers"> <td>{{p}}</td> </tr> </tbody> </table> </div> <div class="col-sm-10"> <div style="overflow: scroll"> <table class="table"> <thead> <tr> <td v-for="c in currency">{{c}}</td> </tr> </thead> <tbody> <tr v-for="(p, i) in providers"> <td v-for="(c, j) in currency"> <input type="checkbox" :checked="data[i] != undefined && data[i].indexOf(parseInt(j)) != -1" @change="changeValue($event, i, j)"> </td> </tr> </tbody> </table> </div> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-addons",{data:function(){return{base:[],languages:[],currentNode:null,addons:null,isFetching:!1,isUpdating:!1,filter:"",filters:null,baseLanguage:!1}},mixins:[FormModel],props:["current","page_id"],created:function(){this.fetchData()},computed:{currentNodePhrases:function(){var t=this;return null==this.currentNode?null:null==this.currentNode.messages?this.currentNode.phrases:_.filter(this.phrases,function(e){return null!=t.currentNode.messages[e.k]})}},methods:{filterNodes:function(e){return e},onPageChange:function(e){this.page=e,this.fetchData()},onSort:function(e,t){this.sortField=e,this.sortOrder=t,this.fetchData()},fetchData:function(){var s=this;this.isFetching=!0,this.$api.get("manager/locales/addons/get",{language:this.current}).then(function(e){var t;"success"==e.result&&(t=e.response.locales,s.baseLanguage=t.language_base,s.phrases=t.phrases,s.phrases_base=t.phrases_base,s.languages=t.languages,s.addons=t.addons,s.current||(s.current=t.current)),s.isFetching=!1}).catch(function(e){throw s.locales=[],e})},selectNode:function(e,t){if(null!=e&&null!=e.messages)for(;0==e.messages.length;)e=e.nodes[Object.keys(e.nodes)[0]];this.currentNode=e,this.base=t},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/locales/addons/set",{phrases:this.phrases,language:this.current,addons:this.addons},this).then(function(e){t.isUpdating=!1})},hits:function(e){var t=0;if(null==e.messages)for(i in e.phrases)t+=""==e.phrases[i].v?1:0;else for(i in e.messages)t+=""==this.phrases[i].v?1:0;return t},getInputType:function(e){return""==e.v?"is-danger":""},changeLanguage:function(){this.currentNode=null,this.fetchData()},grubForm:function(){this.$modal("vue-manager-locales-addons-parse-form",{language:this.current,addon_id:this.currentNode.addon_id})}},template:'<div> <vue-component-submenu menu="manager.locales" :page_id="page_id"></vue-component-submenu> <div class="has-p-2 has-mb-2 has-mt-1"> <div class="row row-small"> <div class="col-sm-3"> <div class="media"> <div class="media-content"> <b-select v-model="current" expanded @input="changeLanguage"> <option :value="k" v-for="(v, k) in languages">{{v}}</option> </b-select> </div> <mx-toggle v-model="baseLanguage" trueValue="EN" falseValue="RU" class="is-pulled-right has-ml-2" :disabled="current == \'en\'"></mx-toggle> </div> </div> <div class="col-xs has-text-right"> <button class="button is-primary" @click="updateData" :class="{\'is-loading\': isUpdating}" :disabled="isFetching">{{\'Сохранить изменения\'|gettext}}</button> <button class="button is-light" @click="grubForm" :disabled="isFetching || isUpdating || !currentNode" v-if="$auth.isAllowEndpoint(\'manager/locales/addons/parse\')">{{\'Сканирование модуля\'|gettext}}</button> </div> </div> <hr class="is-hidden-mobile"> <div class="row"> <div class="col-sm-3"> <aside class="menu-locales" style="padding-bottom: 2rem"> <ul class="menu-list" v-if="addons"> <li v-for="p in addons"><a class="is-block" @click="selectNode(p, p.phrases_base)" :class="{\'is-active\': currentNode== p}">{{p.title}} <span class="tag is-rounded is-danger" v-if="hits(p)">{{hits(p)}}</span></a></li> </ul> </aside> </div> <div class="col-sm-9"> <div v-if="currentNode"> <div class="field"> <label class="label">Title</label> <input type="text" class="input" v-model="currentNode.addon_title" :placeholder="currentNode.default_addon_title"> </div> <div class="field"> <label class="label">Snippet</label> <textarea type="text" class="input" v-model="currentNode.addon_snippet" :placeholder="currentNode.default_addon_snippet"></textarea> </div> <hr class="is-hidden-mobile"> </div> <b-table :data="currentNodePhrases" :loading="isFetching" bordered v-if="currentNode"> <b-table-column field="k" width="200" label="Phrase" v-slot="props"> <div class="control is-fullwidth"><input :value="(baseLanguage && current != \'en\' && (base[props.row.k] != undefined))?base[props.row.k]:props.row.k" class="input" disabled></div> </b-table-column> <b-table-column field="v" width="200" label="Translate" v-slot="props"> <b-field :type="getInputType(props.row)"><b-input v-model="props.row.v" class="is-fullwidth"></b-input></b-field> </b-table-column> </b-table> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-addons-parse-form",{data:function(){return{checkedRows:{add:[],del:[]},isFetching:!1,isUpdating:!1,currentTab:"add",diff_del:[],diff_add:[]}},props:["language","addon_id"],created:function(){this.fetchData()},computed:{phrases:function(){return _.map("add"==this.currentTab?this.diff_add:this.diff_del,function(e,t){return{v:e}})}},methods:{fetchData:function(){var t=this;this.$api.get("manager/locales/addons/parse",{action:"get",addon_id:this.addon_id}).then(function(e){"success"==e.result&&(t.diff_add=e.response.diff_add,t.diff_del=e.response.diff_del,t.checkedRows.add=t.diff_add)})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/locales/addons/parse",{action:"set",addon_id:this.addon_id,phrases:this.checkedRows}).then(function(e){"success"==e.result&&t.$parent.close(),t.isUpdating=!1})},setTab:function(e){this.currentTab=e}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Сканирование модуля</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs has-text-left"> <li :class="{active: currentTab== \'add\'}"><a @click="setTab(\'add\')">{{\'Добавить\'|gettext}}<span v-if="diff_add.length" class="has-ml-1">({{diff_add.length}})</span></a></li> <li :class="{active: currentTab== \'del\'}"><a @click="setTab(\'del\')">{{\'Удалить\'|gettext}}<span v-if="diff_del.length" class="has-ml-1">({{diff_del.length}})</span></a></li> </ul> <section class="modal-card-body"> <div> <b-table :data="phrases" :loading="isFetching" hoverable> <b-table-column :label="\'Фраза\'|gettext" v-slot="props"> <b-checkbox @click.native.stop :native-value="props.row.v" v-model="checkedRows[currentTab]"> <span>{{props.row.v}}</span><span v-else>{{\'Без названия\'|gettext}}</span> </b-checkbox> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p>{{\'Ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary level-item" type="button" @click="updateData" :class="{\'is-loading\': isUpdating}">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-compile-form",{data:function(){return{isUpdating:!1,isDone:!1,steps:{compile:{state:"wait",title:"Компиляция"},sync:{state:"wait",title:"Синхронизация"}}}},props:["page_id"],created:function(){this.$io.on("events:manager.locales:compile",this.step)},destroyed:function(){this.$io.off("events:manager.locales:compile",this.step)},computed:{amountDone:function(){return _.sum(_.map(this.steps,function(e){return"wait"!=e.state?1:0}))}},methods:{step:function(e){console.log(e),this.steps[e.name].state=e.state,this.amountDone==_.size(this.steps)&&(this.isUpdating=!1,this.isDone=!0)},update:function(){var t=this;this.isUpdating=!0,this.$api.get("manager/locales/dashboard/compile",{page_id:this.page_id}).then(function(e){"success"==e.result&&t.step({name:"compile",state:"good"})})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Обновление</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="cms-pages-compile-steps"> <div v-for="s in steps"> <i class="fas" :class="{\'fa-circle\': s.state == \'wait\', \'fa-check-circle\': s.state == \'good\', \'fa-times-circle\': s.state == \'bad\', \'has-text-success\': s.state == \'good\', \'has-text-danger\': s.state == \'bad\', \'has-text-grey\': s.state == \'wait\'}"></i> {{s.title}} </div> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary level-item" :class="{\'is-loading\': isUpdating}" type="button" @click="update" :disabled="isDone">{{\'Обновить\'|gettext}}</button> </footer> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-dashboard",{data:function(){return{isFetching:!1,filter:{query:""}}},mixins:[ListModel],props:["page_id"],created:function(){this.$io.on("events:manager.locales.dashboard:refresh",this.refresh),this.fetchData(!0)},destroyed:function(){this.$io.off("events:manager.locales.dashboard:refresh",this.refresh)},methods:{fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/locales/dashboard/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){"success"==e.result&&s.cachePage(e.response.locales),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},clickRow:function(e){this.$modal("vue-manager-locales-language-form",{language_id:e.language_id})}},template:'<div> <vue-component-submenu menu="manager.locales" :page_id="page_id"></vue-component-submenu> <vue-component-filterbox @filter="refresh" v-model="filter" :disabled="isFetching" :with-buttons="true"> <template slot="buttons"> <a @click="$modal(\'vue-manager-locales-compile-form\', {page: page})" class="button is-light"><i class="fas fa-sync has-mr-2"></i>{{\'Обновить систему\'|gettext}}</a> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-3"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable bordered> <b-table-column field="language_title" :label="\'Заголовок\'|gettext" v-slot="props"> <span :title="props.row.flag" :class="\'iti__flag iti__flag-box iti__\'+props.row.flag" style="display: inline-block;"></span> <span :class="{\'has-text-grey\': !props.row.is_publish}">{{props.row.language_title}} <span v-if="props.row.language_english && (props.row.language_english != props.row.language_title)"> ({{props.row.language_english}})</span></span> <div class="is-pulled-right has-ml-2"> <span v-if="props.row.statistics && props.row.statistics.all" class="has-text-danger has-mr-2">Пропущено фраз: {{props.row.statistics.all}}</span> <i class="fas fa-home" :class="{\'has-text-grey-light\': !props.row.is_active_landing}"></i> <i class="fas fa-user has-ml-1" :class="{\'has-text-grey-light\': !props.row.is_active_pages}"></i> </div> <div class="has-text-danger is-pulled-right has-mr-1" v-if="!props.row.is_publish"><i class="fas fa-eye-slash"></i></div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-import-form",{data:function(){return{data:null,isUpdating:!1,isFetching:!0,is_done:!1,amount_updated:0,amount_notfound:0,current_language:"ru"}},props:["phrases","languages","current"],mounted:function(){this.current_language="en"==this.current?"ru":"en",this.isFetching=!1},mixins:[FormModel],methods:{updateData:function(){var s=this;"ru"==this.current_language?(_.each(this.data.cells,function(e){e.A=e.A.trim(),e.B=e.B.trim(),e.A&&(null==s.phrases[e.A]?s.amount_notfound++:(s.amount_updated++,s.phrases[e.A].v=e.B))}),this.is_done=!0):this.$api.get("manager/locales/get",{language:this.current_language}).then(function(e){var t={};_.each(e.response.locales.phrases,function(e){e.v&&(t[e.v]=e.k)}),_.each(s.data.cells,function(e){e.A=e.A.trim(),e.B=e.B.trim(),e.A&&(null!=t[e.A]&&null!=s.phrases[t[e.A]]?(s.amount_updated++,s.phrases[t[e.A]].v=e.B):(s.amount_notfound++,console.log(e.A)))}),s.is_done=!0})}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Загрузка языка из Excel\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="message is-success" v-if="is_done && amount_updated"><div class="message-body">Обновлено фраз: {{amount_updated|number}}</div></div> <div class="message is-danger" v-if="is_done && amount_notfound"><div class="message-body">Не найдено фраз: {{amount_notfound|number}}</div></div> <div v-else> <b-field label="Базовый язык"> <b-select v-model="current_language"> <option value="ru">Русский</option> <option :value="k" v-for="(v, k) in languages">{{v}}</option> </b-select> </b-field> <vue-component-grid class="has-mb-4" v-model="data" v-if="!isFetching" cols="2"/> <div class="block-arrow-left-top" style="margin-top: -15px;opacity:0.5"> Скопируйте нужные ячейки из Excel и вставьте в эту таблицу </div> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button v-if="!is_done" class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Загрузить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-language-form",{data:function(){return{isFetching:!1,isUpdating:!1,values:{options:{currency:{},number:{},dates_format:{}},prices:[]},variants:{payment_provider_id:[],language_id:{}}}},props:["language_id"],created:function(){this.fetchData()},methods:{fetchData:function(){var s=this;this.isFetching=!0,this.$api.get(["manager/locales/dashboard/get","manager/locales/dashboard/info"],{language_id:this.language_id}).then(function(e){var t;"success"==e.result&&(t=e.response.locales,s.variants=t.variants,s.values=t.values),s.isFetching=!1})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/locales/dashboard/set",this.values).then(function(e){"success"==e.result&&t.$parent.close(),t.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Язык\'|gettext}} <span v-if="values.language_title">"{{values.language_title}}"</span></p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <h3 class="has-mb-2 has-text-grey">Настройки</h3> <div class="row row-small"> <div class="col-xs-12 col-sm-6"> <mx-toggle v-model="values.is_active_landing" title="Язык системы" class="has-mb-2"></mx-toggle> <mx-toggle v-model="values.options.is_vat_exclude" title="Налог не включен в цену" class="has-mb-2"></mx-toggle> </div> <div class="col-xs-12 col-sm-6"> <mx-toggle v-model="values.is_active_pages" title="Язык страниц" class="has-mb-3"></mx-toggle> <mx-toggle v-model="values.options.intercom" title="Intercom включен" class="has-mb-3"></mx-toggle> </div> </div> <div class="row row-small"> <div class="col-xs-12 col-sm-4"> <b-filed label="Первый день недели"> <b-select v-model="values.options.first_day_week" expanded> <option v-for="(v, k) in variants.first_day_week" :value="k">{{v}}</option> </b-select> </b-filed> </div> <div class="col-xs-12 col-sm-4"> <b-filed label="Направление текста"> <b-select v-model="values.options.direction" expanded> <option v-for="(v, k) in variants.direction" :value="k">{{v}}</option> </b-select> </b-filed> </div> <div class="col-xs-12 col-sm-4"> <b-filed label="Поисковый движок"> <b-select v-model="values.options.search" expanded> <option v-for="(v, k) in variants.search" :value="k">{{v}}</option> </b-select> </b-filed> </div> </div> </section> <section> <h3 class="has-mb-2 has-text-grey">Базовый язык</h3> <b-select v-model="values.reference_language_id" placeholder="Не выбрано" expanded> <option :value="null">-- Не выбрано --</option> <option v-for="v in variants.language_id" :value="v.language_id">{{v.title}}</option> </b-select> </section> <section> <h3 class="has-mb-2 has-text-grey">Цифры</h3> <div class="row row-small"> <div class="col-xs"> <b-field label="decimal"> <input type="text" class="input" v-model="values.options.number.decimal"> </b-field> </div> <div class="col-xs"> <b-field label="thousands"> <input type="text" class="input" v-model="values.options.number.thousands"> </b-field> </div> <div class="col-xs"> <b-field label="precision"> <input type="number" class="input" v-model="values.options.number.precision"> </b-field> </div> </div> </section> <section> <h3 class="has-mb-2 has-text-grey">Даты</h3> <div class="row row-small"> <div class="col-xs"> <b-field label="datetime"> <input type="text" class="input" v-model="values.options.dates_format.datetime"> </b-field> </div> <div class="col-xs"> <b-field label="date"> <input type="text" class="input" v-model="values.options.dates_format.date"> </b-field> </div> <div class="col-xs"> <b-field label="time"> <input type="text" class="input" v-model="values.options.dates_format.time"> </b-field> </div> </div> </section> <section> <h3 class="has-mb-2 has-text-grey">Валюта</h3> <div class="row row-small"> <div class="col-xs"> <b-field label="format"> <input type="text" class="input" v-model="values.options.currency.format"> </b-field> </div> <div class="col-xs"> <b-field label="precision"> <input type="number" class="input" v-model="values.options.currency.precision"> </b-field> </div> </div> </section> <section> <h3 class="has-mb-2 has-text-grey">Цены</h3> <div class="panel panel-default has-p-2 has-mb-2" v-for="p in values.prices"> <div class="row row-small has-mb-2"> <div class="col-xs-4">Регион</div> <div class="col-xs"><input type="text" class="input has-mb-2" v-model="p.zone"></div> </div> <div class="row row-small has-mb-2"> <div class="col-xs-4"></div> <div class="col-xs">Основная</div> <div class="col-xs">Сравнение</div> <div class="col-xs" v-if="p.model == \'subscription\'">Ежемесячно</div> <div class="col-xs" v-if="p.model == \'subscription\'">Ежегодно</div> </div> <div class="row row-small has-mb-2"> <div class="col-xs-4">PRO</div> <div class="col-xs"><input type="number" class="input" v-model="p.prices.pro"></div> <div class="col-xs"><input type="number" class="input" v-model="p.prices_compare.pro"></div> <div class="col-xs" v-if="p.model == \'subscription\'"><input type="number" class="input" v-model="p.recurrent[1].pro"></div> <div class="col-xs" v-if="p.model == \'subscription\'"><input type="number" class="input" v-model="p.recurrent[12].pro"></div> </div> <div class="row row-small has-mb-2"> <div class="col-xs-4">BUSINESS</div> <div class="col-xs"><input type="number" class="input" v-model="p.prices.business"></div> <div class="col-xs"><input type="number" class="input" v-model="p.prices_compare.business"></div> <div class="col-xs" v-if="p.model == \'subscription\'"><input type="number" class="input" v-model="p.recurrent[1].business"></div> <div class="col-xs" v-if="p.model == \'subscription\'"><input type="number" class="input" v-model="p.recurrent[12].business"></div> </div> <div class="row row-small has-mb-2"> <div class="col-xs-4">Округление</div> <div class="col-xs"><input type="text" class="input" v-model="p.round"></div> </div> <div class="row row-small has-mb-2"> <div class="col-xs-4">Модель</div> <div class="col-xs"> <b-select v-model="p.model" expanded> <option v-for="(v, k) in variants.model" :value="k">{{v}}</option> </b-select> </div> </div> <div class="row row-small has-mb-2"> <div class="col-xs-4">Валюта</div> <div class="col-xs"> <b-select v-model="p.currency_id" expanded> <option v-for="v in variants.currency_id" :value="v.currency_id">{{v.title}}</option> </b-select> </div> </div> <div class="row row-small"> <div class="col-xs-4">Платежная система</div> <div class="col-xs"> <b-select v-model="p.payment_provider_id" placeholder="Не выбрано" expanded> <option :value="null">-- Не выбрано --</option> <option v-for="v in variants.payment_provider_id" :value="v.payment_provider_id">{{v.title}}</option> </b-select> </div> </div> </div> </section> </section> <footer class="modal-card-foot level"> <div class="level-item level-left"><mx-toggle v-model="values.is_publish" title="Опубликован" class="level-item"></mx-toggle></div> <div class="level-item level-right"><button class="button is-success" :class="{\'is-loading\': isUpdating}" type="button" @click="updateData">{{\'Сохранить\'|gettext}}</button></div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-payments",{data:function(){return{base:[],languages:[],currentNode:null,payments:null,isFetching:!1,isUpdating:!1,filter:"",filters:null,baseLanguage:!1}},mixins:[FormModel],props:["current","page_id"],created:function(){this.fetchData()},computed:{currentNodePhrases:function(){var t=this;return null==this.currentNode?null:null==this.currentNode.messages?this.currentNode.phrases:_.filter(this.phrases,function(e){return null!=t.currentNode.messages[e.k]})}},methods:{filterNodes:function(e){return e},onPageChange:function(e){this.page=e,this.fetchData()},onSort:function(e,t){this.sortField=e,this.sortOrder=t,this.fetchData()},fetchData:function(){var s=this;this.isFetching=!0,this.$api.get("manager/locales/payments/get",{language:this.current}).then(function(e){var t;"success"==e.result&&(t=e.response.locales,s.baseLanguage=t.language_base,s.phrases=t.phrases,s.phrases_base=t.phrases_base,s.languages=t.languages,s.payments=t.payments,s.current||(s.current=t.current)),s.isFetching=!1}).catch(function(e){throw s.locales=[],e})},selectNode:function(e,t){if(null!=e&&null!=e.messages)for(;0==e.messages.length;)e=e.nodes[Object.keys(e.nodes)[0]];this.currentNode=e,this.base=t},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/locales/payments/set",{phrases:this.phrases,language:this.current,payments:this.payments},this).then(function(e){t.isUpdating=!1})},hits:function(e){var t=0;if(null==e.messages)for(i in e.phrases)t+=""==e.phrases[i].v?1:0;else for(i in e.messages)t+=""==this.phrases[i].v?1:0;return t},getInputType:function(e){return""==e.v?"is-danger":""},changeLanguage:function(){this.currentNode=null,this.fetchData()}},template:'<div> <vue-component-submenu menu="manager.locales" :page_id="page_id"></vue-component-submenu> <div class="has-p-2 has-mb-2 has-mt-1"> <div class="row row-small"> <div class="col-sm-3"> <div class="media"> <div class="media-content"> <b-select v-model="current" expanded @input="changeLanguage"> <option :value="k" v-for="(v, k) in languages">{{v}}</option> </b-select> </div> <mx-toggle v-model="baseLanguage" trueValue="EN" falseValue="RU" class="is-pulled-right has-ml-2" :disabled="current == \'en\'"></mx-toggle> </div> </div> <div class="col-xs has-text-right"> <button class="button is-primary" @click="updateData" :class="{\'is-loading\': isUpdating}" :disabled="isFetching">{{\'Сохранить изменения\'|gettext}}</button> </div> </div> <hr class="is-hidden-mobile"> <div class="row"> <div class="col-sm-3"> <aside class="menu-locales" style="padding-bottom: 2rem"> <ul class="menu-list" v-if="payments"> <li v-for="p in payments"> <a class="is-block" @click="selectNode(p, p.phrases_base)" :class="{\'is-active\': currentNode== p}">{{p.title}} <span class="tag is-rounded is-danger" v-if="hits(p)">{{hits(p)}}</span></a></li> </ul> </aside> </div> <div class="col-sm-9"> <div> <div class="field" v-if="currentNode"> <label class="label">Title</label> <input type="text" class="input" v-model="currentNode.payment_title" placeholder="Not necessary"> </div> <hr class="is-hidden-mobile"> </div> <b-table :data="currentNodePhrases" :loading="isFetching" bordered v-if="currentNode"> <b-table-column field="k" width="200" label="Phrase" v-slot="props"> <div class="control is-fullwidth"><input :value="(baseLanguage && current != \'en\' && (base[props.row.k] != undefined))?base[props.row.k]:props.row.k" class="input" disabled></div> </b-table-column> <b-table-column field="v" width="200" label="Translate" v-slot="props"> <b-field :type="getInputType(props.row)"><b-input v-model="props.row.v" class="is-fullwidth"></b-input></b-field> </b-table-column> </b-table> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-phrases-add-form",{data:function(){return{isFetching:!1,isUpdating:!1,phrase:""}},props:["locales","current","phrases","root"],methods:{save:function(){var t=this;this.isUpdating=!0,this.current.messages[this.phrase]="",null==this.phrases[this.phrase]&&(this.phrases[this.phrase]={k:this.phrase,v:""}),this.$api.post("manager/locales/phrases/set",{phrases:this.locales,increment:this.root}).then(function(e){t.isUpdating=!1,"success"==e.result&&(t.$parent.close(),t.$parent.$parent.$forceUpdate())})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Добавлание фразы</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <b-field label="Фраза"> <input type="text" class="input" v-model="phrase" :disabled="isUpdating"> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-primary level-item" :class="{\'is-loading\': isUpdating}" type="button" @click="save">{{\'Добавить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-phrases-node-form",{data:function(){return{isFetching:!1,isUpdating:!1,value:null,last:null,items:[],list:{}}},props:["locales","current"],created:function(){var l=this;this.items=function s(a,i,n){return _.map(a.nodes,function(e,t){return i.i++,e==l.current&&(l.last=i.i),l.list[i.i]={k:t,w:e,p:a},null!=e.nodes?{i:i.i,title:t,level:n,items:s(e,i,n+1)}:{i:i.i,title:t,value:e,level:n}})}(this.locales,{i:0},1)},methods:{updateData:function(){var t=this;this.isUpdating=!0;var e=this.list[this.last],s=this.list[this.value];null==s.w.nodes&&(s.w.nodes={}),s.w.nodes[e.k]=e.w,delete e.p.nodes[e.k],0==_.size(e.p.nodes)&&delete e.p.nodes,this.$api.post("manager/locales/phrases/set",{phrases:this.locales}).then(function(e){t.isUpdating=!1,"success"==e.result&&(t.$parent.close(),t.$parent.$parent.$forceUpdate())})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Переместить группу\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="menu-locales"> <ul class="menu-list"> <li v-for="v in items"> <a><label :class="{\'has-text-weight-bold\': v.i == last}"><input type="radio" name="radio" :value="v.i" v-model="value" :disabled="last == v.i">{{v.title}}</label></a> <ul v-if="v.items"> <li v-for="w in v.items"><a><label :class="{\'has-text-weight-bold\': w.i == last}"><input type="radio" name="radio" :value="w.i" v-model="value" :disabled="last == w.i">{{w.title}}</label></a> <ul v-if="w.items"> <li v-for="ww in w.items"><a><label :class="{\'has-text-weight-bold\': ww.i == last}"><input type="radio" name="radio" :value="ww.i" v-model="value" :disabled="true">{{ww.title}}</label></a></li> </ul> </li> </ul> </li> </ul> </div> </section> <footer class="modal-card-foot"> <button class="button is-primary" type="button" @click="updateData" :disabled="!value" :class="{\'is-loading\': isUpdating}">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-locales-phrases",{data:function(){return{root:"",search:"",locales:null,phrases:null,phrases_base:null,base:[],languages:[],currentNode:null,amount_need:0,isFetching:!1,isUpdating:!1,filter:"",filters:null,baseLanguage:!1}},mixins:[FormModel],props:["current","page_id"],created:function(){this.fetchData()},computed:{currentNodePhrases:function(){var t=this;return this.search?_.filter(this.phrases,function(e){return t.baseLanguage&&"en"!=t.current&&null!=t.base[e.k]?-1!=t.base[e.k].toLowerCase().indexOf(t.search.toLowerCase()):-1!=e.k.toLowerCase().indexOf(t.search.toLowerCase())}):null==this.currentNode?null:null==this.currentNode.messages?this.currentNode.phrases:_.filter(this.phrases,function(e){return null!=t.currentNode.messages[e.k]})}},methods:{onAction:function(e){switch(e){case"move":this.$modal("vue-manager-locales-phrases-node-form",{locales:this.locales,current:this.currentNode},this);break;case"add":this.$modal("vue-manager-locales-phrases-add-form",{phrases:this.phrases,locales:this.locales,current:this.currentNode,root:this.root},this)}},filterNodes:function(e){return e},onPageChange:function(e){this.page=e,this.fetchData()},onSort:function(e,t){this.sortField=e,this.sortOrder=t,this.fetchData()},fetchData:function(){var a=this;this.isFetching=!0,this.$api.get("manager/locales/get",{language:this.current}).then(function(e){var t,s;"success"==e.result&&(t=e.response.locales,a.baseLanguage=t.language_base,a.phrases=t.phrases,a.phrases_base=t.phrases_base,a.locales=t.locales,a.languages=t.languages,a.current||(a.current=t.current),s=Object.keys(a.locales.nodes)[0],a.selectNode(a.locales.nodes[s],a.phrases_base,s)),a.isFetching=!1}).catch(function(e){throw a.locales=[],e})},selectNode:function(e,t,s){if(null!=e&&null!=e.messages)for(;0==e.messages.length;)e=e.nodes[Object.keys(e.nodes)[0]];this.currentNode=e,this.base=t,this.root=s},updateData:function(){var i=this;this.isUpdating=!0;var e=function s(e){var a={};return _.each(e,function(e,t){a[t]=i.hits(e),null!=e.nodes&&(a[t]+=_.sum(s(e.nodes)))}),a}(this.locales.nodes);this.$api.post("manager/locales/set",{phrases:this.phrases,language:this.current,statistics:{missing:e}},this).then(function(e){i.isUpdating=!1})},hits:function(e){var t=0;if(null==e.messages)for(i in e.phrases)t+=""==e.phrases[i].v?1:0;else for(i in e.messages)t+=""==this.phrases[i].v?1:0;return t},getInputType:function(e){return""==e.v?"is-danger":""},changeLanguage:function(){this.currentNode=null,this.fetchData()},changeFilter:function(){},openImportForm:function(){this.$modal("vue-manager-locales-import-form",{phrases:this.phrases,languages:this.languages,current:this.current},this)}},template:'<div> <vue-component-submenu menu="manager.locales" :page_id="page_id"></vue-component-submenu> <div class="has-p-2 has-mb-2 has-mt-1"> <div class="container is-mb-4" v-if="amount_need"> <b-notification type="is-danger has-mb-2" :closable="false"> Messages without translate: {{ amount_need }} </b-notification> </div> <div class="row row-small"> <div class="col-sm-3"> <div class="media"> <div class="media-content"> <b-select v-model="current" expanded @input="changeLanguage"> <option :value="k" v-for="(v, k) in languages">{{v}}</option> </b-select> </div> <mx-toggle v-model="baseLanguage" trueValue="EN" falseValue="RU" class="is-pulled-right has-ml-2" :disabled="current == \'en\'"></mx-toggle> </div> </div> <div class="col-xs"> <input type="text" v-model="search" class="input is-fullwidth" :placeholder="\'Поиск\'|gettext"> </div> <div class="col-sm-3 level"> <a @click="openImportForm" class="button is-light has-mr-1" v-tippy :content="\'Загрузить из Excel\'|gettext"><i class="fa fas fa-upload"></i></a> <a :href="\'/api/manager/locales/export/download.csv?current=\'+current" target="_blank" class="button is-light has-mr-1" v-tippy :content="\'Скачать в формате CSV\'|gettext"><i class="fa fas fa-download"></i></a> <vue-component-action-button v-if="$auth.isAllowEndpoint(\'manager/locales/phrases/set\')" @action="onAction" position="is-bottom-right" :title="\'Действие\'|gettext" classname="button is-light" class="has-mr-1"> <template slot="actions"> <b-dropdown-item value="move" :disabled="locales && (_.findIndex(locales.nodes, currentNode) != -1)"><i class="fa fa-exchange has-mr-1"></i>{{\'Переместить группу\'|gettext}}</b-dropdown-item> <b-dropdown-item value="add"><i class="fa fa-plus has-mr-1"></i>{{\'Добавить фразу\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> <button class="button is-primary is-fullwidth" @click="updateData" :class="{\'is-loading\': isUpdating}" :disabled="isFetching">{{\'Сохранить изменения\'|gettext}}</button> </div> </div> <hr class="is-hidden-mobile"> <div class="row"> <div class="col-sm-3"> <aside class="menu-locales" style="padding-bottom: 2rem" v-if="locales" :class="{disabled: search}" :style="{opacity: search?\'.1 !important\':1}"> <ul class="menu-list"> <li v-for="(v, i) in locales.nodes"> <a class="is-block" @click="selectNode(v, phrases_base, i)" :class="{\'is-active\': currentNode== v}">{{i}} <span class="tag is-rounded is-danger" v-if="hits(v)">{{hits(v)}}</span></a> <ul v-if="v.nodes"> <li v-for="(w, j) in v.nodes"><a class="is-block" @click="selectNode(w, phrases_base, i)" :class="{\'is-active\': currentNode== w}">{{j}} <span class="tag is-rounded is-danger" v-if="hits(w)">{{hits(w)}}</span></a> <ul v-if="w.nodes"> <li v-for="(ww, jj) in w.nodes"><a class="is-block" @click="selectNode(ww, phrases_base, i)" :class="{\'is-active\': currentNode== ww}">{{jj}} <span class="tag is-rounded is-danger" v-if="hits(ww)">{{hits(ww)}}</span></a> </li> </ul> </li> </ul> </li> </ul> </aside> </div> <div class="col-sm-9"> <b-table :data="currentNodePhrases" :loading="isFetching" bordered v-if="currentNode"> <b-table-column field="k" width="200" label="Phrase" v-slot="props"> <div class="control is-fullwidth"><input :value="(baseLanguage && current != \'en\' && (base[props.row.k] != undefined))?base[props.row.k]:props.row.k" class="input" disabled></div> </b-table-column> <b-table-column field="v" width="200" label="Translate" v-slot="props"> <b-field :type="getInputType(props.row)"><b-input v-model="props.row.v" class="is-fullwidth"></b-input></b-field> </b-table-column> </b-table> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-logs-form",{data:function(){return{isUpdating:!1,isFetching:!1,values:{}}},created:function(){this.fetchData(!0)},props:["message_id"],mixins:[FormModel],methods:{fetchData:function(e){var t=this;this.isFetching=e,this.$api.get("manager/logs/get",{message_id:this.message_id}).then(function(e){t.isFetching=!1,t.values=e.response.logs.message,t.values.message=JSON.stringify(t.values.message,null,"\t")})}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">Событие</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <vue-component-codemirror v-model="values.message" mode="application/json" readonly="true"></vue-component-codemirror> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-logs-list",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},perPage:100,filterTags:["owner_id","service_name"]}},mixins:[ListModel],created:function(){this.fetchData(!0)},methods:{onFilter:function(){this.clearPages(),this.fetchData(!0)},refresh:function(){this.fetchData(!1,!0)},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/logs/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){s.cachePage(e.response.logs),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},tagsFetch:function(e,t,s){0<=["owner_id"].indexOf(e)?s([]):this.$api.get("manager/logs/filters",{query:t,name:e}).then(function(e){s("success"==e.result?e.response.variants:[])})},onPageChange:function(e){this.page=e,this.fetchData()},clickRow:function(e){this.$modal("vue-manager-logs-form",{message_id:e.message_id},this)}},template:'<div> <vue-component-filterbox @filter="onFilter" :tags-fetch="tagsFetch" :allow-tags="filterTags" v-model="filter" :disabled="isFetching"></vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable bordered> <b-table-column field="post_id" label="" class="has-width-5 has-text-grey" v-slot="props">{{ props.row.message_id }}</b-table-column> <b-table-column field="service_name" label="Сервис" v-slot="props"> {{ props.row.service_name }} </b-table-column> <b-table-column field="code" label="HTTP Code" class="has-width-5" v-slot="props"> <span :class="{\'has-text-success\': props.row.code>= 200 && props.row.code < 300, \'has-text-danger\': props.row.code>= 400}">{{ props.row.code }}</span> </b-table-column> <b-table-column field="owner" label="Профиль" v-slot="props"> <span v-if="props.row.owner">{{ props.row.owner }}</span> </b-table-column> <b-table-column field="tms_created" label="Дата" numeric v-slot="props"> {{ props.row.tms|datetime }} </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-blocks-form",{data:function(){return{types:{text:"Текст",picture:"Картинка"},tabs:[{name:"common",title:"Общие"},{name:"preview",title:"Предпросмотр"},{name:"variables",title:"Переменные"}],currentTab:"common",isFetching:!1,isUpdating:!1,values:{title:"",group_id:null,html_body:"",variables:[]},variants:{group_id:{}}}},props:["block_id"],mixins:[FormModel],created:function(){this.fetchData(!0)},methods:{addVariable:function(){this.values.variables.push({name:"",title:"",type:null})},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(this.block_id?["manager/mails/blocks/get","manager/mails/blocks/info"]:"manager/mails/blocks/info",{block_id:this.block_id}).then(function(e){var t;s.isFetching=!1,"success"==e.result&&(t=e.response.blocks,s.block_id&&(s.values=t.values),s.variants=t.variants)})},save:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/mails/blocks/set",Object.assign(this.values,{block_id:this.block_id})).then(function(e){t.isUpdating=!1,t.$parent.close()})}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">Блок</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs nav-tabs-scroll has-text-left"> <li v-for="v in tabs" :class="{active: currentTab== v.name}"><a @click="currentTab = v.name">{{v.title}}</a></li> </ul> <section class="modal-card-body modal-card-body-blocks"> <section v-if="currentTab == \'common\'"> <div class="row row-small"> <div class="col-xs-12 col-sm-4"> <b-field :label="\'Группа\'|gettext"> <b-select :placeholder="\'Группа\'|gettext" v-model="values.group_id" expanded> <option v-for="g in variants.group_id" :value="g.group_id">{{g.group_title}}</option> </b-select> </b-field> </div> <div class="col-xs-12 col-sm-8"> <b-field :label="\'Заголовок\'|gettext"> <input type="text" class="input" v-model="values.title"> </b-field> </div> </div> </section> <section v-if="currentTab == \'common\'"> <vue-component-codemirror v-model="values.html_body" mode="text/x-smarty" base-mode="text/html" :line-wrapping="false" :auto-height="true"></vue-component-codemirror> </section> <section v-if="currentTab == \'preview\'" class="has-p-4"> <div v-html="values.html_body" style="pointer-events:none"></div> </section> <section v-if="currentTab == \'variables\'"> <div v-for="(v, i) in values.variables" class="row row-small has-mb-2"> <div class="col-xs-12 col-sm-3"> <b-select :placeholder="\'Группа\'|gettext" v-model="v.type" expanded> <option v-for="(t, id) in types" :value="id">{{t}}</option> </b-select> </div> <div class="col-xs-12 col-sm-3"> <input type="text" class="input" v-model="v.name" placeholder="Имя"> </div> <div class="col-xs"> <input type="text" class="input" v-model="v.title" placeholder="Название"> </div> <div class="col-xs col-shrink"> <button class="button is-danger" @click="values.variables.splice(i, 1)"><i class="fa fa-trash-alt"></i></button> </div> </div> <button class="button is-success" @click="addVariable">Добавить</button> </section> </section> <footer class="modal-card-foot"> <button class="button is-primary" type="button" @click="save" :class="{\'is-loading\': isUpdating}">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-blocks-list",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},columns:null}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.mails.blocks.list:refresh",this.refresh)},mounted:function(){this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.mails.blocks.list:refresh",this.refresh)},methods:{newForm:function(){this.$modal("vue-manager-mails-blocks-form",{block_id:null})},onFilter:function(){this.clearPages(),this.fetchData(!0)},refresh:function(){this.fetchData(!1,!0)},clickRow:function(e){this.$modal("vue-manager-mails-blocks-form",{block_id:e.block_id})},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/mails/blocks/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){var t=e.response.blocks;s.cachePage(t.list),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))}},template:'<div> <vue-component-submenu menu="manager.mails" :page_id="page_id"></vue-component-submenu> <vue-component-filterbox ref="filterbox" @filter="onFilter" v-model="filter" :with-buttons="true"> <template slot="buttons"> <a @click="newForm" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый блок\'|gettext}} </span></a> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column field="title" label="Название" class="has-width-5" v-slot="props">{{ props.row.title }}</b-table-column> <b-table-column field="group_title" label="Группа" class="has-width-5" v-slot="props">{{ props.row.group_title }}</b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-campaings-form",{data:function(){return{values:{},variant_idx:0,variants:{sender_id:null},view:"view",errors:{},isFetching:!1,isUpdating:!1,domain:"taplink.cc",activeTab:"text",isFetchingTags:!1,autocompleteTags:[],styles:"",toolsConfig:{image:{tunes:[]}}}},mixins:[FormModel],props:["campaing_id","onSaved"],components:{vRuntimeTemplate:vRuntimeTemplate},watch:{view:function(e){"html"==e&&this.autoFormat()},variant_idx:function(){"html"==this.view&&this.autoFormat()},values:{handler:function(){this.updateTitle()},deep:!0}},created:function(){this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.updateData}},this.updateTitle(),this.fetchData(!0)},computed:{template:function(){var e=this.send;if(!e)return"";var t=e.template_id?this.variants.template_id[e.template_id].template:"<div>{{body}}</div>";this.styles=e.template_id?"<style>"+this.variants.template_id[e.template_id].template_styles+"<style>":"";var s,a={};return e.sender_id&&(s=this.variants.sender_id[e.sender_id],a["sender.picture"]="/s/i/senders/"+e.sender_id+".jpg",a["sender.name"]=s.name,a["sender.subtitle"]="",e.language_code&&(s.locales[e.language_code]&&(s=null==s.locales[this.send.language_code]?s.locales.en:s.locales[e.language_code],a["sender.name"]=s.name,a["sender.subtitle"]=s.subtitle),e.template_id&&null!=this.variants.template_id[e.template_id].locales[e.language_code]&&Object.assign(a,this.variants.template_id[e.template_id].locales[e.language_code]))),t.replace("{{body}}",'<vue-component-htmleditor v-model="send.body" class="mails-editor" tools="color,paragraph,header,list,image,zeroblock,alignment" :tools-config="toolsConfig" document-class="" style="-webkit-font-smoothing: auto"/>').replace(/\{\{[^\}]+\}\}/g,function(e){return e=e.substring(2,e.length-2),null==a[e]?e:a[e]})},send:function(){return!this.isFetching&&this.variant_idx<this.values.sends.length?this.values.sends[this.variant_idx]:null}},methods:{updateTitle:function(){this.$form.top.title=this.values.campaing_title||this.$gettext("Письмо")},onAction:function(e){var t=this;switch(e){case"test":this.$prompt("На какую почту отправить письмо?",{value:this.$account.user.email}).then(function(e){t.$api.post("manager/mails/campaings/test",{campaing_id:t.campaing_id,language_code:t.send.language_code,email:e},t).then(function(e){"success"==e.result&&t.$toast("Письмо успешно отправленно","is-success")})});break;case"archive":this.onArchive()}},onAddingTag:function(e){return!_.find(this.values.tags,["tag_id",e.tag_id])},onAddedTag:function(e){"string"==typeof e&&(this.values.tags.pop(),this.values.tags.push({tag_id:null,tag:e}))},asyncAutocompleteTag:_.debounce(function(e){var t=this;""!=e.trim()?(this.isFetchingCollections=!0,this.$api.get("manager/mails/campaings/tags",{query:e}).then(function(e){t.autocompleteTags=_.differenceWith(e.response.tags,t.value,function(e,t){return e.tag_id==t.tag_id}),t.isFetchingTags=!1})):this.autocompleteCollections=[]},300),onArchive:function(){var t=this;this.$confirm("Вы уверены что хотите отправить эту компанию в архив?","is-warning").then(function(){t.$api.post("manager/mails/campaings/archive",{campaing_id:t.campaing_id},t).then(function(e){"success"==e.result&&t.$parent.close()})})},autoFormat:function(){var e=this;this.$nextTick(function(){null!=e.$refs.code&&e.$refs.code.autoFormat()})},prepareHTML:function(e){return(e.template_id&&null!=this.variants.template_id&&null!=this.variants.template_id[e.template_id]?this.variants.template_id[e.template_id].template:"<div>{{body}}</div>").replace("{{body}}",e.body)},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(this.campaing_id?["manager/mails/campaings/get","manager/mails/campaings/variants"]:"manager/mails/campaings/variants",{campaing_id:this.campaing_id}).then(function(e){var t;s.variants=e.response.campaings.variants,s.campaing_id?(t=e.response.campaings.values,s.values=t):(s.values={campaing_id:null,campaing_title:"",sender_id:null,sends:[],tags:[],is_active:1},s.addVariant()),s.isFetching=!1})},updateData:function(){var e=this;this.save(function(){e.$form.close()})},save:function(t){var s=this,a=Object.assign({campaing_id:this.campaing_id},this.values);a.tags=_.map(a.tags,"tag"),this.$api.post("manager/mails/campaings/set",a).then(function(e){"success"==e.result&&(t(),s.onSaved&&s.onSaved(a))}).catch(function(){})},addVariant:function(){var e=1,t="";this.values.sends.length&&this.values.sends[0].template_id&&(e=this.values.sends[0].template_id,t=this.variants.template_id[e].template);var s={send_id:null,subject:"",sender_name:"",variants:"",template_id:e,template:t,body:{time:0,blocks:[]},text:"",is_active:!0};s.html=this.prepareHTML(s),this.values.sends.push(s),this.variant_idx=this.values.sends.length-1},deleteVariant:function(e){var t=this;this.$confirm(this.$gettext("Вы уверены что хотите удалить этот вариант?"),"is-danger").then(function(){e==t.variant_idx&&(t.variant_idx=0),t.values.sends.splice(e,1),t.variant_idx>e&&t.variant_idx--})},updateBody:function(){var e=this.values.sends[this.variant_idx],t=this.prepareHTML(e);e.html!=t&&(e.html=t)},chooseTemplate:function(){var e=this.values.sends[this.variant_idx];e.template=this.variants.template_id[e.template_id].template,this.updateBody()}},template:'<div style="display: flex;flex-direction: column"> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a @click="activeTab = \'text\'" class="button" :class="{active: \'text\' == activeTab}">{{\'Редактор\'|gettext}}</a> <a @click="activeTab = \'common\'" class="button" :class="{active: \'common\' == activeTab}">{{\'Настройки\'|gettext}}</a> </div> </div> </div> </div> <div class="row row-noborder" style="flex-grow: 1"> <div class="col-xs-3 mails-sidebar" v-if="!isFetching"> <div v-for="(v, i) in values.sends" @click="variant_idx = i" :class="{in: variant_idx== i}"> <label class="label has-text-grey">{{\'Условия\'|gettext}}</label> <div :class="{disabled: !v.is_active}"><dt>Язык:</dt><dd>{{v.language_code}}</dd></div> </div> <div @click="addVariant" class="has-text-centered"><i class="fa fa-plus has-mr-2"></i>{{\'Добавить вариант\'|gettext}}</div> </div> <div class="col-xs-9"> <section v-if="!isFetching"> <section v-if="activeTab == \'common\'" class="has-p-2"> <div class="row row-small"> <div class="col-xs-12 col-sm-6"> <label class="label">Название рассылки</label> <b-input type="text" v-model="values.campaing_title"></b-input> </div> <div class="col-xs-12 col-sm-6"> <b-field :label="\'Метки\'|gettext"> <b-taginput v-model="values.tags" :data="autocompleteTags" :before-adding="onAddingTag" @add="onAddedTag" :allow-new="true" confirm-key-codes=\'[13]\' autocomplete field="tag" @typing="asyncAutocompleteTag" placeholder="Укажите метки" :loading="isFetchingTags" attached> <template slot-scope="props"> <strong>{{props.option.tag}}</strong> </template> <template slot="empty"> <div v-if="isFetchingTags">{{\'Идет загрузка\'|gettext}}</div> <div v-else>{{\'Ничего не найдено\'|gettext}}</div> </template> </b-taginput> </b-field> </div> </div> <hr> <div class="row row-small"> <div class="col-xs-12 col-sm-6"> <label class="label">Заголовок письма</label> <b-input type="text" v-model="send.subject"></b-input> </div> <div class="col-xs-12 col-sm-3"> <label class="label">Язык</label> <b-select v-model="values.sends[variant_idx].language_code" expanded placeholder="Язык не выбран"> <option v-for="d in variants.language_id" :value="d.language_code">{{d.language_title}}</option> </b-select> </div> <div class="col-xs-12 col-sm-3"> <label class="label">Отправитель</label> <b-select placeholder="-- Не выбран --" v-model="send.sender_id" expanded> <option v-for="f in variants.sender_id" :value="f.sender_id" :key="f.sender_id">{{f.fullname}}</option> </b-select> </div> </div> <hr> <div class="level"> <mx-toggle v-model="send.is_active" :title="\'Активный\'|gettext" class="level-left"/> <button @click="deleteVariant(variant_idx)" class="button is-danger level-right" :disabled="values.sends.length == 1"><i class="fa fa-trash-alt has-mr-2"></i>Удалить вариант</button> </div> </section> <section style="padding-bottom: 0" v-if="(activeTab == \'text\') && send"> <div style="padding: 0;display: flex;justify-content: space-between;align-items: center;padding: 0 1rem; overflow: inherit;" class="top-panel"> <ul class="menu nav nav-tabs nav-tabs-scroll"> <li><a :class="{\'active\': view== \'view\'}" @click="view = \'view\'">Просмотр</a></li> <li><a :class="{\'active\': view== \'text\'}" @click="view = \'text\'">Текст</a></li> </ul> <div style="flex:1"></div> <b-dropdown v-if="view == \'view\'" v-model="send.template_id" aria-role="list" position="is-bottom-left" class="button has-mr-1"><label slot="trigger" aria-role="listitem">Шаблон: {{variants.template_id[send.template_id].template_title}} <i class="fal fa-chevron-down has-ml-1"></i></label> <b-dropdown-item :value="id" v-for="(f, id) in variants.template_id">{{f.template_title}}</b-dropdown-item> </b-dropdown> <vue-component-action-button @action="onAction" :title="\'Действие\'|gettext" position="is-bottom-left"> <template slot="actions"> <b-dropdown-item value="test"><i class="fa fa-paper-plane"></i> {{\'Отправить тестовое письмо\'|gettext}}</b-dropdown-item> <b-dropdown-item value="archive"><i class="fa fa-archive"></i> {{\'В архив\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> </div> </section> <section style="padding:0" v-if="(activeTab == \'text\') && send"> <div v-if="!isFetching && view== \'view\'" :data-template="send.template_id"> <v-runtime-template :template="template"></v-runtime-template> <div v-html="styles"></div> </div> </section> <section v-if="(view == \'text\') && (activeTab == \'text\') && send"> <vue-component-emoji-picker v-model="send.text"> <textarea class="input autoresize-init" :placeholder="\'Текст\'|gettext" v-emoji v-model="send.text" style="min-height: 400px"></textarea> </vue-component-emoji-picker> </section> </section> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-campaings-list",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},columns:null,filterTags:["archive"]}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.mails.campaings.list:refresh",this.refresh)},mounted:function(){this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.mails.campaings.list:refresh",this.refresh)},methods:{tagsFetch:function(e,t,s){0<=["archive"].indexOf(e)&&s([])},newForm:function(){this.$form.open("vue-manager-mails-campaings-form",{campaing_id:null})},onFilter:function(){this.clearPages(),this.fetchData(!0)},refresh:function(){this.fetchData(!1,!0)},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get(this.columns?"manager/mails/campaings/list":["manager/mails/campaings/list","manager/mails/campaings/info"],{next:this.$refs.list.next,count:this.$refs.list.perPage,filter:this.filter,info:"columns"}).then(function(e){var t=e.response.campaings;s.$refs.list.cachePage(t.list),null!=t.info&&null!=t.info.columns&&(s.columns=t.info.columns),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))}},template:'<div> <vue-component-submenu menu="manager.mails" :page_id="page_id"/> <vue-component-filterbox ref="filterbox" @filter="onFilter" v-model="filter" :tags-fetch="tagsFetch" :allow-tags="filterTags" :with-buttons="true"> <template slot="buttons"> <a @click="newForm" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новая рассылка\'|gettext}} </span></a> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <vue-manager-mails-campaings-table ref=\'list\' :columns="columns" :isFetching.sync="isFetching" @fetch-data="fetchData"></vue-manager-mails-campaings-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-campaings-table",{data:function(){return{perPage:50}},props:["columns","isFetching"],mixins:[ListModel],computed:{columns_props:function(){if(!this.columns)return[];for(var s={campaing_title:{label:"Название",classname:"has-text-nowrap",sortable:!0},amount_sent:{label:"Доставленно",classname:"has-width-15",sortable:!0,numeric:!0},amount_bounced:{label:"Ошибки",classname:"has-width-15",sortable:!0,numeric:!0},amount_opened:{label:"Открыли",classname:"has-width-15",sortable:!0,numeric:!0},amount_clicked:{label:"Кликнули",classname:"has-width-15",sortable:!0,numeric:!0}},e=_.map(this.columns,function(e){var t=s[e];return t.visible=!0,t.field=e,t}),t=0;t<11-this.columns.length;t++)e.push({visible:!1});return e[0].classname+=" has-text-nowrap",e}},methods:{fetchData:function(e,t){this.$emit("fetch-data",[e,t])},clickRow:function(e){this.$form.open("vue-manager-mails-campaings-form",{campaing_id:e.campaing_id})},sentrate:function(e){return Math.min(e.amount_sent+e.amount_bounced?Math.round(e.amount_sent/(e.amount_sent+e.amount_bounced)*1e4)/100:0,100)},bouncedrate:function(e){return Math.min(e.amount_sent+e.amount_bounced?Math.round(e.amount_bounced/(e.amount_sent+e.amount_bounced)*1e4)/100:0,100)},openrate:function(e){return Math.min(e.amount_sent?Math.round(e.amount_opened/e.amount_sent*1e4)/100:0,100)},clickrate:function(e){return Math.min(e.amount_opened?Math.round(e.amount_clicked/e.amount_opened*1e4)/100:0,100)}},template:'<div> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :current-page="page" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column v-for="(column, index) in columns_props" :field="column.field" :label="column.label|gettext" :cell-class="[\'td-progress\', column.classname]" :numeric="column.numeric" :key="index" :visible="column.visible" :sortable="column.sortable" :width="column.width" v-slot="props"> <span v-if="column.field == \'campaing_title\'"> {{ props.row.campaing_title }} <div class="tags" class="tags is-pulled-right" v-if="_.size(props.row.tags)"><span class="tag is-light" v-for="c in props.row.tags">{{c}}</span></div> </span> <span v-if="column.field == \'amount_sent\'"> <div class="td-progress-value has-background-info" :style="{\'width\': sentrate(props.row)+\'%\'}"></div> <div class="td-progress-body"> <div class="is-pulled-right">{{props.row.amount_sent|number}}</div> <span class="has-text-grey">{{sentrate(props.row)|number(2)}}%</span> </div> </span> <span v-if="column.field == \'amount_bounced\'"> <div class="td-progress-value has-background-danger" :style="{\'width\': bouncedrate(props.row)+\'%\'}"></div> <div class="td-progress-body"> <div class="is-pulled-right">{{props.row.amount_bounced|number}}</div> <span class="has-text-grey">{{bouncedrate(props.row)|number(2)}}%</span> </div> </span> <span v-if="column.field == \'amount_opened\'"> <div class="td-progress-value has-background-warning" :style="{\'width\': openrate(props.row)+\'%\'}"></div> <div class="td-progress-body"> <div class="is-pulled-right">{{props.row.amount_opened|number}}</div> <span class="has-text-grey">{{openrate(props.row)|number(2)}}%</span> </div> </span> <span v-if="column.field == \'amount_clicked\'"> <div class="td-progress-value has-background-success" :style="{\'width\': clickrate(props.row)+\'%\'}"></div> <div class="td-progress-body"> <div class="is-pulled-right">{{props.row.amount_clicked|number}}</div> <span class="has-text-grey">{{clickrate(props.row)|number(2)}}%</span> </div> </span> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-messages-list",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},statistics:null,perPage:100,filterTags:["campaing"]}},props:["page_id"],mixins:[ListModel],created:function(){this.fetchData(!0),this.fetchStatistics()},methods:{onFilter:function(){this.clearPages(),this.fetchData(!0)},fetchStatistics:function(){var t=this;this.statistics=null,this.$api.get("manager/mails/messages/statistics").then(function(e){"success"==e.result&&(t.statistics=e.response.statistics)})},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/mails/messages/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){s.cachePage(e.response.messages),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},tagsFetch:function(e,t,s){0<=["campaing"].indexOf(e)?s([]):this.$api.get("manager/mails/messages/filters",{query:t,name:e}).then(function(e){s("success"==e.result?e.response.variants:[])})}},template:'<div> <vue-component-submenu menu="manager.mails" :page_id="page_id"/> <div class="container has-mb-2 has-mt-2" v-if="statistics"> <div v-for="stat in statistics"> <div style="display: flex;flex-direction: row"> <div class="has-background-grey-light profiles-conversion-bar" style="flex-grow: 1"> <div :data-stage="s.stage" v-tippy :style="{width: s.percent}" :content="s.message_status" v-for="s in stat"><span>{{s.title}}</span></div> </div> </div> </div> </div> <vue-component-filterbox @filter="onFilter" :tags-fetch="tagsFetch" :allow-tags="filterTags" v-model="filter" :disabled="isFetching"></vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered> <b-table-column field="post_id" label="ID" class="has-width-5 has-text-grey" v-slot="props">{{ props.row.message_id }}</b-table-column> <b-table-column field="service_name" label="Адрес" v-slot="props">{{ props.row.address }}</b-table-column> <b-table-column :label="\'Дата\'|gettext" v-slot="props">{{ props.row.tms_created|datetime }}</b-table-column> <b-table-column :label="\'Заголовок\'|gettext" v-slot="props">{{ props.row.subject }}</b-table-column> <b-table-column :label="\'Статус\'|gettext" v-slot="props"> <div :class="\'has-text-\'+props.row.message_status_classname"> <span v-if="props.row.message_status_id == 4" class="has-text-danger is-pulled-right" v-tippy :content="props.row.reason"><i class="fal fa-exclamation-triangle"></i></span> {{ props.row.message_status|gettext }} </div> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-senders-form",{data:function(){return{values:{domain_id:null,username:"",name:"",locales:[]},variants:{},isFetching:!1,isUpdating:!1}},mixins:[FormModel],props:["sender_id"],created:function(){this.fetchData(!0)},methods:{addLocale:function(){this.values.locales.push({language_code:null,name:"",subtitle:""})},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(this.sender_id?["manager/mails/senders/get","manager/mails/senders/info"]:"manager/mails/senders/info",{sender_id:this.sender_id}).then(function(e){var t;"success"==e.result&&(t=e.response.senders,s.sender_id&&(s.values=t.values),s.variants=t.variants),s.isFetching=!1})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/mails/senders/set",Object.assign(this.values,{sender_id:this.sender_id}),this).then(function(e){"success"==e.result&&(t.isUpdating=!1,t.$parent.close())})}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">Отправитель</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <div class="row row-small"> <div class="col-xs-12 col-sm-4"> <input type="text" class="input" v-model="values.name" placeholder="Имя"> </div> <div class="col-xs-12 col-sm-4"> <input type="text" class="input" v-model="values.username" placeholder="Имя пользователя"> </div> <div class="col-xs-12 col-sm-4"> <b-select v-model="values.domain_id" expanded> <option v-for="d in variants.domain_id" :value="d.domain_id">@{{d.domain}}</option> </b-select> </div> </div> </section> <section> <div class="row row-small has-mb-2" v-for="(l, i) in values.locales"> <div class="col-xs-12 col-sm-4"> <b-select v-model="l.language_code" expanded placeholder="Язык не выбран"> <option v-for="d in variants.language_id" :value="d.language_code">{{d.language_title}}</option> </b-select> </div> <div class="col-xs"> <input type="text" class="input" v-model="l.name" placeholder="ФИО"> </div> <div class="col-xs"> <input type="text" class="input" v-model="l.subtitle" placeholder="Подпись"> </div> <div class="col-xs col-shrink"> <button class="button is-danger" @click="values.locales.splice(i, 1)"><i class="fa fa-trash-alt"></i></button> </div> </div> <button class="button is-light" @click="addLocale"><i class="fa fa-plus has-mr-2"></i>Добавить</button> </section> </section> <footer class="modal-card-foot"> <button class="button is-primary" type="button" @click="updateData" :class="{\'is-loading\': isUpdating}" :disabled="isFetching">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-senders-list",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},columns:null}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.mails.senders.list:refresh",this.refresh)},mounted:function(){this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.mails.senders.list:refresh",this.refresh)},methods:{newForm:function(){this.$modal("vue-manager-mails-senders-form",{sender_id:null})},onFilter:function(){this.clearPages(),this.fetchData(!0)},refresh:function(){this.fetchData(!1,!0)},clickRow:function(e){this.$modal("vue-manager-mails-senders-form",{sender_id:e.sender_id})},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/mails/senders/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){var t=e.response.senders;s.cachePage(t.list),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))}},template:'<div> <vue-component-submenu menu="manager.mails" :page_id="page_id"></vue-component-submenu> <vue-component-filterbox ref="filterbox" @filter="onFilter" v-model="filter" :with-buttons="true"> <template slot="buttons"> <a @click="newForm" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый отправитель\'|gettext}} </span></a> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column field="name" label="Название" class="has-width-5" v-slot="props">{{ props.row.name }}</b-table-column> <b-table-column field="address" label="Адрес" class="has-width-5" v-slot="props">{{ props.row.address }}</b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-sequences-blocks-notifier_campaing",{data:function(){return{}},props:["data","block"],created:function(){this.$parent.isShowSidebarFooter=!1},methods:{edit:function(){var t=this;this.$form.open("vue-manager-mails-campaings-form",{campaing_id:this.data.campaing_id,onSaved:function(e){t.block.title=e.campaing_title,t.$parent.updateBlock(!1)}})}},template:'<div> <b-field :label="\'Заголовок\'|gettext"> <input type="text" class="input" v-model="block.title" disabled> </b-field> <button class="button is-black is-fullwidth" :disabled="!data.campaing_id" @click="edit">Редактировать</button> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-sequences-blocks-process_condition",{props:["data","block"],template:'<div> <b-field :label="\'Заголовок\'|gettext"> <input type="text" class="input" v-model="block.title"> </b-field> <hr> <b-field :label="\'Условие\'|gettext"> <vue-component-codemirror v-model="data.condition" mode="text/javascript" :line-numbers="false" class="panel panel-default"/> </b-field> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-sequences-blocks-process_wait",{data:function(){return{wait_type:{timeout:"Таймаут"}}},props:["data","block"],watch:{data:{handler:function(){var e;this.data.date?(e=parseInt(this.data.date.substr(0,this.data.date.length-1)),this.block.title="Ждем "+e+" "+{s:"сек.",m:"мин.",h:"час.",d:"дн."}[this.data.date.substr(-1,1)]):this.block.title="Таймер"},deep:!0}},template:'<div> <b-field :label="\'Тип\'|gettext"> <b-select v-model="data.wait_type" :placeholder="\'Не выбрано\'|gettext" expanded> <option :value="null">{{\'Не выбрано\'|gettext}}</option> <option :value="k" v-for="(v, k) in wait_type">{{v}}</option> </b-select> </b-field> <hr> <vue-component-delay-input v-model="data.date" v-if="data.wait_type == \'timeout\'"/> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-sequences-form",{data:function(){return{isFetching:!1,isUpdating:!1,sidebarShown:!1,sidebarBlock:null,isShowSidebarFooter:!1,zoomValue:100,values:{},variants:null}},props:["sequence_id"],created:function(){var e=this;this.$form.top.buttons=[{classname:"is-black",title:"Добавить",icon:"fa fa-plus",click:function(){e.sidebarBlock=null,e.sidebarShown=!0}}],this.updateTitle()},watch:{values:{handler:function(){this.updateTitle()},deep:!0}},mounted:function(){var e=this;$mx.lazy("processes.js?205","processes.css",function(){e.fetchData()}),$mx("footer").addClass("is-hidden")},destoyed:function(){$mx("footer").removeClass("is-hidden")},methods:{updateTitle:function(){this.$form.top.title=this.values.sequence_title||this.$gettext("Цепочка")},showOptions:function(){this.$modal("vue-manager-mails-sequences-options-form",{sequence_id:this.sequence_id,values:this.values,variants:this.variants})},zoomPlus:function(){this.zoom(.1)},zoomMinus:function(){this.zoom(-.1)},zoomReset:function(){$.processes.diagram.commandHandler.resetZoom(1)},zoom:function(e){$.processes.diagram.commandHandler.resetZoom(Math.round(10*($.processes.diagram.scale+e))/10)},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(["manager/mails/sequences/get","manager/mails/sequences/info"],{sequence_id:this.sequence_id}).then(function(e){var t;"success"==e.result&&(t=e.response.sequences,s.values=t.values,s.variants=t.variants,s.initCanvas()),s.isFetching=!1})},initCanvas:function(){var s=this;$.processes.events.restoreBlock=function(e,t){s.$api.get("manager/mails/sequences/element/restore",Object.assign(e,{sequence_id:s.sequence_id})).then(function(e){"success"==e.result&&t(e.response.element)})},$.processes.events.newBlock=function(e,t){s.$api.get("manager/mails/sequences/element/create",Object.assign(e,{sequence_id:s.sequence_id})).then(function(e){"success"==e.result&&t(e.response.element)})},$.processes.events.moveBlock=function(e,t){s.$api.get("manager/mails/sequences/element/move",Object.assign(e,{sequence_id:s.sequence_id})).then(function(e){"success"==e.result&&t()})},$.processes.events.deleteBlock=function(e,t){s.$api.post("manager/mails/sequences/element/delete",{sequence_id:s.sequence_id,key:e.key}).then(function(e){"success"==e.result&&t()})},$.processes.events.newlink=function(e,t){s.$api.post("manager/mails/sequences/link/create",{sequence_id:s.sequence_id,link:e}).then(function(e){"success"==e.result&&t()})},$.processes.events.deletelink=function(e,t){s.$api.post("manager/mails/sequences/link/delete",{sequence_id:s.sequence_id,key:e}).then(function(e){"success"==e.result&&t()})},$.processes.events.relink=function(e,t){s.$api.post("manager/mails/sequences/link/relink",Object.assign(e,{sequence_id:s.sequence_id})).then(function(e){"success"==e.result&&t()})},$.processes.events.selectElement=function(e){var t;null!=s.variants.types[e.category]&&(t=s.variants.types[e.category],s.sidebarBlock={type:t.block_type.replace(/\./g,"_"),title:t.title,block:e,data:_.clone(e.data),title:_.clone(e.title)},s.isShowSidebarFooter=null==t.options.sidebar||null==t.options.sidebar.saveButton||t.options.sidebar.saveButton,s.sidebarShown=!0)},$.processes.events.clearSelection=function(e){s.sidebarShown=!1,s.sidebarBlock=null},$.processes.events.setViewport=function(e){s.$api.get("manager/mails/sequences/setviewport",Object.assign(e,{sequence_id:s.sequence_id}))},this.values.elements.push({title:"Start",category:"endpoint",key:"0",loc:this.values.start_loc}),links=[],_.each(this.values.links,function(e,s){_.each(e,function(e,t){links.push({category:"flow",f:t,from:s.substr(1),t:e.substr(0,1),to:e.substr(1)})})});var e={isReadonly:!1,viewportZoom:this.values.viewport.zoom,viewportPosition:this.values.viewport.x+" "+this.values.viewport.y,fromMaxKink:1},t={class:"go.GraphLinksModel",linkFromPortIdProperty:"f",linkToPortIdProperty:"t",nodeDataArray:this.values.elements,linkDataArray:links};$.processes.showZoomValue=function(e){s.zoomValue=e},$.processes.init(this.$refs.diagram,e,t,this.variants.types)},updateBlock:function(e){var t=this,s=!(0<arguments.length&&void 0!==e)||e;this.isUpdating=!0;var a=this.sidebarBlock.block;a.data=this.sidebarBlock.data,a.title=this.sidebarBlock.title,$.processes.diagram.findNodeForKey(a.key).findObject("title").text=a.title,this.$api.post("manager/mails/sequences/element/update",{sequence_id:this.sequence_id,key:a.key,data:a.data,title:a.title}).then(function(e){"success"==e.result&&(t.isUpdating=!1,s&&(t.sidebarShown=!1))})}},template:'<div style="display: flex"> <div class="diagram-place" ref="diagram"></div> <div class="processes-zoom-panel"> <div> <button class="button is-large" @click="showOptions"><i class="fa fa-cog"></i></button> </div> <div> <button class="button btn-zoom-minus is-large" @click="zoomMinus"><i class="fa fa-minus"></i></button> <button class="button btn-zoom-value is-large" @click="zoomReset">{{zoomValue}}%</button> <button class="button btn-zoom-plus is-large" @click="zoomPlus"><i class="fa fa-plus"></i></button> </div> </div> <div style="position: absolute;bottom:30px;right:30px;z-index: 9"> <button class="button is-clear is-large" style="margin-left:5px" onclick="$.processes.undoManager.undo()" id=\'idProcessUndoBtn\' disabled="on"><i class="fa fa-undo"></i></button> <button class="button is-clear is-large" style="margin-left:5px" onclick="$.processes.undoManager.redo()" id=\'idProcessRedoBtn\' disabled="on"><i class="fa fa-redo"></i></button> </div> <div class="processes-sidebar" :class="{in: sidebarShown}" v-if="variants"> <div class="is-header"> <h2 v-if="sidebarBlock">{{variants.types[sidebarBlock.block.category].title}}</h2> <h2 v-else>Новый блок</h2> <button class="modal-close is-large" @click="sidebarShown = false"></button> </div> <component v-bind:is="\'vue-manager-mails-sequences-blocks-\'+sidebarBlock.type" :data="sidebarBlock.data" :block="sidebarBlock" v-if="sidebarBlock" class="has-p-2 is-body"/> <div class="is-body" v-else> <div class="processes-pallete"> <div draggable="true" :data-value="t.id" v-for="t in variants.types" v-if="!t.parent_id"> <center> <svg version="1.1" style=\'display:block\' xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="48px" height="48px" :viewBox="t.icon_viewbox" xml:space="preserve"> <g><path :d="t.icon"></path></g> </svg> </center>{{t.title}}</div> </div> </div> <div class="is-footer" v-if="sidebarBlock && isShowSidebarFooter"> <button class="button is-primary" @click="updateBlock" :class="{\'is-loading\': isUpdating}">{{\'Сохранить изменения\'|gettext}}</button> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-sequences-list",{data:function(){return{isFetching:!1,sequence:null,perPage:100,filter:{query:"",tags:[]},columns:["sequence_title"],columnsItems:null,filterTags:["archive"]}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.mails.sequences.list:refresh",this.refresh),this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.mails.sequences.list:refresh",this.refresh)},computed:{columns_props:function(){if(!this.columns)return[];for(var s={sequence_title:{label:"Название",classname:"has-text-nowrap",sortable:!0}},e=_.map(this.columns,function(e){var t=s[e];return t.visible=!0,t.field=e,t}),t=0;t<11-this.columns.length;t++)e.push({visible:!1});return e[0].classname+=" has-text-nowrap",e}},methods:{tagsFetch:function(e,t,s){s([])},onFilter:function(){this.clearPages(),this.fetchData(!0)},refresh:function(){this.fetchData(!1,!0)},clickRow:function(e){this.$form.open("vue-manager-mails-sequences-form",{sequence_id:e.sequence_id})},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/mails/sequences/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){var t=e.response.sequences;s.cachePage(t.list),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},fetchDataItems:function(e,t){var s=this;!t&&this.$refs.list.checkCache()||(this.isFetching=e,this.$api.get(this.columnsItems?"manager/mails/campaings/list":["manager/mails/campaings/list","manager/mails/campaings/info"],{next:this.$refs.list.next,count:this.$refs.list.perPage,sequence_id:this.sequence.sequence_id}).then(function(e){var t=e.response.campaings;s.$refs.list.cachePage(t.list),null!=t.info&&null!=t.info.columns&&(s.columnsItems=t.info.columns),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))}},template:'<div> <vue-component-submenu menu="manager.mails" :page_id="page_id"></vue-component-submenu> <vue-component-filterbox ref="filterbox" @filter="onFilter" v-model="filter" :tags-fetch="tagsFetch" :allow-tags="filterTags" :with-buttons="true" v-if="!sequence"> <template slot="buttons"> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <div v-if="sequence" class="panel panel-default has-mt-3 has-mb-3"> <div class="has-p-2 level"> <div class="level-left">{{sequence.sequence_title}}</div> <div class="level-right"><button class="button is-light" @click="sequence = null">К списку</button></div> </div> </div> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow" v-else> <b-table-column v-for="(column, index) in columns_props" :field="column.field" :label="column.label|gettext" :numeric="column.numeric" :key="index" :visible="column.visible" :sortable="column.sortable" :width="column.width" v-slot="props"> <span v-if="column.field == \'sequence_title\'"> {{ props.row.sequence_title }} </span> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> <vue-manager-mails-campaings-table ref=\'list\' :columns="columnsItems" :isFetching.sync="isFetching" @fetch-data="fetchDataItems" v-show="sequence"></vue-manager-mails-campaings-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-sequences-options-form",{data:function(){return{isFetching:!1,isUpdating:!1,v:{}}},props:["sequence_id","values","variants"],created:function(){this.v=_.clone(this.values)},methods:{updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/mails/sequences/set",{sequence_id:this.sequence_id,sequence_title:this.v.sequence_title,data_model_id:this.v.data_model_id}).then(function(e){"success"==e.result&&(t.values.sequence_title=t.v.sequence_title,t.$parent.close()),t.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Настройки</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <b-field :label="\'Название\'|gettext"> <input type="text" class="input" v-model="v.sequence_title"> </b-field> <b-field :label="\'Модель данных\'|gettext"> <b-select v-model="v.data_model_id" :placeholder="\'Не выбрано\'|gettext" expanded> <option :value="null">{{\'Не выбрано\'|gettext}}</option> <option :value="k" v-for="(v, k) in variants.data_model_id">{{v}}</option> </b-select> </b-field> </section> </section> <footer class="modal-card-foot"> <button class="button is-primary" type="button" @click="updateData" :class="{\'is-loading\': isUpdating}" :disabled="isFetching">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-templates-form",{data:function(){return{activeTab:"view",language_id:null,values:{parent_id:null,template_title:"",template:"",locales:{},phrases:{},is_hidden:!1},variants:{},isFetching:!1,isUpdating:!1}},mixins:[FormModel],props:["template_id"],mounted:function(){this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.updateData}},this.$form.top.title=this.$gettext("Шаблон"),this.fetchData(!0)},methods:{phrasesUpdated:function(){var s=this;this.language_id||_.each(this.values.locales,function(e,t){s.values.locales[t]=s.merge(s.values.phrases,e)})},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get(this.template_id?["manager/mails/templates/get","manager/mails/templates/info"]:"manager/mails/templates/info",{template_id:this.template_id}).then(function(e){var t;"success"==e.result&&(t=e.response.templates,s.template_id&&(s.values=t.values),s.variants=t.variants),s.isFetching=!1})},updateData:function(){var e=this;this.save(function(){e.$form.close()})},save:function(t){var s=this;this.isUpdating=!0;Object.assign({template_id:this.template_id},this.values);this.$api.post("manager/mails/templates/set",this.values,this).then(function(e){s.isUpdating=!1,"success"==e.result&&t()}).catch(function(){s.isUpdating=!1})},addPhrase:function(){var e=prompt("Укажите название переменной","");e&&(_.isArray(this.values.phrases)&&!this.values.phrases.length&&(this.values.phrases={}),this.$set(this.values.phrases,e,""),this.phrasesUpdated())}},template:'<div style="display: flex;flex-direction: column"> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a @click="activeTab = \'view\'" class="button" :class="{active: \'view\' == activeTab}">{{\'Просмотр\'|gettext}}</a> <a @click="activeTab = \'html\'" class="button" :class="{active: \'html\' == activeTab}">{{\'HTML\'|gettext}}</a> <a @click="activeTab = \'styles\'" class="button" :class="{active: \'styles\' == activeTab}">{{\'Стили\'|gettext}}</a> <a @click="activeTab = \'locales\'" class="button" :class="{active: \'locales\' == activeTab}">{{\'Мультиязычность\'|gettext}}</a> <a @click="activeTab = \'options\'" class="button" :class="{active: \'options\' == activeTab}">{{\'Настройки\'|gettext}}</a> <a @click="activeTab = \'css\'" class="button" :class="{active: \'css\' == activeTab}">{{\'Классы\'|gettext}}</a> </div> </div> </div> </div> <section v-if="activeTab == \'html\'" class="section-fullheight"> <vue-component-codemirror v-model="values.template_body" mode="text/x-smarty" base-mode="text/html" :line-wrapping="false"/> </section> <section v-if="activeTab == \'styles\'" class="section-fullheight"> <vue-component-codemirror v-model="values.template_body_styles" mode="text/css" :line-wrapping="false"/> </section> <section v-if="activeTab == \'view\'"> <div v-html="\'<\'+\'style>\'+values.template_body_styles+\'</\'+\'style>\'"></div> <div v-html="values.template_body"></div> </section> <section v-if="activeTab == \'locales\'"> <div class="container has-mt-2 has-mb-2"> <vue-manager-cms-pages-locales :locales.sync="values.locales" :phrases.sync="values.phrases" :language_id.sync="language_id" :variants="variants" :disabled="isFetching"> </div> </section> <section v-if="activeTab == \'options\'"> <div class="container has-mt-2 has-mb-2"> <b-field label="Название"> <input type="text" class="input" v-model="values.template_title"> </b-field> <b-field label="Основан на"> <b-select v-model="values.parent_id" placeholder="Нет"> <option :value="null">Нет</option> <option v-for="(t, id) in variants.parent_id" :value="id">{{t}}</option> </b-select> </b-field> <mx-toggle v-model="values.is_hidden" title="Скрыть из списка"/> </div> </section> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-mails-templates-list",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},columns:null}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.mails.templates.list:refresh",this.refresh)},mounted:function(){this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.mails.templates.list:refresh",this.refresh)},methods:{newForm:function(){this.$form.open("vue-manager-mails-templates-form",{template_id:null})},onFilter:function(){this.clearPages(),this.fetchData(!0)},refresh:function(){this.fetchData(!1,!0)},clickRow:function(e){this.$form.open("vue-manager-mails-templates-form",{template_id:e.template_id})},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/mails/templates/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){var t=e.response.templates;s.cachePage(t.list),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))}},template:'<div> <vue-component-submenu menu="manager.mails" :page_id="page_id"></vue-component-submenu> <vue-component-filterbox ref="filterbox" @filter="onFilter" v-model="filter" :with-buttons="true"> <template slot="buttons"> <a @click="newForm" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый шаблон\'|gettext}} </span></a> </template> </vue-component-filterbox> <div class="container"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column field="template_title" label="Название" class="has-width-5" v-slot="props">{{ props.row.template_title }}</b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-add-chart-form",{data:function(){return{isFetching:!0,charts:[],defaultCharts:[],checkedRows:[],query:""}},created:function(){var t=this;this.$api.get("manager/metrics/dashboard/chartsearch",{query:""}).then(function(e){t.charts=t.defaultCharts=e.response.charts.search,t.isFetching=!1})},watch:{query:_.debounce(function(){var t=this;""!=this.query.trim()?(this.isFetching=!0,this.$api.get("manager/metrics/dashboard/chartsearch",{query:this.query}).then(function(e){t.charts=e.response.charts.search,t.isFetching=!1})):this.charts=this.defaultCharts},500)},methods:{save:function(){this.$parent.$parent.addChartCallback(this.checkedRows),this.$parent.close()}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Добавить чарт</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <div> <b-input type="search" v-model="query" icon="search"/> </div> </section> <section> <b-table :data="charts" :loading="isFetching" hoverable> <b-table-column :label="\'Название\'|gettext" v-slot="props"> <b-checkbox @click.native.stop :native-value="props.row.chart_id" v-model="checkedRows"> <span v-if="props.row.title">{{props.row.title}}</span><span v-else>{{\'Без названия\'|gettext}}</span> </b-checkbox> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </section> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" @click="save">{{\'Сохранить\'|gettext}}</button> </footer> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-chart-form-options",{data:function(){return{value_funcs:{last:"Последнее значение",sum:"Сумма за период"}}},props:["value","errors"],template:'<div class="panel panel-default has-p-2"> <b-field :label="\'Заголовок\'|gettext" :message="errors.title" :class="{\'has-error\': errors.title}"> <b-input v-model="value.title" maxlength="255" :has-counter="false" ref="title" class="has-rtl"></b-input> </b-field> <b-field :label="\'Значение\'|gettext"> <b-select v-model="value.value_func" expanded> <option v-for="(v, k) in value_funcs" :value="k">{{v}}</option> </b-select> </b-field> <vue-component-colorpicker v-model="value.color.text" :label="\'Цвет текста\'|gettext" class="field"></vue-component-colorpicker> <vue-component-colorpicker v-model="value.color.background" :label="\'Цвет фона\'|gettext" class="field"></vue-component-colorpicker> <vue-component-colorpicker v-model="value.color.chart" :label="\'Цвет графика\'|gettext" class="field"></vue-component-colorpicker> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-chart-form",{data:function(){return{currentTab:"chart",isFetching:!0,isChartFetching:!1,isUpdating:!1,isEmpty:!0,values:{users:[],options:{color:{text:"#000000",background:"#ffffff",chart:"#3b5bdb"},group:"day",period:"month",title:"",type:"bar"}},data:{chart:{function:"sum",field:null,field_type:null,unit:"",filters:[],value_func:"count"}},dataset_id:null,functions:{sum:"Сумма",count:"Количество"},ops:{"=":"Равно","<>":"Не равно",">":"Больше","<":"Меньше"},datasets:[],uuid:null,periods:{week:"Неделя",month:"Месяц",quarter:"Квартал",year:"Год",all:"Всё"},groups:{day:"По дням",week:"По неделям",month:"По месяцам"},types:{line:{title:"Линейная диаграмма",type:"line"},area:{title:"Диаграмма с областями",type:"line"},bar:{title:"Столбчатая диаграмма",type:"line"},pie:{title:"Круговая диаграмма",type:"group"},donut:{title:"Пончик",type:"group"},radialBar:{title:"Круговые столбики",type:"group"},number:{title:"Число",type:"line"}},seriesData:[],labels:[],lastWithDateGroup:null}},props:["chart_id","dashboard_id","id"],mixins:[FormModel],watch:{data:{handler:_.debounce(function(){this.refresh()},1500),deep:!0},values:{handler:function(){this.updateTitle()},deep:!0},isUpdating:function(e){this.$form.top.buttons.save.classname="is-primary"+(e?" is-loading":"")}},computed:{withDateGroup:function(){var e=-1!=["line","area","bar"].indexOf(this.values.options.type);return null!=this.lastWithDateGroup&&this.lastWithDateGroup!=e&&this.refresh(),this.lastWithDateGroup=e},noChoosen:function(){return"-- "+this.$gettext("Не выбрано")+" --"}},created:function(){var t=this;this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.updateData}},this.isChartFetching=!!this.chart_id,this.$api.get(this.chart_id||this.id?[this.dashboard_id?"manager/metrics/dashboard/chart_get":"manager/metrics/charts/get","manager/metrics/charts/info"]:"manager/metrics/charts/info",{dashboard_id:this.dashboard_id,id:this.id,chart_id:this.chart_id}).then(function(e){"success"==e.result&&(e=e.response,t.uuid=e.uuid,(t.chart_id||t.id)&&(t.values={users:e.users,options:e.options},t.data=e.data,t.dataset_id=e.dataset_id),t.chart_id=e.chart_id,t.updateTitle(),t.datasets=e.datasets),t.isFetching=!1}),this.$io.on("events:metrics:refresh",this.refreshed)},destroyed:function(){this.$io.off("events:metrics:refresh",this.refreshed)},methods:{updateTitle:function(){this.$form.top.title=this.$gettext("Чарт")+(this.values.options.title?": "+this.values.options.title:"")},addFilter:function(){this.data.chart.filters.push({filed:null,op:"=",value:""})},refreshed:function(e){var t=this;e.uuid==this.uuid&&(this.seriesData=[],this.labels=[],_.each(e.series,function(e){t.seriesData.push(_.map(e,function(e){return parseFloat(e.y)}))}),this.isEmpty=!this.seriesData.length||!this.seriesData[0].length,this.labels=_.map(e.series[0],function(e){return e.x}),this.isChartFetching=!1,this.recreate())},changePeriod:function(e){if(this.values.options.period=e,this.withDateGroup)switch(e){case"year":"day"==this.values.options.group&&(this.values.options.group="week");break;case"all":this.values.options.group="month"}this.refresh()},changeGroup:function(e){this.values.options.group=e,this.refresh()},refresh:function(){this.isChartFetching=!0,this.$api.post(this.dashboard_id?"manager/metrics/dashboard/chart_refresh":"manager/metrics/charts/refresh",{uuid:this.uuid,chart_id:this.chart_id,dataset_id:this.dataset_id,options:this.values.options,data:this.data})},setTab:function(e){this.currentTab=e},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post(this.dashboard_id?"manager/metrics/dashboard/chart_set":"manager/metrics/charts/set",{dashboard_id:this.dashboard_id,id:this.id,chart_id:this.chart_id,dataset_id:this.dataset_id,users:this.values.users,options:this.values.options,data:this.data}).then(function(e){"success"==e.result&&t.$form.close(),t.isUpdating=!1})},recreate:function(){var e=this;this.isChartFetching=!0,this.$nextTick(function(){e.isChartFetching=!1})},deleteFilterRow:function(e){var t=this;this.$confirm(this.$gettext("Удалить этот фильтр?"),"is-danger").then(function(){t.data.chart.filters.splice(e,1)})}},template:'<div class="has-mb-3"> <div class="top-panel" v-if="!dashboard_id"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a class="button" :class="{active: \'chart\' == currentTab}" @click="setTab(\'chart\')">{{\'График\'|gettext}}</a> <a class="button" :class="{active: \'options\' == currentTab}" @click="setTab(\'options\')">{{\'Настройки\'|gettext}}</a> </div> </div> </div> </div> <div class="container has-mt-3"> <section> <div class="panel panel-default has-mb-3 metrics-panel-chart" :class="{\'is-empty\': !isChartFetching && isEmpty && (values.options.type != \'number\')}" :style="{background: values.options.color.background}" style="height:300px"> <div class="metrics-edit-chart-header" :data-type="values.options.type"> <div> <div> <b-dropdown position="is-bottom-right" class="is-period-menu is-context-menu"> <a slot="trigger" :style="{color: values.options.color.text}">{{types[values.options.type].title}}<i class="fal fa-angle-down has-ml-1"></i></a> <b-dropdown-item v-for="(v, k) in types" aria-role="listitem" @click="values.options.type = k"><i class="fa fa-check has-mr-1" :class="{\'is-invisible\': k != values.options.type}"></i>{{v.title}}</b-dropdown-item> </b-dropdown> </div> <div> <b-dropdown position="is-bottom-left" class="is-period-menu is-context-menu"> <a slot="trigger" :style="{color: values.options.color.text}">{{periods[values.options.period]}}<i class="fal fa-angle-down has-ml-1"></i></a> <b-dropdown-item v-for="(v, k) in periods" aria-role="listitem" @click="changePeriod(k)"><i class="fa fa-check has-mr-1" :class="{\'is-invisible\': k != values.options.period}"></i>{{v}}</b-dropdown-item> </b-dropdown> <b-dropdown position="is-bottom-left" class="is-period-menu is-context-menu has-ml-3" v-if="withDateGroup"> <a slot="trigger" :style="{color: values.options.color.text}">{{groups[values.options.group]}}<i class="fal fa-angle-down has-ml-1"></i></a> <b-dropdown-item v-for="(v, k) in groups" aria-role="listitem" @click="changeGroup(k)" v-if="([\'week\', \'month\', \'quarter\'].indexOf(values.options.period) != -1) || (values.options.period == \'year\' && k != \'day\') || (values.options.period == \'all\' && k== \'month\')"><i class="fa fa-check has-mr-1" :class="{\'is-invisible\': k != values.options.group}"></i>{{v}}</b-dropdown-item> </b-dropdown> </div> </div> <vue-manager-metrics-value class="is-size-3" v-if="!isChartFetching && (withDateGroup || values.options.type == \'number\')" :chart="data.chart" :options="values.options" :series="seriesData"/> </div> <b-loading :is-full-page="false" :active.sync="isChartFetching"></b-loading> <vue-manager-metrics-chart v-if="!isChartFetching && (values.options.type != \'number\')" :series="seriesData" :labels="labels" :chart="data.chart" :options="values.options"/> </div> <section v-show="currentTab == \'chart\'"> <div class="panel panel-default has-mb-3" v-if="!dashboard_id"> <div class="row row-noborder metrics-charts-panels"> <div class="col-sm-3 has-p-2"> <b-field label="Датасет"> <b-select v-model="dataset_id" expanded @input="data.chart.filters = []" :placeholder="noChoosen"> <option :value="null">{{noChoosen}}</option> <option v-for="(v, k) in datasets" :value="k">{{v.title}}</option> </b-select> </b-field> </div> <div class="col-sm-3 has-p-2"> <b-field label="Поле"> <b-select v-model="data.chart.field" expanded v-if="dataset_id && datasets[dataset_id] != undefined" :placeholder="noChoosen"> <option :value="null">{{noChoosen}}</option> <option v-for="(v, k) in datasets[dataset_id].fields" :value="v.field">{{v.title?v.title:v.field}}</option> </b-select> </b-field> </div> <div class="col-sm-3 has-p-2"> <b-field label="Функция"> <b-select v-model="data.chart.function" expanded v-if="dataset_id && datasets[dataset_id] != undefined"> <option v-for="(v, k) in functions" :value="k">{{v}}</option> </b-select> </b-field> </div> <div class="col-sm-3 has-p-2"> <b-field label="Группировка"> <b-select v-model="data.chart.group" expanded v-if="dataset_id && datasets[dataset_id] != undefined" :placeholder="noChoosen" :disabled="values.options.type == \'number\'"> <option :value="null">{{noChoosen}}</option> <option v-for="(v, k) in datasets[dataset_id].fields" :value="v.field">{{v.title?v.title:v.field}}</option> </b-select> </b-field> </div> </div> </div> <div class="panel panel-default has-p-2" v-if="!dashboard_id && dataset_id && datasets[dataset_id] != undefined"> <label class="label">Фильтр</label> <div> <div class="has-mb-2 row row-small" v-for="(f, index) in data.chart.filters"> <div class="col-sm-3"> <b-select v-model="f.field" expanded :placeholder="noChoosen"> <option :value="null">{{noChoosen}}</option> <option v-for="(v, k) in datasets[dataset_id].fields" :value="v.field">{{v.title?v.title:v.field}}</option> </b-select> </div> <div class="col-sm-2"> <b-select v-model="f.op" expanded> <option v-for="(v, k) in ops" :value="k">{{v}}</option> </b-select> </div> <div class="col-sm"> <input input="text" class="input" v-model="f.value"> </div> <div class="col-sm col-shrink"> <button class="button has-text-danger" @click="deleteFilterRow(index)"><i class="fa fa-trash-alt"></i></button> </div> </div> </div> <button class="button is-light" @click="addFilter"><i class="fa fa-plus"></i>{{\'Добавить\'|gettext}}</button> </div> <vue-manager-metrics-chart-form-options v-model="values.options" :errors="errors" v-if="dashboard_id"/> </section> <section v-if="currentTab == \'options\'"> <div class="row"> <div class="col-sm-6"> <vue-manager-metrics-chart-form-options v-model="values.options" :errors="errors"/> <div class="panel panel-default has-p-2 has-mt-2"> <b-field label=\'Единицы измерения\'> <input input="text" class="input" v-model="data.chart.unit"> </b-field> </div> </div> <div class="col-sm-6"> <div class="panel panel-default has-p-2"> <b-field :label="\'Совместный доступ\'|gettext"> <vue-manager-metrics-share-user v-model="values.users"/> </b-field> </div> </div> </div> </section> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-chart",{data:function(){return{isCreating:!1}},props:["options","series","labels","chart"],created:function(){null==window.VueApexCharts&&$mx.lazy("//cdn.jsdelivr.net/combine/npm/apexcharts@3.25.0,npm/vue-apexcharts@1.6.0",function(){Vue.use(VueApexCharts),Vue.component("apexchart",VueApexCharts)})},watch:{options:{handler:function(){this.recreate()},deep:!0}},computed:{withDateGroup:function(){return-1!=["line","area","bar"].indexOf(this.options.type)},chartOptions:function(){var s=[this.options.color.chart];return{chart:{type:this.options.type,stacked:-1!=["bar","area"].indexOf(this.options.type),sparkline:{enabled:!0},animations:{enabled:!1}},dataLabels:{enabled:!1},fill:{opacity:"area"==this.options.type?.16:1,type:"solid"},stroke:{width:"bar"==this.options.type?0:2,lineCap:"round",curve:"smooth"},grid:{padding:this.withDateGroup?{top:80}:{top:40,right:25,bottom:25,left:25},strokeDashArray:4},xaxis:this.withDateGroup?{labels:{padding:0},tooltip:{enabled:!1},axisBorder:{show:!1},type:"datetime"}:null,yaxis:{labels:{padding:4}},labels:this.labels,colors:_.map(["#008FFB","#00E396","#FEB019","#FF4560","#775DD0"],function(e,t){return null==s[t]?e:s[t]}),legend:{show:!1},point:{show:!1}}},chartSeries:function(){switch(this.options.type){case"pie":case"donut":return this.series[0];case"radialBar":var t=_.sum(this.series[0]);return _.map(this.series[0],function(e){return Math.round(e/t*1e4,10)/100});default:return _.map(this.series,function(e){return{name:"",data:e}})}}},methods:{recreate:function(){var e=this;this.isCreating=!0,this.$nextTick(function(){e.isCreating=!1})}},template:'<apexchart v-if="series.length && !isCreating" height="100%" width="100%" :options="chartOptions" :series="chartSeries"></apexchart>'}),window.$app.defineComponent("manager","vue-manager-metrics-charts",{data:function(){return{isFetching:!1,charts:[],columns:["title"],filter:{query:""}}},props:["page_id"],mixins:[ListModel],computed:{columns_props:function(){if(!this.columns)return[];var s={title:{label:"Название",classname:"has-text-nowrap",sortable:!1}},e=_.map(this.columns,function(e){var t=s[e];return t.visible=!0,t.field=e,t});return e[0].classname+=" has-text-nowrap",e}},created:function(){this.$io.on("events:metrics.charts.list:refresh",this.refresh),this.fetchData()},destroyed:function(){this.$io.off("events:metrics.charts.list:refresh",this.refresh)},methods:{fetchData:function(e,t){function s(e){a.charts=e.fields}var a=this;!t&&this.checkCache(s)||(this.isFetching=e,this.$api.get("manager/metrics/charts/list",{filter:this.filter}).then(function(e){"success"==e.result&&(a.cachePage(e.response,s),a.isFetching=!1)}))},onFilter:function(){this.clearPages(),this.fetchData(!0)},clickRow:function(e){this.$form.open("vue-manager-metrics-chart-form",{chart_id:e.chart_id})}},template:'<div> <vue-component-submenu menu="manager.metrics" :page_id="page_id"></vue-component-submenu> <div class="has-mt-3 has-mb-3"> <vue-component-filterbox v-model="filter" :with-filters="true" :with-buttons="true" @filter="onFilter"> <template slot="buttons"> <a @click="clickRow({chart_id: null})" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый чарт\'|gettext}} </span></a> </template> </vue-component-filterbox> <div class="container"> <b-table paginated backend-pagination pagination-simple :data="charts" :loading="isFetching" :current-page="page" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column v-for="(column, index) in columns_props" :field="column.field" :label="column.label|gettext" :cell-class="[\'td-progress\', column.classname]" :numeric="column.numeric" :key="index" :visible="column.visible" :sortable="column.sortable" :width="column.width" v-slot="props"> <span v-if="column.field == \'title\'"> <span v-if="props.row.title">{{props.row.title}}</span><span v-else>{{\'Без названия\'|gettext}}</span> </span> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-dashboard-form",{data:function(){return{isFetching:!1,isUpdating:!1,currentTab:"common",values:{title:"",users:[]}}},props:["dashboard_id"],created:function(){this.dashboard_id&&this.fetchData()},methods:{fetchData:function(){var t=this;this.isFetching=!0,this.$api.get("manager/metrics/dashboard/get",{dashboard_id:this.dashboard_id}).then(function(e){"success"==e.result&&(e=e.response,t.values=e.values,t.isFetching=!1)})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/metrics/dashboard/set",this.values,this).then(function(e){t.isUpdating=!1,"success"==e.result&&(t.dashboard_id||t.$parent.$parent.changeDashboard(e.response.dashboard_id),t.$parent.close())})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Дашборд</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs has-text-left"> <li :class="{active: currentTab== \'common\'}"><a @click="currentTab = \'common\'">{{\'Общие\'|gettext}}</a></li> <li :class="{active: currentTab== \'share\'}"><a @click="currentTab = \'share\'">{{\'Совместный доступ\'|gettext}}</a></li> </ul> <section class="modal-card-body" v-if="currentTab == \'common\'"> <b-field :label="\'Название\'|gettext"> <input type="text" class="input" v-model="values.title" v-focus> </b-field> </section> <section class="modal-card-body" v-if="currentTab == \'share\'"> <vue-manager-metrics-share-user v-model="values.users"/> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-dashboard",{data:function(){return{isFetching:!0,layout:[],index:0,dashboard_id:null,interval:0,refreshInterval:9e4,refreshPass:0,windowFocused:!0,dashboards:{null:{title:"Без имени",is_primary:1}},isLocked:!1}},props:["page_id"],created:function(){var t=this;$mx.lazy("//cdn.jsdelivr.net/npm/vue-grid-layout@2.3.12/dist/vue-grid-layout.umd.min.js",function(){t.$api.get("manager/metrics/dashboard/list",{with_dashboard:!0}).then(function(e){"success"==e.result&&(null!=(e=e.response).dashboards&&(t.dashboards=e.dashboards,t.dashboard_id=e.dashboard_id),t.layout=e.layout,t.index=e.layout.length,t.isFetching=!1),t.refresh(),t.interval=setInterval(t.refresh,t.refreshInterval)})}),$mx(window).on("focus",this.windowFocus),$mx(window).on("blur",this.windowBlur),this.$io.on("events:metrics:refresh",this.refreshed),this.$io.on("events:metrics.charts:options",this.optionsChanged),this.$io.on("events:metrics.dashboards:refresh",this.dashboardsRefresh)},destroyed:function(){this.$io.off("events:metrics:refresh",this.refreshed),this.$io.off("events:metrics.charts:options",this.optionsChanged),this.$io.off("events:metrics.dashboards:refresh",this.dashboardsRefresh),$mx(window).off("focus",this.windowFocus),$mx(window).off("blur",this.windowBlur),this.interval&&clearInterval(this.interval)},computed:{allowEditLayout:function(){return!this.isLocked&&this.allowEdit},allowEdit:function(){return this.dashboard.is_primary&&this.$auth.isAllowEndpoint("manager/metrics/dashboard/get")},dashboard:function(){for(i=0;i<this.dashboards.length;i++)if(this.dashboards[i].dashboard_id==this.dashboard_id)return this.dashboards[i];return{title:""}}},methods:{dashboardsRefresh:function(){var t=this;this.$api.get("manager/metrics/dashboard/list").then(function(e){"success"==e.result&&(t.dashboards=e.response.dashboards)})},addChart:function(){this.$modal("vue-manager-metrics-add-chart-form",{},this)},addChartCallback:function(e){var s=this;this.$api.get("manager/metrics/dashboard/charts_add",{dashboard_id:this.dashboard_id,chart_ids:e}).then(function(e){var t;"success"==e.result&&(t=[],_.each(e.response.charts,function(e){s.layout.push({id:e.id,chart_id:e.chart_id,x:0,y:0,w:4,h:3,i:s.index++,series:null,options:e.options,chart:e.chart}),t.push(e.id)}),s.$api.get("manager/metrics/dashboard/refresh",{dashboard_id:s.dashboard_id,ids:t}))})},changeDashboard:function(e){var t=this;this.dashboard_id!=e&&(this.dashboard_id=e,this.isFetching=!0,this.$api.get("manager/metrics/dashboard/layout",{dashboard_id:this.dashboard_id}).then(function(e){"success"==e.result&&(e=e.response,t.layout=e.layout,t.index=e.layout.length,t.isFetching=!1),t.refresh()}))},optionsChanged:function(e){for(i=0;i<this.layout.length;i++)this.layout[i].id!=e.id&&this.layout[i].chart_id!=e.chart_id||(null!=e.options&&(this.layout[i].options=e.options),null!=e.chart&&(this.layout[i].chart=e.chart))},windowFocus:function(){this.windowFocused=!0,this.refreshPass&&this.refresh()},windowBlur:function(){this.windowFocused=!1},refresh:function(){if(!this.windowFocused||this.$form.isOpened)return this.refreshPass++;this.refreshPass=0,this.dashboard_id&&_.size(this.layout)&&this.$api.get("manager/metrics/dashboard/refresh",{dashboard_id:this.dashboard_id})},refreshed:function(e){if(!e.uuid)for(i=0;i<this.layout.length;i++)if(this.layout[i].id==e.id){this.layout[i].series=e.series;break}},changed:function(e){this.dashboard_id&&this.allowEditLayout&&this.$api.post("manager/metrics/dashboard/resort",{dashboard_id:this.dashboard_id,layout:_.map(e,function(e){return{x:e.x,y:e.y,w:e.w,h:e.h,id:e.id}})})},deleteChart:function(e){var t=this;this.$confirm(this.$gettext("Удалить выбранный чарт?"),"is-danger").then(function(){t.layout.splice(e,1)})},newDashboardForm:function(){this.$modal("vue-manager-metrics-dashboard-form",{},this)}},template:'<div> <vue-component-submenu menu="manager.metrics" :page_id="page_id"></vue-component-submenu> <div class="has-mt-2 has-mb-2"> <div class="container has-pt-1 has-pb-1"> <div class="row has-mb-2"> <div class="col-sm display: flex;align-items: center"> <b-dropdown position="is-bottom-right" append-to-body> <h3 slot="trigger" style="cursor: pointer">{{dashboard.title}}<i class="fal fa-angle-down has-ml-2"></i></h3> <b-dropdown-item aria-role="listitem" v-for="v in dashboards" @click="changeDashboard(v.dashboard_id)"><i class="fa fa-check has-mr-1" :class="{\'is-invisible\': v.dashboard_id != dashboard_id}"></i>{{v.title}}</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider" v-if="allowEdit"> <b-dropdown-item aria-role="listitem" @click="newDashboardForm" v-if="allowEdit"><i class="fa fa-plus has-mr-1"></i>Добавить дашборд</b-dropdown-item> </b-dropdown> </div> <div class="col-sm col-shrink" v-if="allowEdit"> <button class="button is-light" @click="$modal(\'vue-manager-metrics-dashboard-form\', {dashboard_id: dashboard_id})" v-if="allowEdit"><i class="fa fa-sliders-h has-mr-1"></i>{{\'Настройки\'|gettext}}</button> <button class="button is-black" @click="addChart"><i class="fa fa-plus has-mr-1"></i>Добавить чарт</button> </div> </div> </div> <hr class="is-marginless has-mb-1"> <div class="container is-paddingless" :class="{\'is-locked\': !allowEditLayout}"> <grid-layout :layout="layout" :col-num="24" :row-height="60" :is-draggable="allowEditLayout" :is-resizable="allowEditLayout" :vertical-compact="true" :margin="[14, 14]" :responsive="false" :use-css-transforms="true" @layout-updated="changed"> <grid-item v-for="(item, i) in layout" :x="item.x" :y="item.y" :w="item.w" :h="item.h" :i="item.i" :data-type="item.options.type" :data-width="item.w" drag-allow-from=".draggable-handle" :style="{ background: item.options.color.background, \'--metrics-chart-bg\': item.options.color.background, \'--metrics-chart-text\': item.options.color.text }"> <div class="draggable-handle"></div> <div class="dashboard-panel"> <vue-manager-metrics-layout-item :id="item.id" :chart_id="item.chart_id" :options="item.options" :series="item.series" :chart="item.chart" :dashboard_id="dashboard_id" :allow-edit="allowEditLayout" @delete="deleteChart(i)"/> <b-loading v-else :is-full-page="false" :active="true"/> </div> </grid-item> </grid-layout> </div> <b-loading :is-full-page="false" :active.sync="isFetching"/> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-datasets-form",{data:function(){return{isFetching:!1,isUpdating:!1,isOpenForm:!1,values:{dataset_id:null,source_id:null,title:"",options:{sql:"",table:""},fields:[],users:[]},field:{},field_default:{field:"",title:"",alias:"",type:"string"},selected_field:null,sources:[],currentTab:"common",type:"sql",types:{sql:"SQL запрос",table:"Таблица"},fieldTypes:{string:"Строка",number:"Целое число",decimal:"Дробное число",date:"Дата"}}},props:["dataset_id"],mixins:[FormModel],created:function(){this.$form.top.buttons={save:{title:this.$gettext("Сохранить"),classname:"is-primary",click:this.updateData}},this.fetchData()},watch:{isUpdating:function(e){this.$form.top.buttons.save.classname="is-primary"+(e?" is-loading":"")},values:{handler:function(){this.updateTitle()},deep:!0}},computed:{noChoosen:function(){return"-- "+this.$gettext("Не выбрано")+" --"}},methods:{updateTitle:function(){this.$form.top.title=this.$gettext("Датасет")+(this.values.title?": "+this.values.title:"")},setTab:function(e){this.currentTab=e},openFormField:function(e){this.selected_field=e,this.field=_.clone(e),this.isOpenForm=!0},newFormField:function(){this.field=_.clone(this.field_default),this.selected_field=null,this.isOpenForm=!0},saveFormField:function(){this.selected_field?(Object.assign(this.selected_field,this.field),this.selected_field=null):this.values.fields.push(this.field),this.isOpenForm=!1},deleteFormField:function(){var e=this;this.$confirm(this.$gettext("Удалить это поле?"),"is-danger").then(function(){Object.assign(e.selected_field,{deleted:!0}),e.selected_field=null,e.values.fields=_.filter(e.values.fields,function(e){return null==e.deleted}),e.isOpenForm=!1})},fetchData:function(){var t=this;this.isFetching=!0,this.$api.get(this.dataset_id?["manager/metrics/datasets/get","manager/metrics/datasets/info"]:"manager/metrics/datasets/info",{dataset_id:this.dataset_id}).then(function(e){"success"==e.result&&(t.dataset_id&&(t.values=e.response.dataset),t.variants=e.response.variants,t.type=null!=t.values.options.sql&&t.values.options.sql?"sql":"table"),t.isFetching=!1})},updateData:function(){var t=this;this.isUpdating=!0,"sql"==this.type&&(this.values.options.table=""),"table"==this.type&&(this.values.options.sql=""),this.$api.post("manager/metrics/datasets/set",this.values,this).then(function(e){"success"==e.result&&t.$form.close(),t.isUpdating=!1})}},template:'<div> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a class="button" :class="{active: \'common\' == currentTab}" @click="setTab(\'common\')">{{\'Настройки\'|gettext}}</a> <a class="button" :class="{active: \'options\' == currentTab}" @click="setTab(\'options\')">{{\'Права доступа\'|gettext}}</a> </div> </div> </div> </div> <div class="container has-mt-3 has-mb-3" v-if="currentTab == \'common\'"> <div class="panel panel-default has-p-2"> <div class="row row-small has-mb-2"> <div class="col-xs-12 col-sm-4"> <b-field :label="\'Название\'|gettext" :message="errors.title" :class="{\'has-error\': errors.title}"> <b-input v-model="values.title" maxlength="255" :has-counter="false" ref="title" class="has-rtl"></b-input> </b-field> </div> <div class="col-xs-12 col-sm-4"> <b-field label="Подключение" :message="errors.source_id" :class="{\'has-error\': errors.source_id}"> <b-select v-model="values.source_id" expanded :placeholder="noChoosen"> <option :value="null">{{noChoosen}}</option> <option v-for="(v, k) in variants.sources" :value="k">{{v}}</option> </b-select> </b-field> </div> <div class="col-xs-12 col-sm-4"> <b-field label="Тип"> <b-select v-model="type" expanded> <option v-for="(v, k) in types" :value="k">{{v}}</option> </b-select> </b-field> </div> </div> <b-field label="Таблица" v-if="type == \'table\'"> <input type="text" v-model="values.options.table" class="input is-fullwidth"> </b-field> <b-field label="SQL запрос" v-else> <textarea v-model="values.options.sql" class="input"></textarea> </b-field> <b-table :data="values.fields" v-if="_.size(values.fields)" class="has-mt-2 has-mb-2" @click="openFormField" hoverable bordered> <b-table-column field="title" label="Название" v-slot="props"> <div v-if="props.row.title">{{props.row.title}}</div> <div v-else class="has-text-grey">Без названия</div> </b-table-column> <b-table-column field="field" label="Поле" v-slot="props"> <div>{{props.row.field}}</div> </b-table-column> <b-table-column field="type" label="Формат" v-slot="props"> <div>{{fieldTypes[props.row.type]}}</div> </b-table-column> </b-table> <div> <button class="button is-dark" type="button" @click="newFormField">{{\'Добавить поле\'|gettext}}</button> </div> </div> </div> <div class="container has-mt-3" v-if="currentTab == \'options\'"> <div class="row"> <div class="col-sm-6"> <div class="panel panel-default has-p-2"> <vue-manager-metrics-share-user v-model="values.users"/> </div> </div> </div> </div> <b-modal :active.sync="isOpenForm" has-modal-card trap-focus :can-cancel="[]"> <template #default="props"> <div class="modal-card modal-card-little"> <header class="modal-card-head"><p class="modal-card-title">{{\'Поле\'|gettext}}</p><button type="button" class="modal-close is-large" @click="isOpenForm = false"></button></header> <section class="modal-card-body"> <b-field label="Название"> <input type="text" v-model="field.title" class="input is-fullwidth" placeholder="Без названия" v-focus> </b-field> <b-field label="Поле"> <input type="text" v-model="field.field" class="input is-fullwidth"> </b-field> <b-field label="Формат"> <b-select v-model="field.type" expanded> <option v-for="(v, k) in fieldTypes" :value="k">{{v}}</option> </b-select> </b-field> <b-field label="Alias"> <input type="text" v-model="field.alias" class="input is-fullwidth"> </b-field> </section> <div class="modal-card-foot level"> <div class="level-left"> <button class="button has-text-danger" type="button" @click="deleteFormField" v-if="selected_field"><i class="fa fa-trash-alt"></i></button> </div> <div class="level-right"> <button class="button is-dark" type="button" @click="isOpenForm = false">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" type="button" @click="saveFormField">{{\'Сохранить\'|gettext}}</button> </div> </div> </div> </template> </b-modal> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-datasets-list",{data:function(){return{isFetching:!0,datasets:[],columns:["title"],filter:{query:""}}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:metrics.datasets.list:refresh",this.refresh),this.fetchData()},destroyed:function(){this.$io.off("events:metrics.datasets.list:refresh",this.refresh)},computed:{columns_props:function(){if(!this.columns)return[];var s={title:{label:"Название",classname:"has-text-nowrap",sortable:!1}},e=_.map(this.columns,function(e){var t=s[e];return t.visible=!0,t.field=e,t});return e[0].classname+=" has-text-nowrap",e}},methods:{fetchData:function(e,t){function s(e){a.datasets=e.fields}var a=this;!t&&this.checkCache(s)||(this.isFetching=e,this.$api.get("manager/metrics/datasets/list",{filter:this.filter}).then(function(e){"success"==e.result&&(a.cachePage(e.response,s),a.isFetching=!1)}))},onFilter:function(){this.clearPages(),this.fetchData(!0)},clickRow:function(e){this.$form.open("vue-manager-metrics-datasets-form",{dataset_id:e.dataset_id})}},template:'<div> <vue-component-submenu menu="manager.metrics" :page_id="page_id"></vue-component-submenu> <div class="has-mt-3 has-mb-3"> <vue-component-filterbox v-model="filter" :with-filters="true" :with-buttons="true" @filter="onFilter"> <template slot="buttons"> <a @click="clickRow({dataset_id: null})" class="button is-primary is-fullwidth"><i class=\'fas fa-plus\'></i><span class=\'is-hidden-touch has-ml-1\'>{{\'Новый датасет\'|gettext}} </span></a> </template> </vue-component-filterbox> <div class="container"> <b-table paginated backend-pagination pagination-simple :data="datasets" :loading="isFetching" :current-page="page" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column v-for="(column, index) in columns_props" :field="column.field" :label="column.label|gettext" :cell-class="[\'td-progress\', column.classname]" :numeric="column.numeric" :key="index" :visible="column.visible" :sortable="column.sortable" :width="column.width" v-slot="props"> <span v-if="column.field == \'title\'"> <span v-if="props.row.title">{{props.row.title}}</span><span v-else>{{\'Без названия\'|gettext}}</span> </span> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-layout-item",{data:function(){return{layout:[],isLoading:!0,periods:{week:"Неделя",month:"Месяц",quarter:"Квартал",year:"Год",all:"Всё"},groups:{day:"По дням",week:"По неделям",month:"По месяцам"},labels:[],seriesData:[]}},props:{chart:Object,chart_id:Number,id:Number,dashboard_id:Number,options:Object,series:{type:Array,default:null},allowEdit:{type:Boolean,default:!0}},computed:{withDateGroup:function(){return-1!=["line","area","bar"].indexOf(this.options.type)}},watch:{series:function(e){var t=this;e&&(this.labels=[],this.seriesData=[],_.each(e,function(e){t.seriesData.push(_.map(e,function(e){return parseFloat(e.y)}))}),this.labels=_.map(e[0],function(e){return e.x}),this.isLoading=!1,this.recreate())}},methods:{editForm:function(e){this.allowEdit&&this.$form.open("vue-manager-metrics-chart-form",e?{chart_id:this.chart_id}:{id:this.id,dashboard_id:this.dashboard_id})},deleteChart:function(){this.$emit("delete")},recreate:function(e){var t=this;this.isLoading=!0,this.$nextTick(function(){null!=e&&e(),t.isLoading=!1})},changePeriod:function(e){if(this.options.period=e,this.withDateGroup)switch(e){case"year":"day"==this.options.group&&(this.options.group="week");break;case"all":this.options.group="month"}this.$api.get("manager/metrics/dashboard/chart_period",{id:this.id,dashboard_id:this.dashboard_id,period:this.options.period,group:this.options.group})},changeGroup:function(e){this.options.group=e,this.$api.get("manager/metrics/dashboard/chart_period",{dashboard_id:this.dashboard_id,id:this.id,period:this.options.period,group:this.options.group})},refresh:function(){this.$api.get("manager/metrics/dashboard/refresh",{id:this.id,dashboard_id:this.dashboard_id})}},template:'<div class="mx-chart-panel" @dblclick="editForm(false)"> <div class="metrics-chart-header"> <h3 class="is-size-6" style="margin-top: 10px"> <span>{{ options.title }}</span> <span> <label class="has-text-black has-ml-1" v-if="allowEdit"> <b-dropdown position="is-bottom-left" class="is-context-menu" append-to-body> <i class="fa fa-ellipsis-v" slot="trigger"></i> <b-dropdown-item aria-role="listitem" @click="refresh"><i class="fa fa-redo has-mr-1"></i>Обновить</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider"> <b-dropdown-item aria-role="listitem" v-for="(v, k) in periods" @click="changePeriod(k)"><i class="fa fa-check has-mr-1" :class="{\'is-invisible\': k != options.period}"></i>{{v}}</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider" v-if="withDateGroup"> <b-dropdown-item aria-role="listitem" v-for="(v, k) in groups" @click="changeGroup(k)" v-if="withDateGroup && (([\'week\', \'month\', \'quarter\'].indexOf(options.period) != -1) || (options.period == \'year\' && k != \'day\') || (options.period == \'all\' && k== \'month\'))"><i class="fa fa-check has-mr-1" :class="{\'is-invisible\': k != options.group}"></i>{{v}}</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider"> <b-dropdown-item aria-role="listitem" @click="editForm(false)"><i class="fa fa-tint has-mr-1"></i>Внешний вид</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider" v-if="allowEdit"> <b-dropdown-item aria-role="listitem" @click="editForm(true)" v-if="allowEdit"><i class="fa fa-cog has-mr-1"></i>Редактировать чарт</b-dropdown-item> <hr aria-role="menuitem" class="dropdown-divider"> <b-dropdown-item aria-role="listitem" class="has-text-danger" @click="deleteChart"><i class="fa fa-trash-alt has-mr-1"></i>Удалить</b-dropdown-item> </b-dropdown> </label> </span> </h3> <vue-manager-metrics-value class="is-size-3" v-if="!isLoading && (withDateGroup || options.type == \'number\')" :chart="chart" :options="options" :series="seriesData"/> </div> <vue-manager-metrics-chart v-if="!isLoading && (options.type != \'number\')" :series="seriesData" :labels="labels" :chart="chart" :options="options"/> <b-loading :is-full-page="false" :active.sync="isLoading"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-menu",{data:function(){return{menu:{common:this.$gettext("Общие"),settings:this.$gettext("Настройки")}}},template:'<div> <div class="top-panel"> <div class="container"> <div class="scrolling-container is-submenu"> <div style="overflow-x: scroll"> <a v-for="(t, k) in menu" class="button" :class="{active: k== currentTab}" @click="currentTab = k">{{t|gettext}}</a> </div> </div> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-share-user",{data:function(){return{isFetchingUsers:!1,autocompleteUsers:[],queryUser:""}},props:["value"],computed:{usersIds:function(){return _.map(this.value,"account_id")}},methods:{deleteUser:function(e){var t=this;this.$confirm(this.$gettext("Отозвать права для этого пользователя?"),"is-danger").then(function(){t.value.splice(e,1)})},asyncAutocompleteUsers:_.debounce(function(){var t=this;""!=this.queryUser.trim()?(this.isFetchingUsers=!0,this.$api.get("manager/metrics/dashboard/usersearch",{query:this.queryUser}).then(function(e){t.autocompleteUsers=_.filter(e.response.users.search,function(e){return-1==t.usersIds.indexOf(e.account_id)}),t.isFetchingUsers=!1})):this.autocompleteUsers=[]},500),onSelect:function(e){e&&this.value.push(e)}},template:'<div> <b-autocomplete v-model="queryUser" :data="autocompleteUsers" :placeholder="\'Добавить пользователя\'|gettext" field="title" :loading="isFetchingUsers" @input="asyncAutocompleteUsers" @select="onSelect" :clear-on-select="true"></b-autocomplete> <b-table :data="value" v-if="_.size(value)" class="has-mt-2" :show-header="false"> <b-table-column field="title" label="Пользователь" v-slot="props"> <div class="row row-noborder is-marginless"> <div class="col-xs"> <div>{{props.row.email}}</div> <div class="has-text-grey">{{props.row.fullname}}</div> </div> <div class="col-xs col-shrink" style="display:flex;align-self:center"> <button class="button has-text-danger" @click="deleteUser(props.index)"><i class="fa fa-trash-alt"></i></button> </div> </div> </b-table-column> </b-table> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-sources-list",{data:function(){return{}},props:["page_id"],template:'<div> <vue-component-submenu menu="manager.metrics" :page_id="page_id"></vue-component-submenu> </div>'}),window.$app.defineComponent("manager","vue-manager-metrics-value",{data:function(){return{chartValue:0}},props:["options","chart","series"],watch:{series:{handler:function(){this.refresh()},deep:!0},options:{handler:function(){this.refresh()},deep:!0},chart:{handler:function(){this.refresh()},deep:!0}},created:function(){this.refresh()},methods:{refresh:function(){var t,s,a,i=this,e=this.series,n=this.chartValue,l=0;switch(this.options.value_func){case"last":l=_.sum(_.map(e,function(e){return e[e.length-1]}));break;case"sum":l=_.sum(_.map(e,function(e){return _.sum(e)}))}n!=l&&(-1!=["decimal","number"].indexOf(this.chart.field_type)?(t=(l-n)/20,s=0,a=setInterval(function(){var e=n+t*s;i.chartValue="number"==i.chart.field_type?Math.ceil(e):e,10==++s&&(i.chartValue=l,clearInterval(a)),i.$forceUpdate()},10)):this.chartValue=l)}},template:'<span :style="{color: options.color.text}">{{chartValue|number}} {{chart.unit}}</span>'}),window.$app.defineComponent("manager","vue-manager-partners-agreements-form",{data:function(){return{isUpdating:!1,isFetching:!1,legalTypes:{entrepreneur:"ИП",company:"Компания"}}},created:function(){this.fetchData(!0)},props:["partner_id"],mixins:[FormModel],computed:{title:function(){return this.isFetching?"":this.legalTypes[this.values.details.legaltype]+" "+("company"==this.values.details.legaltype?'ООО "'+this.values.details.name+'"':this.values.details.f+" "+this.values.details.i+" "+this.values.details.o)}},methods:{agree:function(){var t=this;this.isUpdating=!0,this.$api.get("manager/partners/agreements/agree",{partner_id:this.partner_id}).then(function(e){"success"==e.result&&(t.values.agreement_status="signed"),t.isUpdating=!1})},fetchData:function(e){var t=this;this.isFetching=e,this.$api.get("manager/partners/agreements/get",{partner_id:this.partner_id}).then(function(e){t.isFetching=!1,t.values=e.response.values})},generate:function(){var t=this;this.isUpdating=!0,this.$api.get("manager/partners/agreements/generate",{partner_id:this.partner_id,number:this.values.agreement_number}).then(function(e){t.isUpdating=!1,t.values=e.response.values})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Договор</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="has-mb-2">{{title}}</div> <div class="has-mb-2" v-if="values.details">Почта: {{values.details.email}} <vue-component-clipboard :text="values.details.email"/></div> <div class="has-mb-2" v-if="values.details">ИНН: {{values.details.inn}} <vue-component-clipboard :text="values.details.inn"/></div> <div v-if="values.agreement_number"> <a :href="\'https://docs.google.com/gview?url=http://p1.taplink.ru/c/agreements/\'+values.agreement_number+\'.docx\'" target="_blank" class="button is-dark">Открыть документ</a> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="generate">Пересоздать документ</button> <button class="button is-success" :class="{\'is-loading\': isUpdating}" @click="agree" v-if="values.agreement_status != \'signed\'">Подтвердить договор</button> </div> <button v-else class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="generate">Сгенерировать документ</button> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-partners-agreements-list",{data:function(){return{agreements:[],page:1,perPage:200,total:0,isUpdating:!1,percents:[0,5,10,15,20,25,30,35],isFeaching:!1,statuses:{unsigned:"Не подписан",pending:"В ожидании",signed:"Подписан"},statuses_colors:{unsigned:"danger",pending:"warning",signed:"success"}}},props:["page_id"],mixins:[FormModel,ListModel],created:function(){this.$io.on("events:manager.partners.agreements:refresh",this.refresh),this.fetchData()},destroyed:function(){this.$io.off("events:manager.partners.agreements:refresh",this.refresh)},methods:{onPageChange:function(e){this.page=e,this.fetchData()},fetchData:function(e){var t=this;this.isFeaching=!0;function s(e){t.agreements=e.fields,t.isFeaching=!1}!e&&this.checkCache(s)||this.$api.post("manager/partners/agreements/list",{next:this.next,count:this.perPage,sort_field:this.sortField,sort_order:this.sortOrder}).then(function(e){t.cachePage(e.response.agreements,s)}).catch(function(e){t.isFeaching=!1})},clickRow:function(e){this.$modal("vue-manager-partners-agreements-form",{partner_id:e.partner_id},this)}},template:'<div> <vue-component-submenu menu="manager.partners" :page_id="page_id"></vue-component-submenu> <div class="container"> <b-table paginated backend-pagination pagination-simple :data="agreements" :loading="isFeaching" class="has-mb-2 has-mt-3" :per-page="perPage" :total="total" @click="clickRow" @page-change="onPageChange" hoverable> <b-table-column :label="\'Аккаунт\'|gettext" v-slot="props">{{ props.row.email }}</b-table-column> <b-table-column :label="\'Договор\'|gettext" v-slot="props"><div v-if="props.row.agreement_number">{{ props.row.agreement_number }} от {{ props.row.agreement_date|date }}</div></b-table-column> <b-table-column :label="\'Статус\'|gettext" numeric v-slot="props"><div :class="\'has-text-\'+statuses_colors[props.row.agreement_status]">{{statuses[props.row.agreement_status]}}</span></div></b-table-column> </b-table> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-partners-history",{data:function(){return{isFetching:!1,isUpdating:!1,history:[],percents:[0,5,10,15,20,25,30,35,40,45,50],percent:0,max_percent:5}},props:["profile_id","partner_id"],created:function(){var t=this;this.isFetching=!0,this.$api.get("manager/partners/get",{partner_id:this.partner_id}).then(function(e){"success"==e.result&&(t.history=e.response.history,t.max_percent=e.response.max_percent,t.percent=e.response.percent),t.isFetching=!1})},methods:{change:function(){var t=this;this.isUpdating=!0,this.$api.get("manager/partners/set",{partner_id:this.partner_id,percent:this.percent}).then(function(e){"success"==e.result&&(t.history=e.response.history,t.$parent.$parent.fetchData()),t.isUpdating=!1})}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Партнерская программа\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <div class="row row-small"> <div class="col-sm-3 has-mb-2-mobile"> <b-select v-model="percent" expanded> <option value="">-- {{\'Процент отчислений\'|gettext}} --</option> <option :value="p" v-for="p in percents" v-if="p <= max_percent">{{p}}%</option> </b-select> </div> <div class="col-sm-2"> <button class=\'button is-primary is-fullwidth\' :class="{\'is-loading\': isUpdating}" @click="change" expanded>{{\'Изменить\'|gettext}}</button> </div> </div> </section> <section v-if="history.length"> <b-table :data="history" :paginated="false"> <b-table-column :label="\'Дата\'|gettext" v-slot="props">{{ props.row.tms|datetime }}</b-table-column> <b-table-column :label="\'Процент\'|gettext" v-slot="props">{{ props.row.percent }}%</b-table-column> <b-table-column :label="\'Кто добавил\'|gettext" v-slot="props">{{ props.row.email }}</b-table-column> </b-table> </section> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-partners-list",{data:function(){return{partners:[],permissions:{},page:1,perPage:100,total:0,isUpdating:!1,percents:[0,5,10,15,20,25,30,35,40,45,50],form:{nickname:"",percent:null,period:""},max_percent:5,isFeaching:!1}},props:["page_id"],mixins:[FormModel,ListModel],created:function(){this.$io.on("events:manager.partners:refresh",this.refresh),this.permissions={profile:this.$auth.isAllowEndpoint("manager/profiles/get"),add:this.$auth.isAllowEndpoint("manager/partners/add")},this.fetchData()},destroyed:function(){this.$io.off("events:manager.partners:refresh",this.refresh)},methods:{onPageChange:function(e){this.page=e,this.fetchData()},fetchData:function(e){var t=this;this.isFeaching=!0;function s(e){t.partners=e.fields,t.max_percent=e.max_percent,t.isFeaching=!1}!e&&this.checkCache(s)||this.$api.post("manager/partners/list",{next:this.next,sort_field:this.sortField,sort_order:this.sortOrder}).then(function(e){t.cachePage(e.response.partners,s)}).catch(function(e){t.payments=[],t.total=0,t.isFeaching=!1})},openForm:function(e){this.$modal("vue-manager-profiles-form",{profile_id:e},this)},addPartner:function(){var s=this;this.isUpdating=!0,this.$api.post("manager/partners/add",this.form,this).then(function(e){"success"==e.result&&_.each(s.form,function(e,t){s.form[t]=""}),s.isUpdating=!1}).catch(function(){s.isUpdating=!1})}},template:'<div> <vue-component-submenu menu="manager.partners" :page_id="page_id"></vue-component-submenu> <div class="container"> <div class="has-mt-2 has-mb-2" v-if="permissions.add"> <div class="row row-small"> <div class="col-sm has-mb-2-mobile"> <b-input type="text" :placeholder="\'Email или имя профиля партнера\'|gettext" v-model="form.nickname" expanded></b-input> </div> <div class="col-sm-3 has-mb-2-mobile"> <b-select v-model="form.percent" expanded> <option :value="null">-- {{\'Процент отчислений\'|gettext}} --</option> <option :value="p" v-for="p in percents" v-if="p <= max_percent">{{p}}%</option> </b-select> </div> <div class="col-sm-2"> <button class=\'button is-primary is-fullwidth\' :class="{\'is-loading\': isUpdating}" @click="addPartner" expanded>{{\'Добавить\'|gettext}}</button> </div> </div> </div> <b-table paginated backend-pagination pagination-simple :data="partners" :loading="isFeaching" class="has-mb-4" :per-page="perPage" @sort="onSort" :total="total" @page-change="onPageChange"> <b-table-column field="nickname" :label="\'Аккаунт\'|gettext" v-slot="props"> {{ props.row.email }}<br> <a v-for="profile in props.row.profiles" class="is-block" @click="openForm(profile.profile_id)" v-if="permissions.profile">{{ profile.nickname }}</a> <div v-else>{{ profile.nickname }}</div> </b-table-column> <b-table-column field="manager" :label="\'Кто добавил\'|gettext" class="has-text-grey" v-slot="props">{{ props.row.manager }}</b-table-column> <b-table-column field="percent" :label="\'Процент\'|gettext" v-slot="props">{{ props.row.percent }} %</b-table-column> <b-table-column field="profiles" :label="\'Промокоды\'|gettext" v-slot="props"> <div class="tags" v-if="props.row.promos"><div v-for="promocode in props.row.promos" class="tag is-success">{{ promocode.code }}</div></div> <div v-else class="has-text-danger">{{\'Нет\'|gettext}}</div> </b-table-column> <b-table-column field="profiles" :label="\'Статистика\'|gettext" numeric v-slot="props"> <div v-if="props.row.invited_amount">{{\'Регистрации\'|gettext}}: {{ props.row.invited_amount }}</div> <div v-if="props.row.invited_amount_installed">{{\'Установки\'|gettext}}: {{ props.row.invited_amount_installed }}</div> <div v-if="props.row.invited_orders">{{\'Оплаты\'|gettext}}: {{ props.row.invited_orders }}</div> <div v-if="props.row.invited_budget">{{\'Сумма\'|gettext}}: {{ props.row.invited_budget|currency(\'RUB\') }}</div> </b-table-column> </b-table> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-partners-payouts-form",{data:function(){return{isUpdating:!1,isFetching:!1,values:{payouts:[]}}},created:function(){this.withdrawal_id&&this.fetchData(!0)},props:["withdrawal_id"],mixins:[FormModel],methods:{fetchData:function(e){var t=this;this.isFetching=e,this.$api.get("manager/partners/payouts/get",{withdrawal_id:this.withdrawal_id}).then(function(e){t.isFetching=!1,t.values=e.response.payouts.values})},send:function(e){var t=this;this.isUpdating=!0,this.$api.get("manager/partners/payouts/send",{withdrawal_id:this.withdrawal_id,send:e},this).then(function(e){t.isUpdating=!1,"success"==e.result&&t.$parent.close()})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Вывод</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <label class="label">Сумма:</label> <div class="field has-addons"> <div class="control is-expanded has-feedback"> <number type="text" class="input" disabled="on" :value="values.total" :precision="$account.currency.precision"></number> <a class="form-control-feedback has-text-grey-light"><vue-component-clipboard :text="values.total"></vue-component-clipboard></a> </div> <p class="control"><span class="button is-static">{{values.currency_title}}</span></p> </div> <div class="hr has-mb-3" v-if="!values.is_completed && values.payouts.length> 1"></div> <div class="field has-addons" v-for="f in values.payouts" v-if="!values.is_completed && values.payouts.length> 1"> <div class="control is-expanded"> <number type="text" class="input" disabled="on" :value="f.budget" :precision="$account.currency.precision"></number> </div> <p class="control"><span class="button is-static">{{values.currency_title}}</span></p> </div> <div class="field"> <label class="label">{{values.method}}</label> <div class="has-feedback"> <input type="text" class="input" disabled="on" :value="values.purpose"> <a class="form-control-feedback has-text-grey-light"><vue-component-clipboard :text="values.purpose"></vue-component-clipboard></a> </div> </div> <div class="field" v-if="values.details"> <label class="label">ИНН</label> <div class="has-feedback"> <input type="text" class="input" disabled="on" :value="values.details.inn"> <a class="form-control-feedback has-text-grey-light"><vue-component-clipboard :text="values.details.inn"></vue-component-clipboard></a> </div> </div> <div class="field" v-if="values.fio"> <label class="label">ФИО</label> <div class="has-feedback"> <input type="text" class="input" disabled="on" :value="values.fio"> <a class="form-control-feedback has-text-grey-light"><vue-component-clipboard :text="values.fio"></vue-component-clipboard></a> </div> </div> <button class="button is-primary" @click="send(1)" :class="{\'is-loading\': isUpdating}" :disabled="values.is_completed == 1 || !$auth.isAllowEndpoint(\'manager/partners/payouts/send\')">Отправить</button> <button class="button is-dark" @click="send(0)" :class="{\'is-loading\': isUpdating}" :disabled="values.is_completed == 1 || !$auth.isAllowEndpoint(\'manager/partners/payouts/send\')">Отметить как оплачено</button> <a :href="\'https://docs.google.com/gview?url=http://p1.taplink.ru/c/agreements/\'+values.agreement_number+\'.docx\'" target="_blank" class="button is-dark">Открыть документ</a> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-partners-payouts-list",{data:function(){return{list:[],permissions:{},total:0,perPage:100,isFetching:!1}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.partners.payouts:refresh",this.refresh),this.fetchData()},destroyed:function(){this.$io.off("events:manager.partners.payouts:refresh",this.refresh)},methods:{refresh:function(){this.next=null,this.fetchData(!0)},onPageChange:function(e){this.page=e,this.fetchData(!0,!1)},fetchData:function(e){var t=this;this.isFeaching=!0;function s(e){t.list=e.fields}!e&&this.checkCache(s)||this.$api.get("manager/partners/payouts/list",{next:this.next}).then(function(e){t.cachePage(e.response.payouts,s),t.isFeaching=!1}).catch(function(e){throw t.list=[],t.total=0,t.isFeaching=!1,e})},clickRow:function(e){this.$modal("vue-manager-partners-payouts-form",{withdrawal_id:e.withdrawal_id},this)}},template:'<div> <vue-component-submenu menu="manager.partners" :page_id="page_id"></vue-component-submenu> <div class="container"> <div class="has-mb-2 has-mt-3"> <b-table paginated backend-pagination pagination-simple :data="list" :loading="isFetching" class="has-mb-4" :per-page="perPage" :total="total" @page-change="onPageChange" @click="clickRow" hoverable> <b-table-column field="email" label="Аккаунт" v-slot="props">{{props.row.email}}</b-table-column> <b-table-column field="is_complete" label="Статус" v-slot="props"><div class="tag" v-if="props.row.is_complete" style="color: #ffffff;background: #5cb85c;">Выполнена</div><div class="tag" v-else style="color: #ffffff;background: #337ab7;">Новая</div></b-table-column> <b-table-column label="Метод" v-slot="props">{{props.row.method}}</b-table-column> <b-table-column field="tms_created" :label="\'Дата\'|gettext" numeric v-slot="props">{{ props.row.tms_created|date }}</b-table-column> <b-table-column field="budget" label="Бюджет" numeric v-slot="props">{{props.row.budget|currency(props.row.currency_title)}}</b-table-column> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-partners-requests-form",{data:function(){return{isUpdating:!1,isFetching:!1,percents:[0,5,10,15,20,25,30,35,40,45,50],values:{},variants:{}}},created:function(){this.request_id&&this.fetchData(!0)},props:["request_id"],mixins:[FormModel],methods:{fetchData:function(e){var s=this;this.isFetching=e,this.$api.get("manager/partners/requests/get",{request_id:this.request_id}).then(function(e){var t;s.isFetching=!1,console.log(e),"success"==e.result&&(t=e.response.requests,s.values=t.values,s.variants=t.variants)})},close:function(){this.updateData({action:"close"})},open:function(){this.updateData({action:"open"})},updateData:function(e){var t=this;this.isUpdating=!0,this.$api.post("manager/partners/requests/set",{values:Object.assign({},this.values,e,{request_id:this.request_id})},this).then(function(e){t.isUpdating=!1,"success"==e.result&&t.$parent.close()})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Запрос\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <b-field :label="\'Имя\'|gettext"> {{values.name}} </b-field> <b-field label="Email"> {{values.email}} </b-field> <b-field :label="\'Сообщение\'|gettext"> {{values.message}} </b-field> <button class="button is-primary" type="button" @click="close" :class="{\'is-loading\': isUpdating}" :disabled="values.is_closed == 1">{{\'Закрыть запрос\'|gettext}}</button> </section> <section v-if="values.account_id"> <label class="label">{{\'Открыть партнерскую программу\'|gettext}}</label> <b-select v-model="values.percent" expanded1 class="has-mb-2" :disabled="values.partner_id"> <option :value="null">-- {{\'Процент отчислений\'|gettext}} --</option> <option :value="p" v-for="p in percents" v-if="p <= variants.max_percent">{{p}}%</option> </b-select> <button class="button is-primary" type="button" @click="open" :class="{\'is-loading\': isUpdating}" :disabled="values.partner_id">{{\'Добавить\'|gettext}}</button> </section> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-partners-requests-list",{data:function(){return{isFetching:!1,fields:[]}},props:["page_id"],mixins:[ListModel],created:function(){this.fetchData(),this.$io.on("events:manager.partners.requests:refresh",this.refresh)},destroyed:function(){this.$io.off("events:manager.partners.requests:refresh",this.refresh)},methods:{fetchData:function(e){var t=this;console.log("~~~"),this.isFetching=!0;function s(e){t.fields=e.fields}!e&&this.checkCache(s)||this.$api.get("manager/partners/requests/list",{next:this.next}).then(function(e){t.cachePage(e.response.requests,s),t.isFetching=!1}).catch(function(e){throw t.list=[],t.total=0,t.isFetching=!1,e})},clickRow:function(e){this.$modal("vue-manager-partners-requests-form",{request_id:e.request_id},this)}},template:'<div> <vue-component-submenu menu="manager.partners" :page_id="page_id"></vue-component-submenu> <div class="container"> <div class="has-mb-2 has-mt-3"> <b-table paginated backend-pagination pagination-simple bordered :row-class="(row, index) => row.is_closed?\'\':\'is-warning\'" :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable @click="clickRow"> <b-table-column :label="\'Имя\'|gettext" v-slot="props"> <span class="tag is-default" v-html="props.row.language_code" style="width: 24px;margin: 0 .5rem"></span> {{props.row.name}} </b-table-column> <b-table-column label="Email" v-slot="props"> <span v-if="props.row.partner_id" class="is-pulled-right">ID: {{props.row.partner_id}}<span class="has-text-grey has-ml-1">{{props.row.percent}}%</span></span> {{props.row.email}} </b-table-column> <b-table-column field="tms_created" :label="\'Дата\'|gettext" numeric v-slot="props">{{ props.row.tms_created|date }}</b-table-column> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-payments-form",{data:function(){return{isUpdating:!1,isFetching:!1,values:{},currentTab:"common",refund:{marketing:!1,time:!1,times:[],downgrade:!1,custom:!1},custom:0,isRefunding:!1,do_refund:!1,description:""}},created:function(){this.order_id&&this.fetchData(!0)},props:["order_id"],mixins:[FormModel],computed:{progress:function(){return 100-(this.values.period_days-this.values.period_days_left)/this.values.period_days*100},timeRefund:function(){function e(e){return Math.ceil(100*e)/100}var t,s,a=[],i=this.values.period_days-this.values.period_days_left,n=.7,l={3:.5,6:.7,12:1},o=this.values.price*l[this.values.period];return this.refund.time&&(180<i?(timeUsedPrice=e(o*n),a.push({amount:timeUsedPrice,title:"6 месяцев"}),t=e(o*n*(i-=180)/180),a.push({amount:t,title:"дней: "+i})):90<i?(timeUsedPrice=e(o*l[3]),a.push({amount:timeUsedPrice,title:"3 месяца"}),s=e(o*l[3]*(i-=90)/90),a.push({amount:s,title:"дней: "+i})):a.push({amount:e(this.values.price*(i/this.values.period_days)),title:"дней: "+i})),a},marketingPrice:function(){return.3*this.values.price},downgradePrice:function(){return this.values.prices.pro*{3:1,6:.7,12:.5}[this.values.period]*this.values.period},total_refund:function(){var t=this;if(this.refund.custom)return this.custom;var s=this.values.price;return this.refund.time&&_.each(this.refund.times,function(e){s-=t.timeRefund[e].amount}),this.refund.marketing&&(s-=this.marketingPrice),this.refund.downgrade&&(s-=this.downgradePrice),s},isAllowRefund:function(){return this.$auth.isAllowEndpoint("manager/payments/refund")},isAllowPaid:function(){return this.$auth.isAllowEndpoint("manager/payments/paid")}},methods:{fetchData:function(e){var t=this;this.isFetching=e,this.$api.get("manager/payments/get",{order_id:this.order_id}).then(function(e){t.isFetching=!1,t.values=e.response.payments.values,t.do_refund=-1!=[2,7].indexOf(t.values.refund_payment_provider_id)})},setTab:function(e){this.currentTab=e},doRefund:function(){var t=this;this.$confirm(this.values.receipt?this.$gettext('Для того, чтобы отменить операцию вам необходимо сделать возврат денежных средств клиенту. После нажатия кнопки "Ок" данные о возврате уйдут в ФНС. Вы уже сделали возврат?'):this.$gettext("Аннулировать оплату?"),"is-warning").then(function(){t.isRefunding=!0,t.$api.post("manager/payments/refund",{order_id:t.order_id,transaction_id:t.values.transaction_id,receipt:t.values.receipt,budget:t.total_refund,downgrade:t.refund.downgrade,do_refund:t.do_refund},t).then(function(e){"success"==e.result&&(t.$parent.$parent.fetchData(),t.currentTab="common",t.fetchData(!0)),t.isRefunding=!1})})},doPaid:function(){var t=this;this.$confirm("Клиент оплатил?","is-warning").then(function(){t.$api.post("manager/payments/paid",{order_id:t.order_id},t).then(function(e){"success"==e.result&&(t.currentTab="common",t.fetchData(!0))})})},updateData:function(){}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Оплата\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs has-text-left"> <li :class="{active: currentTab== \'common\'}"><a @click="setTab(\'common\')">{{\'Общие\'|gettext}}</a></li> <li :class="{active: currentTab== \'transactions\'}"><a @click="setTab(\'transactions\')">{{\'Транзакции\'|gettext}}</a></li> <li :class="{active: currentTab== \'refund\'}" v-if="values.period_days_left && isAllowRefund"><a @click="setTab(\'refund\')">{{\'Возврат\'|gettext}}</a></li> </ul> <section class="modal-card-body" v-if="currentTab == \'common\'"> <div class="has-mb-4"> <label class="label is-pulled-left">{{\'Тариф\'|gettext}}: {{values.tariff}}</label> <div class="is-pulled-right has-text-grey" v-if="values.period_days_left">{{\'Осталось {1} из {2}\'|gettext|format(values.period_days_left, values.period_days)}}</div> <progress v-if="(values.order_status_id == 2) && values.period_days_left" class="progress is-success is-small" :value="progress" max="100"></progress> <progress v-else class="progress is-success is-small" value="0" max="100"></progress> </div> <div class="row"> <div class="col-xs-12 col-sm-8"> <div class="field"> <div class="row"> <div class="col-xs-3 has-text-weight-bold">{{\'Цена\'|gettext}}:</div> <div class="col-xs-9"> {{values.price|currency(values.currency_title)}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-3 has-text-weight-bold">{{\'Статус\'|gettext}}:</div> <div class="col-xs-9"> {{values.order_status|gettext}} <a href="#" v-if="values.order_status != 2 && isAllowPaid" @click="doPaid">{{\'Провести оплату\'|gettext}}</a> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-3 has-text-weight-bold">ID:</div> <div class="col-xs-9"> {{values.order_id}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-3 has-text-weight-bold">{{\'Метод оплаты\'|gettext}}:</div> <div class="col-xs-9"> {{values.payment_method_title}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-3 has-text-weight-bold">{{\'От\'|gettext}}:</div> <div class="col-xs-9"> {{values.tms_modify|datetime}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-3 has-text-weight-bold">{{\'До\'|gettext}}:</div> <div class="col-xs-9"> <span v-if="values.tariff_tms_until">{{values.tariff_tms_until|datetime}}</span> <span v-else class="has-text-grey">—</span> </div> </div> </div> </div> </div> </section> <section class="modal-card-body" v-if="currentTab == \'transactions\'"> <b-table :data="values.transactions" :paginated="false"> <b-table-column label="TRANS ID" sortable v-slot="props"><span class="has-text-grey-light">№</span> {{ props.row.transaction_id }}</b-table-column> <b-table-column :label="\'Тип\'|gettext" width="10%" sortable v-slot="props" cell-class="has-text-nowrap"><span :class="{\'has-text-success\': props.row.type == \'sell\', \'has-text-danger\': props.row.type == \'refund\'}"><span v-if="props.row.type == \'sell\'">{{\'Оплата\'|gettext}}</span><span v-else>{{\'Возврат\'|gettext}}</span></span></b-table-column> <b-table-column :label="\'Чек\'|gettext" sortable v-slot="props"><span v-if="props.row.onlinekassa_error" class="has-text-danger"><i class="fa fa-exclamation-triangle" v-tippy :content="props.row.onlinekassa_error"></i> Ошибка</span><span v-else><span v-if="props.row.fiscal_attribute">ФП: {{ props.row.fiscal_attribute }}</span><span v-else class="has-text-grey-light">—</span></span></b-table-column> <b-table-column :label="\'Дата\'|gettext" sortable v-slot="props">{{ props.row.tms|datetime }}</b-table-column> <b-table-column :label="\'Бюджет\'|gettext" numeric sortable v-slot="props">{{ props.row.budget|number }}<span class="has-text-grey-light"> {{props.row.currency_title}}</span></b-table-column> </b-table> </section> <section class="modal-card-body" v-if="currentTab == \'refund\'"> <div class="has-mb-2"> <div class="has-mb-1">Цена: {{values.price|currency(values.currency_title)}}</div> <div><b-checkbox v-model="refund.downgrade" :disabled="isRefunding" v-if="values.tariff == \'business\'">Понизить до PRO ( - {{downgradePrice|currency(values.currency_title)}} )</b-checkbox></div> <div><b-checkbox v-model="refund.time" :disabled="isRefunding || refund.downgrade">Вычесть использованное время (дни: {{values.period_days - values.period_days_left}})</b-checkbox></div> <div v-if="timeRefund.length" class="has-ml-3"> <div v-for="(p, i) in timeRefund"><b-checkbox v-model="refund.times" :native-value="i" :disabled="isRefunding || refund.downgrade">{{p.title}} ( - {{p.amount|currency(values.currency_title)}} )</b-checkbox></div> </div> <div><b-checkbox v-model="refund.marketing" :disabled="isRefunding || refund.downgrade">Вычесть 30% ( - {{marketingPrice|currency(values.currency_title)}} )</b-checkbox></div> <div class="has-mb-1"><b-checkbox v-model="refund.custom" :disabled="isRefunding">Указать сумму вручную</b-checkbox> <div v-if="refund.custom"><input type="number" v-model="custom" class="input"></div> </div> <div class="has-mb-1">Итого: {{total_refund|currency(values.currency_title)}}</div> <div v-if="total_refund"> <button class="button is-danger has-mr-2" @click="doRefund" :disabled="isRefunding">Оформить возврат</button> <b-checkbox v-model="do_refund" :disabled="isRefunding || ([2, 7, 23].indexOf(values.refund_payment_provider_id) == -1)">Провести возврат через платежную систему</b-checkbox> </div> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-payments-list",{data:function(){return{payments:[],statisticsGroup:null,statistics:null,isFetching:!1,filter:{query:"",date_from:null,date_until:null,tags:[]},filterTags:["currency","provider","method","country"],statisticsGroups:{payment_provider:this.$gettext("Платежная система"),payment_method:this.$gettext("Метод оплаты"),currency_code:this.$gettext("Валюта"),country:this.$gettext("Страна")},perPage:100,balance:0,total:0,sortField:"tms_modify",sortOrder:"desc",weekdays:this.$getDaysNames(),months:this.$getMonthsNames(),first_day_week:this.$getFirstDayWeek()}},mixins:[ListModel],watch:{statisticsGroup:function(){this.fetchStatistics()}},created:function(){this.fetchData(),this.fetchStatistics()},computed:{totalPayments:function(){return _.sumBy(this.balance,function(e){return e.amount})}},methods:{onFilter:function(){this.fetchStatistics(),this.clearPages(),this.fetchData()},openProfileForm:function(e){this.$modal("vue-manager-profiles-form",{profile_id:e},this)},onPageChange:function(e){this.page=e,this.fetchData(!0,!1)},openForm:function(e){this.$modal("vue-manager-payments-form",{order_id:e},this)},fetchStatistics:function(){var t=this;this.statistics=null;var e={filter:this.filter};this.$api.post("manager/payments/statistics",this.statisticsGroup?Object.assign(e,{group:this.statisticsGroup}):e).then(function(e){t.statistics=e.response.statistics,e.response.balance.length&&(t.balance=e.response.balance)})},fetchData:function(e,t,s){var a=!(0<arguments.length&&void 0!==e)||e,i=this,n=2<arguments.length&&void 0!==s&&s;this.isFetching=a;function l(e){i.payments=_.map(e.fields,function(e){return e.link="//instagram.com/"+e.username,e.instagram_link="//instagram.com/"+e.username,e}),i.isFetching=!1}!n&&this.checkCache(l)||this.$api.post("manager/payments/list",{next:this.next,sort_field:this.sortField,sort_order:this.sortOrder,filter:this.filter}).then(function(e){var t=e.response.payments;i.cachePage(t,l)}).catch(function(e){throw i.payments=[],i.total=0,i.isFetching=!1,e})},tagsFetch:function(e,t,s){this.$api.get("manager/payments/filters",{query:t,name:e}).then(function(e){s("success"==e.result?e.response.variants:[])})}},template:'<div> <div class="container has-mb-2 has-mt-2"> <div class="has-mb-2" v-if="statistics"> <div v-if="statisticsGroup"> <div style="display: flex;flex-direction: row"> <div class="has-background-grey-light profiles-conversion-bar" style="flex-grow: 1"></div> <b-dropdown v-model="statisticsGroup" class="statistics-group-button" aria-role="list" position="is-bottom-left"> <div data-stage="0" style="width: 1.5rem;height: 1rem;position: absolute;top: 0;" slot="trigger" aria-role="listitem"></div> <b-dropdown-item value="">{{\'Без групировки\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider"> <b-dropdown-item v-for="(t, k) in statisticsGroups" :value="k">{{t}}</b-dropdown-item> </b-dropdown> </div> </div> <div v-for="(s, k) in statistics" class="has-mb-2"> <div v-if="statisticsGroup"><span v-if="k">{{k}}</span><span class="has-text-grey" v-else>{{\'Пустой список\'|gettext}}</span></div> <div style="display: flex;flex-direction: row"> <div class="has-background-grey-light profiles-conversion-bar" style="flex-grow: 1"> <div data-stage="2" :style="{width: s.bars.nopaid}" v-tippy :content="\'Не оплатили: {1} из {2}\'|gettext|format($number(s.values.nopaid), $number(s.values.total))"><span>{{s.bars.nopaid}}</span></div> <div data-stage="5" :style="{width: s.bars.paid}" v-tippy :content="\'Оплатили: {1} из {2}\'|gettext|format($number(s.values.paid), $number(s.values.total))"><span>{{s.bars.paid}}</span></div> </div> <b-dropdown v-model="statisticsGroup" class="statistics-group-button" aria-role="list" position="is-bottom-left" v-if="!statisticsGroup"> <div data-stage="0" style="width: 1.5rem;height: 1rem;position: absolute;top: 0;" slot="trigger" aria-role="listitem"></div> <b-dropdown-item value="">{{\'Без групировки\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider"> <b-dropdown-item v-for="(t, k) in statisticsGroups" :value="k">{{t}}</b-dropdown-item> </b-dropdown> </div> </div> </div> <div class="has-mt-2 has-mb-2 has-background-grey-light profiles-conversion-bar" v-else></div> <mx-item class="mx-item-header"> <div class="item-row row"> <div class="col-xs-12"> <span class="has-mr-2">{{\'Всего оплат\'|gettext}}: {{ totalPayments|number }}</span> {{\'Итого\'|gettext}}: <span v-for="(b, i) in balance" class="has-mr-1">{{b.balance | number}}<span style="opacity: .6"> {{b.currency_title}}</span><span v-if="i < balance.length-1">,</span> </span> </div> </div> </mx-item> </div> <vue-component-filterbox @filter="onFilter" v-model="filter" :with-filters="true" :allow-tags="filterTags" :tags-fetch="tagsFetch" :disabled="isFetching"> <template slot="filters"> <div class="row row-small"> <div class="col-xs-6 col-sm-3 has-mb-2"> <div class="has-feedback"> <b-datepicker :placeholder="\'От\'|gettext" v-model="filter.date_from" icon="calendar-alt" :day-names="weekdays" :month-names="months" :first-day-of-week="first_day_week"></b-datepicker> <a class="form-control-feedback has-text-grey-light" @click="filter.date_from = null"><i class="fal fa-times"></i></a> </div> </div> <div class="col-xs-6 col-sm-3 has-mb-2"> <div class="has-feedback"> <b-datepicker :placeholder="\'До\'|gettext" v-model="filter.date_until" icon="calendar-alt" :day-names="weekdays" :month-names="months" :first-day-of-week="first_day_week"></b-datepicker> <a class="form-control-feedback has-text-grey-light" @click="filter.date_until = null"><i class="fal fa-times"></i></a> </div> </div> </div> </template> </vue-component-filterbox> <div class="container"> <b-table paginated backend-pagination backend-sorting pagination-simple bordered :data="payments" :loading="isFetching" class="has-mb-4" :per-page="perPage" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" @sort="onSort"> <b-table-column field="order_id" :label="\'Счет\'|gettext" sortable v-slot="props"><div><span class="has-text-grey-light">№</span> <a href=\'#\' @click="openForm(props.row.order_id)">{{ props.row.order_id }}</a></div></b-table-column> <b-table-column field="order_status_id" :label="\'Оплата\'|gettext" width="10%" sortable v-slot="props"><span :class="{\'has-text-success\': props.row.order_status_id == 2, \'has-text-danger\': props.row.order_status_id != 2}"> <div> <span v-if="props.row.order_status_id == 2">{{\'Оплачен\'|gettext}}</span><span v-else>{{\'Не оплачен\'|gettext}}</span> <span v-if="props.row.fiscal_attribute"> <span v-if="props.row.onlinekassa_error" class="has-text-danger" v-tippy :content="props.row.onlinekassa_error"><i class="fal fa-receipt"></i></span> <span v-else class="has-text-success" v-tippy :content="props.row.fiscal_attribute"><i class="fal fa-receipt"></i></span> </span> </div> </b-table-column> <b-table-column field="payment_provider" :label="\'Система\'|gettext" sortable v-slot="props"><span v-if="props.row.payment_provider">{{ props.row.payment_provider }}</span><span v-else class="has-text-grey-light">—</span></b-table-column> <b-table-column :label="\'Вес\'|gettext" class="has-width-5" numeric v-slot="props"> <span :class="{\'has-text-grey-light\': props.row.weight == 0}">{{ props.row.weight|number }}</span> </b-table-column> <b-table-column field="username" :label="\'Профиль\'|gettext" sortable v-slot="props"><a @click="openProfileForm(props.row.profile_id)">{{ props.row.username }}</a></b-table-column> <b-table-column field="followers":label="\'Подписчиков\'|gettext" numeric sortable v-slot="props"> <div class="tags is-pulled-left is-hidden-mobile"> <a :href=\'props.row.instagram_link\' target="_blank" v-if="props.row.has_username"><span class="tag is-dark">Instagram</span></a> </div> {{ props.row.followers|number }} </b-table-column> <b-table-column field="tms_modify" :label="\'Дата\'|gettext" class="has-text-nowrap" sortable v-slot="props">{{ props.row.tms_modify|datetime }}</b-table-column> <b-table-column field="price" :label="\'Бюджет\'|gettext" numeric v-slot="props"><div>{{ props.row.price|number }}<span class="has-text-grey-light"> {{props.row.currency_title}}</span></div></b-table-column> </b-table> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-profiles-domain-form",{data:function(){return{isUpdating:!1,isFetching:!0,values:{domain_id:null,language_id:null}}},props:["account_id","profileForm"],mixins:[FormModel],created:function(){var s=this;this.$api.get("manager/profiles/getdomain",{account_id:this.account_id},this).then(function(e){var t;"success"==e.result&&(t=e.response,s.values=t.values,s.variants=t.variants,s.isFetching=!1)})},methods:{updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/profiles/setdomain",{account_id:this.account_id,values:this.values},this).then(function(e){"success"==e.result&&(t.profileForm.fetchData(),t.$parent.close()),t.isUpdating=!1}).catch(function(e){t.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Смена домена и языка регистрации\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <b-field :label="\'Домен\'|gettext"> <b-select v-model="values.domain_id" expanded> <option v-for="(domain, domain_id) in variants.domains" :value="domain_id">{{domain}}</option> </b-select> </b-field> <b-field :label="\'Язык\'|gettext"> <b-select v-model="values.language_id" expanded> <option v-for="(language_title, language_id) in variants.languages" :value="language_id">{{language_title}}</option> </b-select> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-profiles-export-form",{data:function(){return{isUpdating:!1,isRefreshing:!1,isFetching:!1,amount:0,charset:"utf-8",export_products:!1,variants:{}}},created:function(){this.fetchData(!0)},props:["filters","query","tags","date_from","date_until"],computed:{downloadUrl:function(){return"/api/manager/profiles/export/download.csv?filters="+this.filters.join(",")+"&query="+this.query+"&charset="+this.charset+"&tags="+this.tags.join(",")+"&date_from="+(this.date_from?date_format("Y-m-d",this.date_from):"")+"&date_until="+(this.date_until?date_format("Y-m-d",this.date_until):"")}},mixins:[FormModel],methods:{fetchData:function(e){var t=this;this.isRefreshing=this.isFetching=e,this.$api.get("manager/profiles/export/info",{filters:this.filters,query:this.query,tags:this.tags,date_from:this.date_from?date_format("Y-m-d",this.date_from):null,date_until:this.date_until?date_format("Y-m-d",this.date_until):null,charset:this.charset}).then(function(e){t.isFetching=t.isRefreshing=!1,t.variants=e.response.export.info.variants,t.amount=e.response.export.info.amount})},onChanged:function(){var t=this;this.isRefreshing=!0,this.$api.get("manager/profiles/export/calc",{filters:this.filters,query:this.query,charset:this.charset}).then(function(e){t.isRefreshing=!1,t.amount=e.response.export.calc})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Экспорт профилей\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="message is-success"> <div class="message-body"> {{\'Найдено профилей\'|gettext}}: {{ amount|number }} <a :href="downloadUrl" target="frame" class="button is-small is-success is-pulled-right no-ajax" :class="{\'is-loading\': isRefreshing}"><span class="is-hidden-mobile">{{\'Скачать CSV-файл\'|gettext}}</span><span class="is-hidden-tablet">{{\'Скачать\'|gettext}}</span></a> </div> </div> <b-field :label="\'Кодировка\'|gettext"> <b-select v-model="charset" expanded> <option v-for="(v, k) in variants.charset" :value="k">{{ v }}</option> </b-select> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-profiles-form",{data:function(){return{profile:{nickname:"",tariff_current:"",avatar_url:"",tags:[]},is_allow_signin:!1,profiles:[],payments:[],transfers:[],adverts:!1,emails:null,errors:{},variants:null,similar_profiles:null,history:null,isFetchingSimilarsProfiles:!1,isFetchingHistory:!1,isFetchingemails:!1,isFetching:!1,isUpdating:!1,tabs:[{name:"common",title:this.$gettext("Общие"),isAllow:!0},{name:"payments",title:this.$gettext("Оплаты"),isAllow:!0},{name:"profiles",title:this.$gettext("Профили"),isAllow:!0},{name:"security",title:this.$gettext("Блокировка"),isAllow:this.$auth.isAllowEndpoint("manager/security/get")},{name:"transfers",title:this.$gettext("Переносы"),isAllow:!0},{name:"history",title:this.$gettext("История установок"),isAllow:!0},{name:"emails",title:this.$gettext("Письма"),isAllow:this.$auth.isAllowEndpoint("manager/mails/messages/account")}]}},created:function(){this.fetchData()},props:{profile_id:Number,currentTab:{type:String,default:"common"},owner:String},watch:{currentTab:function(e){for(var t=0,t=0;t<this.tabs.length&&this.tabs[t].name!=e;t++);var s=this.$refs.menu.children[t];scrollIt(s.offsetLeft-(this.$refs.menu.offsetWidth-s.offsetWidth)/2,"x",this.$refs.menu,300)}},methods:{onAction:function(e){var t=this;switch(e){case"signin":this.$auth.changeProfile(this.profile_id,function(){t.$parent.close()});break;case"change_account":this.changeAccountForm();break;case"transfer_plan":this.openPlanForm();break;case"activate_trial":this.openTrialForm();break;case"change_domain":this.openDomainForm();break;case"change_username":this.changeUsernameForm();break;case"change_email":this.changeEmail()}},changeUsernameForm:function(){var t=this,e=prompt("Укажите имя пользователя","");e&&this.$api.post("manager/profiles/setusername",{profile_id:this.profile_id,username:e}).then(function(e){"success"==e.result?t.fetchData():alert(e.message)})},changeEmail:function(){var t=this,e=prompt("Укажите email",this.profile.email);e&&this.$api.post("manager/profiles/setemail",{account_id:this.profile.account_id,email:e}).then(function(e){"success"==e.result?t.fetchData():alert(e.message)})},openDomainForm:function(){this.$modal("vue-manager-profiles-domain-form",{account_id:this.profile.account_id,profileForm:this})},changeAccountForm:function(){var t=this,e=prompt("Укажите email аккаунта","");e&&this.$api.post("manager/profiles/setaccount",{profile_id:this.profile_id,email:e}).then(function(e){"success"==e.result&&t.fetchData()})},openPlanForm:function(){this.$modal("vue-manager-profiles-plan-form",{profile_id:this.profile_id,profileForm:this})},openTrialForm:function(){this.$modal("vue-manager-profiles-trial-form",{profile_id:this.profile_id,profileForm:this})},setTab:function(e){var t=this;"history"==(this.currentTab=e)&&null==this.history&&(this.isFetchingHistory=!0,this.$api.get("manager/statistics/history/list",{profile_id:this.profile_id}).then(function(e){t.history=e.response.history.fields,t.isFetchingHistory=!1})),"emails"==e&&null==this.emails&&(this.isFetchingHistory=!0,this.$api.get("manager/mails/messages/account",{account_id:this.profile.account_id}).then(function(e){t.emails=e.response.messages.fields,t.isFetchingHistory=!1}))},fetchData:function(){var s=this;this.isFetching=!0,this.$api.get("manager/profiles/get",{profile_id:this.profile_id}).then(function(e){s.isFetching=!1;var t=e.response;s.profile=t.profile,s.profiles=t.profiles,s.payments=t.payments,s.transfers=t.transfers,s.adverts=t.adverts,s.variants=t.variants,s.is_allow_signin=t.is_allow_signin})},openPartnerForm:function(){this.$modal("vue-manager-partners-history",{partner_id:this.profile.partner_id,profile_id:this.profile.profile_id},this)},openPaymentForm:function(e){this.$modal("vue-manager-payments-form",{order_id:e},this)}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title"><span class="is-hidden-mobile"><img :src="\'//{1}/a/{2}\'|format($account.storage_domain, profile.avatar_url)" style="width: 3rem;height:3rem;border-radius:100%;margin: -1rem .5rem -1rem 0">{{\'Профиль\'|gettext}} </span><span v-if="profile.nickname">{{profile.nickname}}</span><spam v-else сlass="skeleton">&nbsp;</spam></p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs nav-tabs-scroll has-text-left" ref="menu"> <li v-for="v in tabs" :class="{active: currentTab== v.name}" v-if="v.isAllow"><a @click="setTab(v.name)">{{v.title}}</a></li> </ul> <section class="modal-card-body manager-proifle-form" v-if="currentTab == \'common\'"> <div class="row"> <div class="col-xs-12 col-sm-6"> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Страница\'|gettext}}:</div> <div class="col-xs-7 col-sm-9"> <a target="_blank" :href="profile.taplink_link" v-if="profile.taplink_link">{{profile.username}}</a> <span v-else>{{profile.username}}</span> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">Account ID:</div> <div class="col-xs-7 col-sm-9 level"> <div class="level-left"> {{profile.account_id}} </div> <div class="level-right"> <a @click="changeAccountForm" class="is-pulled-right has-text-success is-hidden-mobile" v-if="$auth.isAllowEndpoint(\'manager/profiles/setaccount\')">{{\'Сменить\'|gettext}}</a> </div> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">Profile ID:</div> <div class="col-xs-7 col-sm-9"> {{profile.profile_id}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Тариф\'|gettext}}:</div> <div class="col-xs-7 col-sm-9 level"> <div class="level-left"> <vue-component-tariff-badge v-model="profile.tariff_current" theme="dark"/> <span v-if="profile.tariff_current != \'basic\'" class="control has-text-grey has-ml-1">до {{profile.tms_tariff_until|date}}</span> </div> <div class="level-right is-hidden-mobile"> <a @click="openPlanForm" class="is-pulled-right has-text-success" v-if="$auth.isAllowEndpoint(\'manager/profiles/plans/transfer\')">{{\'Перенести\'|gettext}}</a> </div> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Триал\'|gettext}}:</div> <div class="col-xs-7 col-sm-9 level"> <div class="level-left"> <p class="control" v-if="profile.trial_tariff"> <vue-component-tariff-badge v-model="profile.trial_tariff" theme="dark"/> <span class="control has-text-grey has-ml-1">до {{profile.trial_tms_until|date}}</span> </p> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> <div class="level-right is-hidden-mobile"> <a @click="openTrialForm" class="is-pulled-right has-text-success" v-if="$auth.isAllowEndpoint(\'manager/profiles/trial/set\')">{{\'Активировать\'|gettext}}</a> </div> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Домен\'|gettext}}:</div> <div class="col-xs-7 col-sm-9 level" v-if="!isFetching"> <div class="level-left"> {{variants.domain_id[profile.domain_id]}} </div> <div class="level-right is-hidden-mobile"> <a @click="openDomainForm" class="is-pulled-right has-text-success" v-if="$auth.isAllowEndpoint(\'manager/profiles/setdomain\')">{{\'Изменить\'|gettext}}</a> </div> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Язык\'|gettext}}:</div> <div class="col-xs-7 col-sm-9" v-if="!isFetching"> {{profile.account_language}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">Referer:</div> <div class="col-xs-7 col-sm-9"> <a v-if="profile.referer" target="_blank" rel="noreferrer" :href="profile.referer">{{profile.referer_domain}}</a> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Метки\'|gettext}}:</div> <div class="col-xs-7 col-sm-9"> <span class="tags" v-if="profile.tags.length> 0"> <span v-for="tag in profile.tags" class="tag is-warning">{{ tag }}</span> </span> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> </div> </div> <div class="field has-xs-mb-3"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Реклама\'|gettext}}:</div> <div class="col-xs-7 col-sm-9 level"> <span v-if="adverts">{{adverts}}</span><p class=" has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> </div> </div> </div> <div class="col-xs-12 col-sm-6"> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Профиль\'|gettext}}:</div> <div class="col-xs-7 col-sm-9 level"> <div class="level-left"> <a target="_blank" :href="\'https://instagram.com/\'+profile.username" v-if="profile.followers">@{{profile.username}}</a> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> <div class="level-right is-hidden-mobile"> <a @click="changeUsernameForm" class="is-pulled-right has-text-success" v-if="!profile.has_nickname && $auth.isAllowEndpoint(\'manager/profiles/setusername\')">{{\'Сменить\'|gettext}}</a> </div> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Подписчиков\'|gettext}}:</div> <div class="col-xs-7 col-sm-9"> {{profile.followers|number}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Био\'|gettext}}:</div> <div class="col-xs-7 col-sm-9"> {{profile.biography}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Ссылка\'|gettext}}:</div> <div class="col-xs-7 col-sm-9"> <a :href="profile.website_link" target="_blank" v-if="profile.website_domain">{{profile.website_domain}}</a> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">Email:</div> <div class="col-xs-7 col-sm-9 level"> <div class="level-left"> <a :href="\'mailto:{1}\'|format(profile.email)" target="_blank" v-if="profile.email">{{profile.email}}</a> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> <div class="level-right is-hidden-mobile"> <a @click="changeEmail" class="is-pulled-right has-text-success" v-if="$auth.isAllowEndpoint(\'manager/profiles/setemail\')">{{\'Сменить\'|gettext}}</a> </div> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Дата регистрации\'|gettext}}:</div> <div class="col-xs-7 col-sm-9"> {{profile.tms_created|date}} </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Кто привел\'|gettext}}:</div> <div class="col-xs-7 col-sm-9"> <p v-if="profile.invite_partner_id">{{profile.invite_partner_email}}</p> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> </div> </div> <div class="field"> <div class="row"> <div class="col-xs-5 col-sm-3 has-text-weight-bold">{{\'Партнерская программа\'|gettext}}:</div> <div class="col-xs-7 col-sm-9 level"> <div class="level-left"> <p v-if="profile.partner_id">ID: {{profile.partner_id}} <span class="has-text-grey">{{profile.partner_percent}}%</span></p> <p class="control has-text-grey" v-else>-- {{\'Нет\'|gettext}} --</p> </div> <div class="level-right" v-if="profile.partner_id"> <a @click="openPartnerForm" class="is-pulled-right has-text-success" v-if="$auth.isAllowEndpoint(\'manager/partners/set\')">{{\'Изменить\'|gettext}}</a> </div> </div> </div> </div> </div> </div> </section> <section class="modal-card-body" v-if="currentTab == \'payments\'"> <b-table :data="payments" :paginated="false"> <b-table-column field="order_id" :label="\'Счет\'|gettext" sortable v-slot="props"><span class="has-text-grey-light">№</span> <a href=\'#\' @click="openPaymentForm(props.row.order_id)">{{ props.row.order_id }}</a></b-table-column> <b-table-column field="order_status_id" :label="\'Оплата\'|gettext" sortable v-slot="props" cell-class="has-width-10 has-text-nowrap"><span :class="{\'has-text-success\': props.row.order_status_id == 2, \'has-text-danger\': props.row.order_status_id != 2}"><span v-if="props.row.order_status_id == 2">{{\'Оплачен\'|gettext}}</span><span v-else>{{\'Не оплачен\'|gettext}}</span></span></b-table-column> <b-table-column field="fiscal_attribute" :label="\'Чек\'|gettext" sortable v-slot="props"><span v-if="props.row.onlinekassa_error" class="has-text-danger"><i class="fa fa-exclamation-triangle" v-tippy :content="props.row.onlinekassa_error"></i> Ошибка</span><span v-else><span v-if="props.row.fiscal_attribute">ФП: {{ props.row.fiscal_attribute }}</span><span v-else class="has-text-grey-light">—</span></span></b-table-column> <b-table-column field="tms_modify" :label="\'Дата\'|gettext" sortable v-slot="props">{{ props.row.tms_modify|datetime }}</b-table-column> <b-table-column field="price" :label="\'Бюджет\'|gettext" numeric sortable v-slot="props">{{ props.row.budget|number }}<span class="has-text-grey-light"> {{props.row.currency_title}}</span></b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Оплат нет\'|gettext}}</div> </template> </b-table> </section> <vue-manager-security-form :profile_id="profile_id" v-if="currentTab == \'security\'" :owner="owner"></vue-manager-security-form> <section class="modal-card-body" v-if="currentTab == \'profiles\'"> <p class="has-text-grey">{{\'Список других профилей в данном личном кабинете\'|gettext}}</p> <b-table :data="profiles" class="has-mt-2" :paginated="false"> <b-table-column label="Имя пользователя" v-slot="props"><a @click="$modal(\'vue-manager-profiles-form\', {profile_id: props.row.profile_id});">{{ props.row.username }}</a><span v-if="props.row.profile_status_id == 5" class="has-text-danger has-ml-1" v-tippy :content="\'Профиль заблокирован\'|gettext"><i class="fa fa-exclamation-triangle"></i></span></b-table-column> <b-table-column label="Тариф" class="has-width-20" v-slot="props"><vue-component-tariff-badge v-model="props.row.tariff_current" v-if="props.row.has_tariff"/><span class="tag is-default" v-else>basic</span></b-table-column> <b-table-column numeric label="Действителен до" class="has-text-right has-width-20" v-slot="props"><span v-if="props.row.has_tariff">{{ props.row.tms_tariff_until|datetime }}</b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Других профилей нет\'|gettext}}</div> </template> </b-table> </section> <section class="modal-card-body" v-if="currentTab == \'transfers\'"> <b-table :data="transfers" :paginated="false"> <b-table-column :label="\'От кого\'|gettext" v-slot="props">{{props.row.username_from}}</b-table-column> <b-table-column :label="\'Кому\'|gettext" v-slot="props">{{props.row.username_to}}</b-table-column> <b-table-column :label="\'Дата\'|gettext" width="10%" v-slot="props">{{ props.row.tms_transfer|datetime }}</b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Пока ничего нет\'|gettext}}</div> </template> </b-table> </section> <section class="modal-card-body" v-if="currentTab == \'history\'"> <b-table :data="history" v-if="history"> <b-table-column :label="\'Дата\'|gettext" v-slot="props">{{ props.row.tms|date }}</b-table-column> <b-table-column :label="\'Домен\'|gettext" v-slot="props"><span v-if="props.row.website_domain_history">{{ props.row.website_domain_history }}</span><span class="has-text-grey" v-else>{{\'Пока ничего нет\'|gettext}}</span></b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Пока ничего нет\'|gettext}}</div> </template> </b-table> <b-loading :is-full-page="false" :active.sync="isFetchingHistory"></b-loading> </section> <section class="modal-card-body" v-if="currentTab == \'emails\'"> <div class="message is-info"> <div class="message-body">Email: {{profile.email}}</div> </div> <b-table :data="emails" v-if="emails"> <b-table-column :label="\'Дата\'|gettext" v-slot="props">{{ props.row.tms_created|datetime }}</b-table-column> <b-table-column :label="\'Заголовок\'|gettext" v-slot="props">{{ props.row.subject }}</b-table-column> <b-table-column :label="\'Статус\'|gettext" v-slot="props"><span :class="\'has-text-\'+props.row.message_status_classname">{{ props.row.message_status|gettext }}</span></b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Пока ничего нет\'|gettext}}</div> </template> </b-table> <b-loading :is-full-page="false" :active.sync="isFetchingemails"></b-loading> </section> <footer class="modal-card-foot level"> <div class="level-left"> <button @click="$auth.changeProfile(profile_id, () => {$parent.close()})" target="_blank" class="button is-hidden-mobile" v-if="is_allow_signin">{{\'Войти в аккаунт\'|gettext}}</button> <vue-component-action-button @action="onAction" :title="\'Действие\'|gettext" class="is-hidden-tablet"> <template slot="actions"> <b-dropdown-item value="signin">{{\'Войти в аккаунт\'|gettext}}</b-dropdown-item> <b-dropdown-item value="change_account" v-if="$auth.isAllowEndpoint(\'manager/profiles/setaccount\')">{{\'Перенести профиль\'|gettext}}</b-dropdown-item> <b-dropdown-item value="transfer_plan" v-if="$auth.isAllowEndpoint(\'manager/profiles/plans/transfer\')">{{\'Перенести тариф\'|gettext}}</b-dropdown-item> <b-dropdown-item value="activate_trial" v-if="$auth.isAllowEndpoint(\'manager/profiles/trial/set\')">{{\'Активировать триал\'|gettext}}</b-dropdown-item> <b-dropdown-item value="change_domain" v-if="$auth.isAllowEndpoint(\'manager/profiles/setdomain\')">Поменять домен</b-dropdown-item> <b-dropdown-item value="change_username" v-if="!profile.has_nickname && $auth.isAllowEndpoint(\'manager/profiles/setusername\')">Сменить имя</b-dropdown-item> <b-dropdown-item value="change_email" v-if="$auth.isAllowEndpoint(\'manager/profiles/setemail\')">{{\'Сменить email\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> </div> <div class="level-right"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-profiles-list",{data:function(){return{isFetching:!1,profiles:[],statistics:null,permissions:{},filter:{query:"",tags:[]},perPage:100,sortField:"tms_created",sortOrder:"desc",date_from:null,date_until:null,statisticsGroup:"",weekdays:this.$getDaysNames(),months:this.$getMonthsNames(),first_day_week:this.$getFirstDayWeek(),filterTags:["utm_source","utm_medium","utm_campaign","lang","country","domain","uniq"],statisticsGroups:{lang:this.$gettext("Язык"),country:this.$gettext("Страна"),utm_source:"utm_source",utm_medium:"utm_medium",utm_campaign:"utm_campaign",utm_term:"utm_term",utm_content:"utm_content"},dropdown_items:[{label:this.$gettext("Тарифы"),items:{"tariff:*":this.$gettext("Все тарифы"),"tariff:pro":"pro","tariff:business":"business"}},{label:this.$gettext("Ссылка"),items:{"is_installed:true":this.$gettext("Cсылка стоит"),"is_installed:false":this.$gettext("Cсылка не стоит"),"is_installed_once:true":this.$gettext("Cсылка стояла")}},{label:this.$gettext("Блокировка"),items:{"is_locked:true":this.$gettext("Профиль заблокирован"),"is_locked:false":this.$gettext("Профиль не заблокирован")}}],filter_values:["tariff:*","is_locked:false"]}},mixins:[ListModel],watch:{filter_type:function(){this.clearPages(),this.fetchData()},statisticsGroup:function(){var e=this.getFetchParams();this.fetchStatistics(e)}},beforeRouteUpdate:function(e,t,s){var a=Vue.prototype.$auth;a.isAllowEndpoint("manager/profiles/list")?s():s(a.prepareMenu(a.getMenu("manager"))[0])},created:function(){this.$auth.isAllowEndpoint("manager/profiles/list")&&(this.fetchData(!0,!0),this.$io.on("events:manager.profiles.list:refresh",this.refresh),this.permissions={form:this.$auth.isAllowEndpoint("manager/profiles/get"),statistics:this.$auth.isAllowEndpoint("manager/profiles/statistics")})},destroyed:function(){this.$io.off("events:manager.profiles.list:refresh",this.refresh)},methods:{fetchStatistics:function(e){var t=this;this.statistics=null,this.permissions.statistics&&this.$api.get("manager/profiles/statistics",this.statisticsGroup?Object.assign(e,{group:this.statisticsGroup}):e).then(function(e){t.statistics=e.response.profiles.statistics})},onFilter:function(){this.clearPages();var e=this.fetchData(!0,!1);this.fetchStatistics(e)},refresh:function(){this.next=this.current,this.fetchData(!0,!1,!0)},stageTitle:function(e){return{1:"Авторизовался",2:"Указал Email",3:"Добавил блоки",4:"Поставил ссылку",5:"Оплатил тариф"}[e]},onPageChange:function(e){this.page=e,this.fetchData(!0,!1)},getFetchParams:function(){return{next:this.next,count:this.perPage,sort_field:this.sortField,sort_order:this.sortOrder,query:this.filter.query,tags:this.filter.tags,filters:this.filter_values,date_from:this.date_from?date_format("Y-m-d",this.date_from):null,date_until:this.date_until?date_format("Y-m-d",this.date_until):null}},fetchData:function(e,t,s){var a=!(0<arguments.length&&void 0!==e)||e,i=this,n=1<arguments.length&&void 0!==t&&t,l=2<arguments.length&&void 0!==s&&s;this.isFetching=a;function o(e){i.profiles=_.map(e.fields,function(e){return e.instagram_link="//instagram.com/"+e.username,e.lang=e.lang?e.lang:"&nbsp;&nbsp;",e.website_title=decodeURI(e.website_domain).replace(/\?.*/g,"?...").replace(/https?\:\/\//,"").replace(/^www\./,""),-1!=e.website_domain.indexOf("taplink.")?e.website_class="has-text-primary":!e.is_installed&&e.is_installed_once?e.website_class="has-text-danger":e.website_class="has-text-black",e}),i.isFetching=!1}var r=this.getFetchParams();return!l&&this.checkCache(o)||this.$nextTick(function(){i.$api.post(n?["manager/profiles/list","manager/info"]:"manager/profiles/list",r).then(function(e){var s;i.cachePage(e.response.profiles,o),n&&(e.response.manager.info.domain_id||(s={"domain:*":"Все домены"},i.filter_values.push("domain:*"),_.each(e.response.manager.domains,function(e,t){s["domain:"+t]="taplink."+e}),i.dropdown_items.push({label:"Домены",items:s})))}).catch(function(e){throw i.payments=[],i.total=0,i.isFetching=!1,e}),i.permissions.statistics&&!i.statistics&&i.fetchStatistics(r)}),r},openForm:function(e){this.$modal("vue-manager-profiles-form",{profile_id:e},this)},rowClass:function(e){return e.is_locked?"tr-lock-account":""},openExportForm:function(){this.$modal("vue-manager-profiles-export-form",{query:this.filter.query,tags:this.filter.tags,filters:_.clone(this.filter_values),date_from:this.date_from,date_until:this.date_until},this)},tagsFetch:function(e,t,s){0<=["lang","country","uniq"].indexOf(e)?s([]):this.$api.get("manager/profiles/filters",{query:t,name:e}).then(function(e){s("success"==e.result?e.response.variants:[])})},onInputDates:function(){this.clearPages();var e=this.fetchData(!0,!1);this.fetchStatistics(e)}},template:'<div> <div class="container" v-if="permissions.statistics"> <div> <div class="has-mt-2 has-mb-2" v-if="statistics"> <div v-if="statisticsGroup"> <div style="display: flex;flex-direction: row"> <div class="has-background-grey-light profiles-conversion-bar" style="flex-grow: 1"></div> <b-dropdown v-model="statisticsGroup" class="statistics-group-button" aria-role="list" position="is-bottom-left"> <div data-stage="0" style="width: 1.5rem;height: 1rem;position: absolute;top: 0;" slot="trigger" aria-role="listitem"></div> <b-dropdown-item value="">Без групировки</b-dropdown-item> <hr class="dropdown-divider"> <b-dropdown-item v-for="(t, k) in statisticsGroups" :value="k">{{t}}</b-dropdown-item> </b-dropdown> </div> </div> <div v-for="(s, k) in statistics"> <div v-if="statisticsGroup"><span v-if="k">{{k}}</span><span class="has-text-grey" v-else>Пусто</span></div> <div style="display: flex;flex-direction: row"> <div class="has-background-grey-light profiles-conversion-bar" style="flex-grow: 1"> <div data-stage="2" v-if="s && s.bars" :style="{width: s.bars.signup}" v-tippy :content="\'Регистраций: {1}\'|format($number(s.values.total))"><span>{{s.conversions.signup}}</span></div> <div data-stage="3" v-if="s && s.bars" :style="{width: s.bars.blocks}" v-tippy :content="\'Добавили блоки: {1} из {2}\'|format($number(s.values.blocks), $number(s.values.total))"><span>{{s.conversions.blocks}}</span></div> <div data-stage="1" v-if="s && s.bars" :style="{width: s.bars.installed_remove}" v-tippy :content="\'Убрали ссылку: {1} из {2} ({3})\'|format($number(s.values.installed_remove), $number(s.values.installed_once), s.conversions.installed_remove_local)"><span>{{s.conversions.installed_remove}}</span></div> <div data-stage="4" v-if="s && s.bars" :style="{width: s.bars.installed}" v-tippy :content="\'Установлено ссылок: {1} из {2} ({3})\'|format($number(s.values.installed), $number(s.values.installed_once), s.conversions.installed_local)"><span>{{s.conversions.installed}}</span></div> <div data-stage="5" v-if="s && s.bars" :style="{width: s.bars.paid}" v-tippy :content="\'Оплатили: {1} из {2}\'|format($number(s.values.paid), $number(s.values.total))"><span>{{s.conversions.paid}}</span></div> </div> <b-dropdown v-model="statisticsGroup" class="statistics-group-button" aria-role="list" position="is-bottom-left" v-if="!statisticsGroup"> <div data-stage="0" style="width: 1.5rem;height: 1rem;position: absolute;top: 0;" slot="trigger" aria-role="listitem"></div> <b-dropdown-item value="">{{\'Без групировки\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider"> <b-dropdown-item v-for="(t, k) in statisticsGroups" :value="k">{{t}}</b-dropdown-item> </b-dropdown> </div> </div> </div> <div class="has-mt-2 has-mb-2 has-background-grey-light profiles-conversion-bar" v-else></div> </div> </div> <vue-component-filterbox @filter="onFilter" v-model="filter" :tags-fetch="tagsFetch" :disabled="isFetching" :allow-tags="filterTags" :with-filters="true" :with-buttons="true"> <template slot="buttons"> <a @click="openExportForm" class="button is-light is-fullwidth" v-tippy :content="\'Скачать CSV-файл\'|gettext" v-if="$auth.isAllowEndpoint(\'manager/profiles/export/info\')"><i class="fa fas fa-download"></i></a> </template> <template slot="filters"> <div class="row row-small"> <div class="col-sm-3 has-mb-2"> <vue-component-dropdown-checklist :list="dropdown_items" v-model="filter_values" @input="onFilter"></vue-component-dropdown-checklist> </div> <div class="col-xs-6 col-sm-3 has-mb-2"> <div class="has-feedback"> <b-datepicker :placeholder="\'От\'|gettext" v-model="date_from" icon="calendar-alt" :day-names="weekdays" :month-names="months" :first-day-of-week="first_day_week" @input="onInputDates"></b-datepicker> <a class="form-control-feedback has-text-grey-light" @click="date_from = null"><i class="fal fa-times"></i></a> </div> </div> <div class="col-xs-6 col-sm-3 has-mb-2"> <div class="has-feedback"> <b-datepicker :placeholder="\'До\'|gettext" v-model="date_until" icon="calendar-alt" :day-names="weekdays" :month-names="months" :first-day-of-week="first_day_week" @input="onInputDates"></b-datepicker> <a class="form-control-feedback has-text-grey-light" @click="date_until = null"><i class="fal fa-times"></i></a> </div> </div> </div> </template> </vue-component-filterbox> <div class="container has-mb-3"> <b-table paginated backend-pagination backend-sorting pagination-simple :data="profiles" :loading="isFetching" :per-page="perPage" :current-page="page" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" @sort="onSort" :row-class="rowClass" bordered> <b-table-column field="username" :label="\'Профиль\'|gettext" sortable v-slot="props"> <div v-if="props.row.utm_source" class="has-text-warning is-pulled-right"><span class="">UTM: {{props.row.utm_source}}</span><span v-if="props.row.utm_medium || props.row.utm_campaign" class=""> / {{props.row.utm_medium}}</span><span v-if="props.row.utm_campaign" class=""> / {{props.row.utm_campaign}}</span></div> <span style="display: flex;align-items: center"> <span class="iti__flag iti__flag-box" :class="\'iti__\'+props.row.country" style="display: inline-block" :title="props.row.country"></span> <span class="tag is-default" v-html="props.row.lang" style="width: 24px;margin: 0 .5rem"></span> <a @click="openForm(props.row.profile_id)" v-if="permissions.form" style="flex:1">{{ props.row.username }}</a> <span v-else>{{ props.row.username }}</span> <span v-if="props.row.profile_status_id == 5" class="has-text-danger" v-tippy :content="\'Профиль заблокирован\'|gettext"><i class="fa fa-exclamation-triangle"></i></span> <span class="tags has-ml-1" v-if="props.row.tags.length"><span v-for="tag in props.row.tags" class="tag">{{tag}}</span></span> </span> </b-table-column> <b-table-column field="weight" :label="\'Вес\'|gettext" cell-class="has-width-5" numeric v-slot="props"> <span :class="{\'has-text-grey-light\': props.row.weight == 0}">{{ props.row.weight|number }}</span> </b-table-column> <b-table-column field="website_link" :label="\'Ссылка\'|gettext" cell-class="has-width-30" v-slot="props"> <div> <span class="profile-stage" :data-stage="props.row.stage" v-tippy :content="stageTitle(props.row.stage)">{{props.row.stage}}</span> <a :href=\'props.row.website_link\' target="_blank" :class="props.row.website_class" v-if="props.row.website_domain">{{ props.row.website_domain }}</a> <div class="tags is-pulled-right is-hidden-mobile"> <span v-if="props.row.is_deleted" class="is-pulled-right tag is-warning" v-tippy :content="\'Этот Instagram отключен\'|gettext">&nbsp;<i class="fas fa-times"></i>&nbsp;</span> <span v-if="props.row.is_locked" class="is-pulled-right tag is-danger" v-tippy :content="\'Этот профиль заблокирован\'|gettext">&nbsp;<i class="fas fa-lock"></i>&nbsp;</span> <span v-if="!props.row.is_installed && props.row.is_installed_once" class="tag is-danger">remove</span> <a :href=\'props.row.taplink_link\' target="_blank"> <span class="tag is-warning" v-if="props.row.trial_tariff">trial</span> <vue-component-tariff-badge v-else v-model="props.row.tariff_current"/> </a> </div> </div> </b-table-column> <b-table-column field="followers" :label="\'Подписчиков\'|gettext" numeric sortable v-slot="props"> <div class="tags is-pulled-left is-hidden-mobile"> <a :href=\'props.row.instagram_link\' target="_blank" v-if="props.row.followers"><span class="tag is-dark">Instagram</span></a> </div> {{ props.row.followers|number }} </b-table-column> <b-table-column field="tms_created" :label="\'Дата\'|gettext" numeric sortable v-slot="props"> {{ props.row.tms_created|date }} </b-table-column> </b-table> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-profiles-plan-form",{data:function(){return{isUpdating:!1,isFetching:!1,profile_to:"",allowMerge:!1}},props:["profile_id","profileForm"],mixins:[FormModel],methods:{updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/profiles/plans/transfer",{profile_from:this.profile_id,profile_to:this.profile_to,allow_merge:this.allowMerge},this).then(function(e){"success"==e.result&&(t.profileForm.fetchData(),t.$parent.close()),t.isUpdating=!1}).catch(function(e){t.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Перенос тарифа\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <b-field :label="\'Имя профиля или ID\'|gettext" :message="errors.profile_to" :class="{\'has-error\': errors.profile_to}" v-focus> <b-input v-model="profile_to"> </b-field> <label class="checkbox"><input type="checkbox" v-model="allowMerge">Объединить тарифы</label> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Перенести\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-profiles-trial-form",{data:function(){return{isUpdating:!1,isFetching:!1,tariff:"",period:""}},props:["profile_id","profileForm"],mixins:[FormModel],mounted:function(){},methods:{updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/profiles/trial/set",{profile_id:this.profile_id,tariff:this.tariff,period:this.period},this).then(function(e){"success"==e.result&&(t.profileForm.fetchData(),t.$parent.close()),t.isUpdating=!1}).catch(function(e){t.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Активация пробного периода\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <b-field :label="\'Тариф\'|gettext" :message="errors.tariff" :class="{\'has-error\': errors.tariff}"> <b-select v-model="tariff" expanded> <option value="">-- {{\'Выберите тариф\'|gettext}} --</option> <option value="pro">PRO</option> <option value="business">BUSINESS</option> </b-select> </b-field> <b-field :label="\'Период\'|gettext" :message="errors.tariff" :class="{\'has-error\': errors.tariff}"> <b-select v-model="period" expanded> <option value="">-- {{\'Выберите период\'|gettext}} --</option> <option value="3">3 days</option> <option value="7">7 days</option> <option value="14">14 days</option> <option value="30">1 months</option> <option value="90">3 months</option> <option value="180">6 months</option> <option value="365">1 year</option> <option value="1825">5 years</option> <option value="3650">10 years</option> </b-select> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-refunds-form",{data:function(){return{isUpdating:!1,isFetching:!0,values:{tariff:"",days_left:0,days_all:0,budget:0,deductions:[],total:0}}},props:["order_id"],created:function(){this.fetchData()},computed:{progress:function(){return this.isFetching?0:this.values.days_left/this.values.days_all*100}},methods:{fetchData:function(){var t=this;this.$api.get("manager/refunds/get",{order_id:this.order_id}).then(function(e){"success"==e.result&&(t.values=e.response.values),t.isFetching=!1})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("account/billing/refund/confirm").then(function(e){"success"==e.result&&t.$parent.close(),t.isUpdating=!1})}},template:'<div class="modal-card modal-card-little"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Оформление возврата\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="has-mb-4"> <label class="label is-pulled-left" :class="{skeleton: isFetching}">{{\'Тариф\'|gettext}}: {{values.tariff}}</label> <div class="is-pulled-right has-text-grey" :class="{skeleton: isFetching}">{{\'Осталось {1} из {2}\'|gettext|format(values.days_left, values.days_all)}}</div> <progress class="progress is-success is-small" :value="progress" max="100"></progress> </div> <div class="has-mb-3"><b>Пересчет оплаты:</b></div> <div class="block-pricing" style="--text-color: var(--text-modal-color)"> <li :class="values.deductions.length?\'has-pb-1\':\'has-pb-3\'"><span>Стоимость тарифа</span><span></span><span>{{values.budget}}</span></li> <li class="has-pb-3" v-for="d in values.deductions"><span>{{d.title}}</span><span></span><span>- {{d.budget}}</span></li> <li class="has-pb-1 has-pt-3" style="border-top: 4px solid var(--text-modal-color);font-weight: bold"><span>{{\'Итого\'}}:</span><span></span><span>{{values.total}}</span></li> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()" :disabled="isUpdating">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" type="button" :class="{\'is-loading\': isUpdating}" @click="updateData" :disabled="values.total <= 0">{{\'Оформить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-refunds-list",{data:function(){return{isFeaching:!1}},mixins:[ListModel],created:function(){this.fetchData()},methods:{fetchData:function(){function t(e){s.fields=e.fields}var s=this;this.checkCache(t)||(this.isFetching=!0,this.$api.get("manager/refunds/list",{next:this.next,count:this.perPage}).then(function(e){s.cachePage(e.response.refunds,t),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},clickRow:function(e){this.$modal("vue-manager-refunds-form",{order_id:e.order_id})}},template:'<div class="container has-mt-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFeaching" class="has-mb-4" :per-page="perPage" @sort="onSort" :total="total" @page-change="onPageChange" @click="clickRow" hoverable> <b-table-column field="order_id" :label="\'Аккаунт\'|gettext" v-slot="props"> == {{props.row.order_id}} == </b-table-column> </b-table> </div>'}),window.$app.defineComponent("manager","vue-manager-security-domains-form",{data:function(){return{isUpdating:!1,isFetching:!0,action:null,values:{domain:{status:""}}}},created:function(){this.fetchData(!0)},props:["domain_id"],mixins:[FormModel],methods:{doAction:function(e){function t(){s.action=e,s.$api.get("manager/security/domains/set",{domain_id:s.domain_id,action:e,domain:s.values.domain.domain}).then(function(e){s.isFetching=!1,s.action=null,s.$parent.close()})}var s=this;"confirm"==e?this.$confirm("Вы уверены что хотите заблокировать этот домен?","is-danger").then(t):t()},openProfile:function(e){this.$modal("vue-manager-profiles-form",{profile_id:e,currentTab:"security",owner:"security"},this)},fetchData:function(e){var t=this;this.isFetching=e,this.$api.get("manager/security/domains/get",{domain_id:this.domain_id}).then(function(e){t.isFetching=!1,t.values=e.response.domains.values})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Домен\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="row row-small has-mb-2"> <div class="col-xs-6"><button class="button is-danger level-item is-fullwidth" :class="{\'is-loading\': action== \'confirm\'}" type="button" @click="doAction(\'confirm\')" :disabled="action">Заблокировать</button></div> <div class="col-xs-6"><button class="button is-success level-item is-fullwidth" :class="{\'is-loading\': action== \'skip\'}" type="button" @click="doAction(\'skip\')" :disabled="action">Хороший</button></div> </div> {{values.domain.status}} <div class="has-mb-2"> <a target="_blank" :href="\'http://\'+values.domain.domain">{{values.domain.domain}}</a> <a :href="\'https://developers.facebook.com/tools/debug/?q=\'+encodeURI(values.domain.domain)" target="_blank"><i class="far fa-external-link-square-alt"></i></a> </div> <b-table :data="values.profiles" :paginated="false" class="has-mb-2"> <b-table-column :label="\'Имя\'|gettext" v-slot="props"> <a :href=\'props.row.link\' target="_blank">{{props.row.link}}</a> </b-table-column> <b-table-column field="link" label="link" v-slot="props"> <a @click="openProfile(props.row.profile_id)">Открыть</a> </b-table-column> </b-table> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-security-domains",{data:function(){return{isFetching:!1,perPage:100}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.security.domains:refresh",this.refresh),this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.security.domains:refresh",this.refresh)},methods:{fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/security/domains/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){s.cachePage(e.response.domains),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},clickRow:function(e){this.$modal("vue-manager-security-domains-form",{domain_id:e.domain_id},this)}},template:'<div> <vue-component-submenu menu="manager.security" :page_id="page_id"/> <div class="container has-mt-3"> <div class="has-mb-2"> <b-table paginated backend-pagination backend-sorting pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :current-page="page" :total="total" @sort="onSort" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column label="Домен" v-slot="props"> {{props.row.domain}} </b-table-column> <b-table-column label="Статус" v-slot="props"> {{props.row.status}} </b-table-column> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-security-form",{data:function(){return{action:!1,isFetching:!1,isUpdating:!1,values:{html:[]},rules:[],pages:[],profiles:[],profilesSelected:[],rulesSelected:[],page_id:null,allow:{suspend:this.$auth.isAllowEndpoint("manager/security/suspend")}}},props:{profile_id:Number,owner:String},created:function(){this.fetchData()},watch:{page_id:function(e,t){t&&this.fetchData()},profile_id:function(){this.page_id=null,this.profilesSelected=[],this.rulesSelected=[]}},methods:{update:function(){var t=this;this.isUpdating=!0,this.$api.get("manager/security/update",{profile_id:this.profile_id,message:this.values.message,comments:this.values.comments}).then(function(e){t.isUpdating=!1,t.fetchDataResponse(e)})},selectAllProfiles:function(){this.profilesSelected=_.map(this.profiles,"profile_id")},fetchData:function(){var t=this;this.isFetching=!0,this.$api.get("manager/security/get",{profile_id:this.profile_id,page_id:this.page_id}).then(function(e){t.fetchDataResponse(e)})},fetchDataResponse:function(e){var t=e.response;"success"==e.result&&(this.values=t.values,this.rules=t.rules,this.profiles=t.profiles,this.pages=t.pages,this.page_id=t.values.page_id,this.isFetching=!1,this.profilesSelected=[t.values.profile_id])},checkNext:function(e){"security"==this.owner?e.response.next?(this.$parent.profile_id=e.response.next,this.$parent.page_id=null,this.$parent.fetchData()):this.$parent.$parent.close():this.fetchData()},suspend:function(){var t=this;this.$confirm("Вы уверены что хотите заблокировать эту ссылку?","is-danger").then(function(){t.action="suspend",t.isFetching=!0,t.$api.post("manager/security/suspend",{profile_id:t.profile_id,profiles:t.profilesSelected,rules:_.map(t.rulesSelected,function(e){return t.rules[e]})}).then(function(e){t.checkNext(e),t.action=!1})})},skip:function(){var t=this;this.action="skip",this.isFetching=!0,this.$api.get("manager/security/skip",{profile_id:this.profile_id}).then(function(e){t.checkNext(e),t.action=!1})},good:function(){var t=this;this.action="good",this.isFetching=!0,this.$api.get("manager/security/good",{profile_id:this.profile_id}).then(function(e){t.checkNext(e),t.action=!1})},nope:function(){var t=this;this.action="nope",this.isFetching=!0,this.$api.get("manager/security/nope",{profile_id:this.profile_id}).then(function(e){t.checkNext(e),t.action=!1})}},template:'<section class="modal-card-body modal-card-body-blocks"> <section> <div class="row row-small"> <div :class="{\'col-xs-3\': owner== \'security\', \'col-xs-4\': owner != \'security\'}"><button class="button is-danger level-item is-fullwidth" :class="{\'is-loading\': action== \'suspend\'}" type="button" @click="suspend" :disabled="!allow.suspend || action || (values.profile_status_id == 5)">Заблокировать</button></div> <div :class="{\'col-xs-3\': owner== \'security\', \'col-xs-4\': owner != \'security\'}"><button class="button is-warning level-item is-fullwidth" :class="{\'is-loading\': action== \'skip\'}" type="button" @click="skip" :disabled="!allow.suspend || action">Нейтрально</button></div> <div :class="{\'col-xs-3\': owner== \'security\', \'col-xs-4\': owner != \'security\'}"><button class="button is-success level-item is-fullwidth" :class="{\'is-loading\': action== \'good\'}" type="button" @click="good" :disabled="!allow.suspend || action">Хороший</button></div> <div class="col-xs-3" v-if="owner == \'security\'"><button class="button is-dark level-item is-fullwidth" type="button" @click="nope" :disabled="!allow.suspend || (values.profile_status_id == 5)">Не знаю</button></div> </div> </section> <section> <div v-if="values.profile_status_id == 5"> <div class="message is-danger"> <div class="message-body"> <h4 class="has-mb-1" style="font-weight: bold">{{\'Данная страница заблокирована\'|gettext}}</h4> <b>{{\'Причины\'|gettext}}:</b><br> <ul style="list-style:decimal-leading-zero;margin-left: 3rem"> <li v-for="r in values.reasons"><span :style="r.block_id?\'\':\'text-decoration: line-through\'">{{r.reason}}</span><span v-if="!r.block_id" class="has-ml-2 has-text-danger">({{\'Убрали\'|gettext}})</span></li> </ul> </div> </div> <b-field label="Сообщение на странице"> <textarea v-model="values.message" class="input" :disabled="!allow.suspend"></textarea> </b-field> <b-field label="Комментарий"> <textarea v-model="values.comments" class="input" :disabled="!allow.suspend"></textarea> </b-field> <button v-if="allow.suspend" class="button is-success" :class="{\'is-loading\': isUpdating}" v-if="allow.suspend" @click="update">{{\'Сохранить\'|gettext}}</button> </div> <div v-else> <div class="message is-danger" v-if="_.size(values.html)"> <div class="message-body"><a @click="$modal(\'vue-manager-security-html-form\', {html: values.html})">{{\'HTML-код на странице\'|gettext}} ({{_.size(values.html)}})</a></div> </div> <div class="row"> <div class="col-sm-6"> <label class="label">{{\'На странице\'|gettext}}</label> <b-table :data="rules" :paginated="false" class="has-mb-2"> <b-table-column field="type" label="type" v-slot="props"><b-checkbox v-model="rulesSelected" :native-value="props.index" :disabled="!allow.suspend">{{props.row.type}}</b-checkbox></b-table-column> <b-table-column field="method" label="method" v-slot="props">{{props.row.rule[0].method}}</b-table-column> <b-table-column field="rule" label="rule" v-slot="props"> <a :href="\'http://\'+props.row.rule[0].content" target="_blank">{{props.row.rule[0].content}}</a> <a :href="\'https://developers.facebook.com/tools/debug/?q=\'+encodeURI(props.row.rule[0].content)" target="_blank"><i class="far fa-external-link-square-alt"></i></a> </b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">Ссылок нет</div> </template> </b-table> <label class="label">{{\'Другие профили с данного IP\'|gettext}}</label> <b-table :data="profiles" :paginated="false" class="has-mb-2"> <b-table-column :label="\'Имя\'|gettext" v-slot="props"> <b-checkbox v-model="profilesSelected" :native-value="props.row.profile_id" :disabled="!allow.suspend">{{props.row.username}}</b-checkbox><span v-if="props.row.profile_status_id == 5" class="has-text-danger has-ml-1" v-tippy :content="\'Профиль заблокирован\'|gettext"><i class="fa fa-exclamation-triangle"></i> </b-table-column> <b-table-column field="link" label="link" v-slot="props"> <a :href="props.row.link" target="_blank" class="{disabled: props.row.profile_id == profile_id}">Открыть</a> </b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Других профилей нет\'|gettext}}</div> </template> </b-table> <button class="button is-light" @click="selectAllProfiles" :disabled="profiles.length == 0 || !allow.suspend">Выбрать все</button> </div> <div class="col-sm-6"> <label class="label">{{\'Страницы\'|gettext}}</label> <div class="field has-addons"> <b-select v-model="values.page_id" class="has-mb-2" v-model="page_id" expanded :disabled="_.size(pages) == 1 || isFetching"> <option v-for="(v, k) in pages" :value="k">{{v}}</option> </b-select> <p class="control"> <a :href=\'values.link\' class="button is-light" target="_blank" :disabled="isFetching"><i class="fa fa-external-link"></i></a> </p> </div> <div class="has-text-centered"> <div class="device is-black"> <div class="screen is-clipped" style="width: 262px;height: 466px"> <iframe class="counter-page" scrolling="no" :src="values.link+\'?static=1\'" v-if="!isFetching" style="transform: scale(.5);transform-origin: 0 0;min-width: 524px;min-height: 932px"></iframe> </div> </div> </div> </div> </div> </div> </section> </section>'}),window.$app.defineComponent("manager","vue-manager-security-history",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},statuses:{2:{title:"Нейтрально",classname:"warning"},3:{title:"Хорошо",classname:"success"},5:{title:"Заблокировано",classname:"danger"}},sortField:"tms",sortOrder:"desc",perPage:100}},props:["page_id"],mixins:[ListModel],created:function(){this.fetchData(!0)},methods:{fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/security/history",{next:this.next,count:this.perPage,filter:this.filter,sort_field:this.sortField,sort_order:this.sortOrder}).then(function(e){s.cachePage(e.response.history),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},clickRow:function(e){this.$modal("vue-manager-profiles-form",{profile_id:e.profile_id,currentTab:"security",owner:"security"},this)}},template:'<div> <vue-component-submenu menu="manager.security" :page_id="page_id"/> <div class="container has-mt-3"> <div class="has-mb-2"> <b-table paginated backend-pagination backend-sorting pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :current-page="page" :total="total" @sort="onSort" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column field="username" label="Профиль" v-slot="props"> <span class="iti__flag iti__flag-box" :class="\'iti__\'+props.row.country" style="display: inline-block" :title="props.row.country"></span> <span class="tag is-default" v-html="props.row.lang" style="width: 24px;margin: 0 .5rem"></span> {{ props.row.username }} </b-table-column> <b-table-column label="Статус" v-slot="props"> <span :class="\'has-text-\'+statuses[props.row.data.status_id].classname">{{statuses[props.row.data.status_id].title}}</span> </b-table-column> <b-table-column label="Кто" v-slot="props"> {{props.row.owner_email}} </b-table-column> <b-table-column field="tms" :label="\'Дата\'|gettext" numeric sortable v-slot="props"> {{ props.row.tms|datetime}} </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="smile" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-security-hostname-form",{data:function(){return{isFetching:!1}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Домен</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-security-html-form",{props:["html"],created:function(){console.log(this.html)},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">HTML</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section v-for="h in html"> <vue-component-codemirror v-model="h" mode="text/html" readonly="true"></vue-component-codemirror> </section> </section> <footer class="modal-card-foot"> <button class="button is-dark level-item" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> </div>'}),window.$app.defineComponent("manager","vue-manager-security-list",{data:function(){return{isFetching:!1,filter:{query:"",tags:[]},perPage:100}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.security.list:refresh",this.refresh),this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.security.list:refresh",this.refresh)},methods:{refresh:function(){this.clearPages(),this.fetchData(!1,!0)},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get("manager/security/list",{next:this.next,count:this.perPage,filter:this.filter}).then(function(e){s.cachePage(e.response.locking),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))},onPageChange:function(e){this.page=e,this.fetchData()},clickRow:function(e){this.$modal("vue-manager-profiles-form",{profile_id:e.profile_id,currentTab:"security",owner:"security"},this)}},template:'<div> <vue-component-submenu menu="manager.security" :page_id="page_id"></vue-component-submenu> <div class="container has-mt-3"> <div class="has-mb-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :current-page="page" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column field="username" label="Профиль" v-slot="props"> <span class="iti__flag iti__flag-box" :class="\'iti__\'+props.row.country" style="display: inline-block" :title="props.row.country"></span> <span class="tag is-default" v-html="props.row.lang" style="width: 24px;margin: 0 .5rem"></span> {{ props.row.username }} </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="smile" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-statistics-history",{data:function(){return{isUpdating:!1,perPage:100,statistics:null,currentTab:"list"}},mixins:[ListModel],created:function(){this.fetchData(!0)},props:["date","target"],mixins:[ListModel],methods:{setTab:function(e){this.currentTab=e},onPageChange:function(e){this.page=e,this.fetchData(!1)},fetchData:function(e,t){var s=this;this.isFetching=e;function a(e){null!=e.statistics&&(s.statistics=e.statistics),s.fields=e.fields,s.isFetching=!1}!t&&this.checkCache(a)||this.$api.get("manager/statistics/history/list",{date:this.date,target:this.target,next:this.next}).then(function(e){s.isFetching=!1,s.cachePage(e.response.history,a)})}},template:'<div class="modal-card modal-card-large"> <header class="modal-card-head"> <p class="modal-card-title" v-if="target == \'install\'">{{\'История установок\'|gettext}} {{date}}</p> <p class="modal-card-title" v-else>{{\'История удалений\'|gettext}} {{date}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs has-text-left"> <li :class="{active: currentTab== \'list\'}"><a @click="setTab(\'list\')">{{\'Список\'|gettext}}</a></li> <li :class="{active: currentTab== \'statistics\'}"><a @click="setTab(\'statistics\')">{{\'Статистика\'|gettext}}</a></li> </ul> <section class="modal-card-body" v-if="currentTab == \'list\'"> <b-table :data="fields" paginated backend-pagination pagination-simple :per-page="perPage" :current-page="page" :total="total" @page-change="onPageChange"> <b-table-column :label="\'Имя пользователя\'|gettext" v-slot="props"><a @click="$modal(\'vue-manager-profiles-form\', {profile_id: props.row.profile_id});">{{ props.row.username }}</a></b-table-column> <b-table-column :label="\'Домен\'|gettext" v-slot="props"><span v-if="props.row.website_domain_history">{{ props.row.website_domain_history }}</span><span class="has-text-grey" v-else>{{\'Пусто\'|gettext}}</span></b-table-column> <b-table-column :label="\'Домен сейчас\'|gettext" v-slot="props"><span v-if="props.row.website_domain" class="has-text-grey-light">{{ props.row.website_domain }}</span><span class="has-text-grey-light" v-else>{{\'Пусто\'|gettext}}</span></b-table-column> <b-table-column :label="\'Подписчиков\'|gettext" numeric v-slot="props">{{ props.row.followers|number }}</b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Список пуст\'|gettext}}</div> </template> </b-table> </section> <section class="modal-card-body" v-if="currentTab == \'statistics\'"> <b-table :data="statistics"> <b-table-column :label="\'Изменение\'|gettext" v-slot="props"><span v-if="props.row.website_domain">{{ props.row.website_domain }}</span><span class="has-text-grey" v-else>{{\'Пусто\'|gettext}}</span></b-table-column> <b-table-column :label="\'Количество\'|gettext" numeric v-slot="props">{{ props.row.amount|number }}</b-table-column> <template slot="empty"> <div class="has-text-grey-light has-text-centered">{{\'Список пуст\'|gettext}}</div> </template> </b-table> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-statistics-list",{data:function(){return{isFetching:!1,perPage:50,period:"month",segment:"day",periods:{month:this.$gettext("Месяц"),quarter:this.$gettext("Квартал"),year:this.$gettext("Год"),all:this.$gettext("Все")},segments:{day:this.$gettext("По дням"),month:this.$gettext("По месяцам"),year:this.$gettext("По годам")},is_allow_payments:!1}},mixins:[ListModel],created:function(){this.fetchData(!0)},watch:{period:function(){this.clearPages(),this.fetchData(!0,!0)},segment:function(){this.clearPages(),this.fetchData(!0,!0)}},methods:{showInstalled:function(e){this.$modal("vue-manager-statistics-history",{date:e,target:"install"},this)},showUninstalled:function(e){this.$modal("vue-manager-statistics-history",{date:e,target:"uninstall"},this)},fetchData:function(e,t){function s(e){a.fields=e.fields,a.is_allow_payments=e.is_allow_payments,a.isFetching=!1}var a=this;!t&&this.checkCache(s)||(this.isFetching=e,this.$api.post("manager/statistics/list",{next:this.next,count:this.perPage,period:this.period,segment:this.segment}).then(function(e){a.cachePage(e.response.statistics,s)}).catch(function(e){throw a.fields=[],a.total=0,a.isFetching=!1,e}))}},template:'<div> <div class="container has-mb-2 has-mt-2"> <div class="row"> <div class="col-sm-5 col-md-4 col-xs-12 has-xs-mb-2"> <vue-component-toggle-list v-model="period" :items="periods" :with-border="true"/> </div> <div class="col-sm-5 col-sm-offset-2 col-md-offset-3 col-lg-3 col-lg-offset-5 has-mb-2 col-xs-12"> <vue-component-toggle-list v-model="segment" :items="segments" :with-border="true"/> </div> </div> <b-table paginated backend-pagination pagination-simple bordered :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange"> <b-table-column :label="\'Дата\'|gettext" cell-class="has-width-10" v-slot="props">{{ props.row.tms }}</b-table-column> <b-table-column :label="\'Регистрации\'|gettext" cell-class="has-width-5" numeric v-slot="props">{{ props.row.amount|number }}</b-table-column> <b-table-column :label="\'Установили\'|gettext" cell-class="has-width-10" numeric v-slot="props"><div><span class="is-pulled-left has-text-grey-light has-mr-1">{{ props.row.amount_install_once/props.row.amount*100|decimal }}%</span> {{ props.row.amount_install_once|number }}</div></b-table-column> <b-table-column :label="\'Убрали\'|gettext" cell-class="has-width-10" numeric v-slot="props"><div><span class="is-pulled-left has-text-grey-light has-mr-1">{{ (props.row.amount_install_once - props.row.amount_install)/props.row.amount_install_once*100|decimal }}%</span>{{ props.row.amount_install_once - props.row.amount_install|number }}</div></b-table-column> <b-table-column :label="\'Установки всего\'|gettext" cell-class="has-width-15" numeric v-slot="props"><div><span class="is-pulled-left has-text-grey has-mr-2-mobile">{{ props.row.is_installed_followers|number }}</span><a @click="showInstalled(props.row.tms)" v-if="segment != \'year\'">{{ props.row.is_installed|number }}</a><span v-else>{{ props.row.is_installed|number }}</span></div></b-table-column> <b-table-column :label="\'Удаления всего\'|gettext" cell-class="has-width-15" numeric v-slot="props"><div><span class="is-pulled-left has-text-grey has-mr-2-mobile">{{ props.row.is_uninstalled_followers|number }}</span><a @click="showUninstalled(props.row.tms)" v-if="segment != \'year\'">{{ props.row.is_uninstalled|number }}</a><span v-else>{{ props.row.is_uninstalled|number }}</span></div></b-table-column> <b-table-column :label="\'Рост\'|gettext" numeric cell-class="has-width-15" v-slot="props"><div :class="{\'has-text-success\': props.row.is_installed - props.row.is_uninstalled> 0, \'has-text-danger\': props.row.is_installed - props.row.is_uninstalled < 0}"><span class="is-pulled-left has-mr-2-mobile" :class="{\'has-text-danger\': props.row.is_installed_followers < props.row.is_uninstalled_followers, \'has-text-grey\': props.row.is_installed_followers>= props.row.is_uninstalled_followers}">{{ props.row.is_installed_followers - props.row.is_uninstalled_followers|number }}</span>{{ props.row.is_installed - props.row.is_uninstalled|number }}</div></b-table-column> <b-table-column :label="\'Оплаты\'|gettext" numeric v-if="is_allow_payments" v-slot="props"> <span> <div v-if="i18n.locale == \'ru\'" class="has-text-weight-bold">{{ props.row.budget_total.budget|number }}<span class="has-text-grey-light"> {{props.row.budget_total.currency_title}}</span> </div> <div> <span v-for="v in props.row.budget" class=\'table-price\'> {{ v.budget|number }}<span class="has-text-grey-light"> {{v.currency_title}}</span> </span> </div> </span> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div>'}),window.$app.defineComponent("manager","vue-manager-users-form",{data:function(){return{currentTab:"privileges",isFetching:!1,isUpdating:!1,info:[],privileges:[],sets:[],allows:[]}},props:["account_id"],mixins:[FormModel],created:function(){this.fetchData(!0)},methods:{setTab:function(e){this.currentTab=e},fetchData:function(e){var s=this;this.isFetching=e,this.$api.get("manager/users/get",{account_id:this.account_id}).then(function(e){var t;s.isFetching=!1,"success"==e.result&&(t=e.response.users,s.privileges=t.privileges,s.allows=t.allows,s.sets=t.sets,s.info=t.info)})},save:function(){var t=this;this.isUpdating=!0,this.$api.post("manager/users/set",{account_id:this.account_id,sets:this.sets,info:this.info}).then(function(e){t.isUpdating=!1,t.$parent.close()})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">Пользователь</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <ul class="nav nav-tabs has-text-left"> <li :class="{active: currentTab== \'privileges\'}"><a @click="setTab(\'privileges\')">{{\'Права\'|gettext}}</a></li> <li :class="{active: currentTab== \'info\'}"><a @click="setTab(\'info\')">{{\'Информация\'|gettext}}</a></li> </ul> <section class="modal-card-body modal-card-body-blocks" v-if="currentTab == \'privileges\'"> <section class="message is-warning" v-if="!isFetching"> <div class="message-body">{{info.email}}</div> </section> <section> <div class="row"> <div class="col-xs-12 col-sm-6" v-for="g in privileges"> <div class="has-mb-2 checkbox-list"> <label class="is-block label has-text-grey">{{g.title}}</label> <label class="is-block checkbox" v-for="p in g.list" :class="{disabled: allows.indexOf(p.privilege_id) == -1}"><input type=\'checkbox\' v-model="sets" :disabled="allows.indexOf(p.privilege_id) == -1" :value="p.privilege_id"> {{p.title}}</label> </div> </div> </div> </section> </section> <section class="modal-card-body modal-card-body-blocks" v-if="currentTab == \'info\'"> <section> <b-field :label="\'Имя:\'|gettext" :message="errors.fullname" :class="{\'has-error\': errors.fullname}"> <b-input type="text" v-model="info.fullname"></b-input> </b-field> <mx-toggle v-model="info.is_active" :title="\'Пользователь активен\'|gettext"></mx-toggle> </section> </section> <footer class="modal-card-foot"> <button class="button is-primary" type="button" @click="save" :class="{\'is-loading\': isUpdating}" :disabled="isFetching || !allows.length">{{\'Сохранить\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("manager","vue-manager-users-list",{data:function(){return{manager_id:null,isFetching:!1,sequence:null,perPage:100,columns:null,managers:[],columnsItems:null}},props:["page_id"],mixins:[ListModel],created:function(){this.$io.on("events:manager.users.list:refresh",this.refresh),this.fetchData(!0)},beforeDestroy:function(){this.$io.off("events:manager.users.list:refresh",this.refresh)},watch:{manager_id:function(){this.refresh()}},computed:{columns_props:function(){if(!this.columns)return[];for(var s={fullname:{label:"Название",classname:"has-text-nowrap",sortable:!0},email:{label:"Email",classname:"has-text-nowrap",sortable:!0},manager:{label:"Группа",classname:"has-text-nowrap",sortable:!0}},e=_.map(this.columns,function(e){var t=s[e];return t.visible=!0,t.field=e,t}),t=0;t<11-this.columns.length;t++)e.push({visible:!1});return e[0].classname+=" has-text-nowrap",e}},methods:{refresh:function(){this.clearPages(),this.fetchData(!1,!0)},clickRow:function(e){this.$modal("vue-manager-users-form",{account_id:e.account_id},this)},fetchData:function(e,t){var s=this;!t&&this.checkCache()||(this.isFetching=e,this.$api.get(this.columns?"manager/users/list":["manager/users/list","manager/users/info"],{next:this.next,count:this.perPage,manager_id:this.manager_id}).then(function(e){var t=e.response.users;s.cachePage(t.list),null!=t.info&&null!=t.info.columns&&(s.columns=t.info.columns,s.managers=t.info.managers),s.isFetching=!1}).catch(function(e){throw s.fields=[],s.total=0,s.isFetching=!1,e}))}},template:'<div> <div class="container"> <div class="panel panel-default has-mt-3 has-mb-3 has-p-2"> <div class="select"> <b-select v-model="manager_id" placeholder="-- Все --"> <option :value="null">-- Все --</option> <option v-for="m in managers" :value="m.manager_id">{{m.title}}</option> </b-select> </div> </div> <div class="has-mb-2 has-mt-2"> <b-table paginated backend-pagination pagination-simple :data="fields" :loading="isFetching" :per-page="perPage" :total="total" @page-change="onPageChange" hoverable bordered @click="clickRow"> <b-table-column v-for="(column, index) in columns_props" :field="column.field" :label="column.label|gettext" :numeric="column.numeric" :key="index" :visible="column.visible" :sortable="column.sortable" :width="column.width" v-slot="props"> <span :class="{\'has-text-grey-light\': !props.row.is_active}"> <span v-if="column.field == \'fullname\'"> <span v-if="props.row.fullname">{{ props.row.fullname }}</span><span class="has-text-grey" v-else>{{\'Без имени\'|gettext}}</span> </span> <span v-if="column.field == \'email\'"> {{ props.row.email }} </span> <span v-if="column.field == \'manager\'"> {{ props.row.manager }} </span> </span> </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="!isFetching"> <p><b-icon icon="frown" size="is-large"></b-icon></p> <p>{{\'Пока ничего нет\'|gettext}}</p> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div> </div>'}),window.$app.defineModule("manager",[{path:"metrics/",name:"manager.metrics",meta:{title:"Аналитика"},children:[{path:"dashboard/",name:"manager.metrics.dashboard",component:"vue-manager-metrics-dashboard",meta:{title:"Дашборд",endpoint:"manager/metrics/dashboard/layout"},props:!0},{path:"charts/",name:"manager.metrics.charts",component:"vue-manager-metrics-charts",meta:{title:"Чарты",endpoint:"manager/metrics/charts/list"},props:!0},{path:"datasets/",name:"manager.metrics.datasets",component:"vue-manager-metrics-datasets-list",meta:{title:"Датасеты",endpoint:"manager/metrics/datasets/list"},props:!0},{path:"sources/",name:"manager.metrics.sources",component:"vue-manager-metrics-sources-list",meta:{title:"Подключения",endpoint:"manager/metrics/sources/list"},props:!0}]},{path:"profiles/",component:"vue-manager-profiles-list",meta:{title:"Профили",endpoint:"manager/profiles/list"},props:!0,name:"manager.profiles"},{path:"statistics/",component:"vue-manager-statistics-list",meta:{title:"Статистика",endpoint:"manager/statistics/list"},props:!0,name:"manager.statistics"},{path:"payments/",component:"vue-manager-payments-list",meta:{title:"Оплаты",endpoint:"manager/payments/list"},props:!0,name:"manager.payments"},{path:"refunds/",component:"vue-manager-refunds-list",meta:{title:"Возвраты",endpoint:"manager/refunds/list"},props:!0,name:"manager.refunds"},{path:"partners/",name:"manager.partners",meta:{title:"Партнеры",endpoint:"manager/partners/list"},children:[{path:"list/",component:"vue-manager-partners-list",meta:{title:"Список",endpoint:"manager/partners/list"},props:!0,name:"manager.partners.list"},{path:"payouts/",component:"vue-manager-partners-payouts-list",meta:{title:"Выплаты",endpoint:"manager/partners/payouts/list"},props:!0,name:"manager.partners.payouts"},{path:"requests/",component:"vue-manager-partners-requests-list",meta:{title:"Запросы",endpoint:"manager/partners/requests/list"},props:!0,name:"manager.partners.requests"},{path:"agreements/",component:"vue-manager-partners-agreements-list",meta:{title:"Договора",endpoint:"manager/partners/agreements/list"},props:!0,name:"manager.partners.agreements"}]},{path:"locales/",meta:{title:"Языки"},props:!0,name:"manager.locales",children:[{path:"dashboard/",component:"vue-manager-locales-dashboard",name:"manager.locales.dashboard",meta:{title:"Языки",endpoint:"manager/locales/dashboard/list"},props:!0},{path:"phrases/",component:"vue-manager-locales-phrases",name:"manager.locales.phrases.index",meta:{title:"Интерфейс",endpoint:"manager/locales/get"},props:!0},{path:"addons/",component:"vue-manager-locales-addons",name:"manager.locales.addons.index",meta:{title:"Модули",endpoint:"manager/locales/addons/get"},props:!0},{path:"payments/",component:"vue-manager-locales-payments",name:"manager.locales.payments.index",meta:{title:"Платежные системы",endpoint:"manager/locales/payments/get"},props:!0}]},{path:"mails/",name:"manager.mails",meta:{title:"Почта",endpoint:"manager/mails/messages/list"},children:[{path:"messages/",component:"vue-manager-mails-messages-list",meta:{title:"Письма",endpoint:"manager/mails/messages/list"},props:!0,name:"manager.mails.messages.list"},{path:"campaings/",component:"vue-manager-mails-campaings-list",meta:{title:"Рассылки",endpoint:"manager/mails/campaings/list"},props:!0,name:"manager.mails.campaings.list"},{path:"sequences/",component:"vue-manager-mails-sequences-list",meta:{title:"Цепочки",endpoint:"manager/mails/sequences/list"},props:!0,name:"manager.mails.sequences.list"},{path:"templates/",component:"vue-manager-mails-templates-list",meta:{title:"Шаблоны",endpoint:"manager/mails/templates/list"},props:!0,name:"manager.mails.templates.list"},{path:"blocks/",component:"vue-manager-mails-blocks-list",meta:{title:"Блоки",endpoint:"manager/mails/blocks/list"},props:!0,name:"manager.mails.blocks.list"},{path:"senders/",component:"vue-manager-mails-senders-list",meta:{title:"Отправители",endpoint:"manager/mails/senders/list"},props:!0,name:"manager.mails.senders.list"}]},{path:"currency/",component:"vue-manager-currency",meta:{title:"Валюта",endpoint:"manager/currency/get"},props:!0,name:"manager.currency"},{path:"security/",meta:{title:"Проверка",endpoint:"manager/security/list"},props:!0,name:"manager.security",children:[{path:"watch/",component:"vue-manager-security-list",meta:{title:"На проверку",endpoint:"manager/security/list"},props:!0,name:"manager.security.list"},{path:"history/",component:"vue-manager-security-history",meta:{title:"История",endpoint:"manager/security/history"},props:!0,name:"manager.security.history"},{path:"domains/",component:"vue-manager-security-domains",meta:{title:"Домены",endpoint:"manager/security/domains/list"},props:!0,name:"manager.security.domains"}]},{path:"cms/",name:"manager.cms",meta:{title:"Контент"},children:[{path:"pages/",meta:{title:"Страницы",endpoint:"manager/cms/pages/list"},name:"manager.cms.pages",props:!0,children:[{path:"list/",component:"vue-manager-cms-pages-pages",props:!0},{path:"list/:id/",component:"vue-manager-cms-pages-page",props:!0,children:[{path:"variants/",component:"vue-manager-cms-pages-variants",props:!0,name:"manager.cms.pages.variants"},{path:"blocks/",component:"vue-manager-cms-pages-blocks",props:!0,name:"manager.cms.pages.blocks"}]}]},{path:"blog/",component:"vue-manager-cms-blog-list",meta:{title:"Блог",endpoint:"manager/blog/list"},props:!0,name:"manager.blog"},{path:"questions/",component:"vue-manager-cms-questions-list",meta:{title:"Вопросы",endpoint:"manager/cms/questions/list"},props:!0,name:"manager.questions"},{path:"guides/",component:"vue-manager-cms-guides-list",meta:{title:"Инструкции",endpoint:"manager/guides/list"},props:!0,name:"manager.guides"},{path:"docs/",component:"vue-manager-cms-docs-index",meta:{title:"Документация",endpoint:"manager/docs/index"},props:!0,name:"manager.docs"}]},{path:"logs/",component:"vue-manager-logs-list",meta:{title:"Логи",endpoint:"manager/logs/list"},props:!0,name:"manager.logs"},{path:"users/",component:"vue-manager-users-list",meta:{title:"Пользователи",endpoint:"manager/users/list"},props:!0,name:"manager.users"}]);
