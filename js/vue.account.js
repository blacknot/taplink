window.$app.defineComponent("account","vue-account-access-form",{data:function(){return{isUpdating:!1,isFetching:!1,values:{profile_id:null,account_id:null,access_text:"full",access:{1:!0,2:!0,4:!0,8:!0,16:!0,32:!0,64:!0,128:!0}},errors:{profile_id:""},modules:[]}},created:function(){this.fetchData()},props:["profile_id","account_id","owner_profile_id","part"],computed:{title:function(){return this.account_id?"main"==this.part?this.$gettext("Вы открыли совместный доступ аккаунту"):this.$gettext("Вам открыли совместный доступ к профилю"):this.$gettext("Укажите имя профиля или email которому вы хотите открыть доступ")},username:function(){return"main"==this.part?this.values.email:this.values.username}},methods:{fetchData:function(){var s=this;this.isFetching=!0,this.$api.get(this.profile_id||this.account_id?["account/access/info","account/access/get"]:"account/access/info",{owner_profile_id:this.owner_profile_id,profile_id:this.profile_id,account_id:this.account_id,part:this.part}).then(function(e){var t;s.isFetching=!1,s.modules=e.response.access.modules,null!=e.response.access.values&&(s.values=e.response.access.values,s.values.access_text=65535==s.values.access?"full":"restricted",t={},_.each(s.modules,function(e){_.each(e.items,function(e){t[e.access_id]=(s.values.access&e.access_id)==e.access_id})}),s.values.access=t)})},updateData:function(){var t=this,e=_.merge(_.clone(this.values),{part:this.part}),s=0;"full"==this.values.access_text?s=65535:_.each(this.values.access,function(e,t){s+=parseInt(e?t:0)}),e.access=s,this.isUpdating=!0,this.$api.post("account/access/set",e).then(function(e){"fail"==e.result?t.errors=e.errors:t.$parent.close(),t.isUpdating=!1}).catch(function(e){e.data;t.isUpdating=!1})},onAction:function(e){var t=this,s="revoke:1"==e;this.$confirm(s?this.$gettext("Вы уверены что хотите отозвать доступ?"):this.$gettext("Вы уверены что хотите отказаться от доступа?"),"is-danger").then(function(){t.$api.post("account/access/revoke",{profile_id:t.profile_id,account_id:t.account_id,owner_profile_id:t.owner_profile_id,part:t.part}).then(function(e){t.$parent.close()})})},changeProfile:function(){this.$auth.changeProfile(this.values.profile_id),this.$parent.close()}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Совместный доступ\'|gettext}} <span v-if="part == \'main\'"><span v-if="values.owner_profile_id">{{values.owner_username}}</span><span v-else>{{$account.username}}</span></span></p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <b-field :label="title" :message="errors.username" :class="{\'has-error\': errors.username}"> <input :value="username" class="input" disabled v-if=\'this.account_id\'></input> <b-input v-model="values.username" v-if=\'!this.account_id\'></b-input> </b-field> </section> <section class="radio-list" :class="{disabled: part== \'shared\'}"> <label class="is-block radio"><input type=\'radio\' v-model="values.access_text" :disabled="part == \'shared\'" value="full"> {{\'Предоставить полный доступ\'|gettext}}</label> <label class="is-block radio"><input type=\'radio\' v-model="values.access_text" :disabled="part == \'shared\'" value="restricted"> {{\'Предоставить ограниченный доступ\'|gettext}}</label> </section> <section :class="{disabled: part== \'shared\'}" v-show="values.access_text == \'restricted\'"> <div class="row"> <div class="col-xs-12 col-sm-6" v-for="m in modules"> <div class="has-mb-2 checkbox-list"> <label class="is-block label has-text-grey">{{m.name}}</label> <label class="is-block checkbox" v-for="i in m.items" :class="{disabled: part== \'main\' && i.access_id == 1}"><input type=\'checkbox\' v-model="values.access[i.access_id]" :disabled="part == \'shared\' || i.access_id == 1" value="true"> {{i.name}}</label> </div> </div> </div> </section> </section> <footer class="modal-card-foot level"> <div class="level-left" v-if="account_id"> <vue-component-action-button @action="onAction" :title="\'Действие\'|gettext"> <template slot="actions"> <b-dropdown-item value="revoke:1" v-if="part == \'main\'" class="has-text-danger">{{\'Отозвать доступ\'|gettext}}</b-dropdown-item> <b-dropdown-item value="revoke:0" v-if="part == \'shared\'" class="has-text-danger">{{\'Отказаться\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> </div> <div class="level-left" v-else> <button class="button is-dark is-hidden-tablet" type="button" @click="$parent.close()">{{\'Отмена\'|gettext}}</button> </div> <div class="level-right"> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData" v-if="part == \'main\'">{{\'Сохранить\'|gettext}}</button> <button class="button is-primary" v-if="part == \'shared\'" @click="changeProfile" :disabled="$account.profile_id == profile_id">{{\'Переключиться\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("account","vue-account-access-list",{data:function(){return{isFetching:!1,perPage:100,sortField:"tms_shared",sortOrder:"desc",allowShare:!1}},mixins:[ListModel],created:function(){this.fetchData(!0),this.$io.on("events:access.profiles:refresh",this.refresh)},destroyed:function(){this.$io.off("events:access.profiles:refresh",this.refresh)},props:["part"],watch:{part:function(){this.clearPages(),this.fetchData(!0)}},methods:{fetchData:function(e){var t=this;this.checkCache()||(this.isFetching=e,this.$api.get("account/access/list",{part:this.part,next:this.next,sort_field:this.sortField,count:this.perPage,sort_order:this.sortOrder}).then(function(e){e.response.accesses.fields="shared"==t.part?_.map(e.response.accesses.fields,function(e){return e.is_updating=!1,e}):e.response.accesses.fields,t.cachePage(e.response.accesses),t.allowShare=e.response.accesses.allow_share,t.isFetching=!1}).catch(function(e){throw t.accesses=[],t.total=0,t.isFetching=!1,e}))},revokeAccess:function(e){var t=this;this.$confirm(this.$gettext("Вы уверены что хотите отозвать доступ?"),"is-danger").then(function(){t.$api.post("account/access/revoke",{profile_id:e.profile_id,account_id:e.account_id,owner_profile_id:e.owner_profile_id,part:"main"})})},clickRow:function(e){this.$modal("vue-account-access-form",{part:this.part,profile_id:e.profile_id,account_id:e.account_id,owner_profile_id:e.owner_profile_id},this)},setFavourite:function(t){t.is_updating=!0;var s=!t.is_favourite;this.$api.get("account/profiles/favourite",{profile_id:t.profile_id,val:s}).then(function(e){"success"==e.result&&(t.is_favourite=s),t.is_updating=!1}).catch(function(){t.is_updating=!1})},openForm:function(){this.$modal("vue-account-access-form",{part:this.part},this)}},template:'<div> <vue-component-filterbox :with-query="false" :with-buttons="true"> <template slot="buttons"> <div class="level"> <div class="level-left"> <div class="field has-addons has-tabs-style"> <div class="control is-expanded"> <router-link class="b-radio radio button" :class="{\'is-dark\': part== \'main\'}" :to="{name: \'access-main\'}"><span>{{\'Я открыл доступ\'|gettext}}</span></router-link> </div> <div class="control is-expanded"> <router-link class="b-radio radio button" :class="{\'is-dark\': part== \'shared\'}" :to="{name: \'access-shared\'}"><span>{{\'Доступные мне\'|gettext}}</span></router-link> </div> </div> </div> <div class="level-right" v-if="part == \'main\'"> <a @click="openForm()" class="button is-primary is-fullwidth" :class="{disabled: part== \'shared\', disabled: !allowShare}"><i class=\'fas fa-plus has-mr-1\'></i>{{\'Открыть доступ\'|gettext}}</a> </div> </div> </template> </vue-component-filterbox> <div class="container has-mb-4"> <b-table paginated backend-pagination backend-sorting backend-sorting pagination-simple :data="fields" :loading="isFetching" :current-page="page" :per-page="perPage" :total="total" :default-sort="[sortField, sortOrder]" @page-change="onPageChange" @sort="onSort" @click="clickRow" hoverable> <b-table-column field="username" :label="\'Профиль\'|gettext" sortable v-slot="props"> <span v-if="part == \'main\'">{{props.row.owner_username}} <span class="has-text-grey">{{\'для\'|gettext}}</span> {{ props.row.email }} </span> <span v-if="part == \'shared\'"> <span style="width:20px;display:inline-block;"> <i class="fal fa-spinner-third fa-spin" v-if="props.row.is_updating"></i> <i class="fa-star" :class="{fal: !props.row.is_favourite, fas: props.row.is_favourite}" @click.stop="setFavourite(props.row)" v-else></i> </span> {{ props.row.username }} </span> </b-table-column> <b-table-column :label="\'Права\'|gettext" cell-class="has-width-20" v-slot="props"> <div class="has-text-grey"><span v-if="props.row.access == 65535">{{\'Полный доступ\'|gettext}}</span><span v-else>{{ \'Ограниченный доступ\' | gettext }}</span></div> </b-table-column> <b-table-column :label="\'Действие\'|gettext" cell-class="has-width-10" v-slot="props"> <button v-if="part == \'main\'" @click.stop="revokeAccess(props.row)" class="button is-danger is-small">{{\'Отозвать доступ\'|gettext}}</button> <button v-if="part == \'shared\'" @click.stop="$auth.changeProfile(props.row.profile_id)" class="button is-dark is-small" :class="{disabled: props.row.profile_id == $account.profile_id}">{{\'Переключиться\'|gettext}}</button> </b-table-column> <b-table-column field="tms_shared" :label="\'Дата добавления\'|gettext" cell-class="has-width-10 has-text-nowrap" numeric sortable v-slot="props"> {{ props.row.tms_shared|datetime }} </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-centered" v-if="!isFetching"> <div v-if="part == \'main\'"> <h3 class="has-text-grey">{{\'Список аккаунтов\'|gettext}}</h3> <p class="has-text-grey">{{\'Нажмите "Открыть доступ" для того чтобы открыть доступ к странице другому пользователю\'|gettext}}</p> </div> <div v-if="part == \'shared\'"> <h3 class="has-text-grey">{{\'Список профилей\'|gettext}}</h3> <p class="has-text-grey">{{\'Тут отображаются список профилей к которым у вас есть доступ\'|gettext}}</p> </div> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div>'}),window.$app.defineComponent("account","vue-account-profiles-create-form",{methods:{createEmpty:function(){var t=this;this.$confirm(this.$gettext("Вы хотите создать новый профиль?"),"is-info",{yes:this.$gettext("Да"),no:this.$gettext("Нет")}).then(function(){t.$api.get("account/profiles/create").then(function(e){"success"==e.result&&t.$auth.refresh(e.response,function(){t.$router.replace({name:"pages",params:{page_id:e.response.page_id}}),t.$parent.close()})})})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Новый профиль\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="row create-form-choose"> <div class="col-xs-12 col-sm-6 has-xs-mb-2"> <a href="/login/instagrambasic/?method=connect"><dd class="button is-block-button"><dt><span><i class="fa fab fa-ig has-text-grey-light"></i>Instagram</span></dt></dd></a> </div> <div class="col-xs-12 col-sm-6"> <a @click="createEmpty"><dd class="button is-block-button"><dt><span><i class="fa fa fa-file has-text-grey-light"></i>{{\'Пустой профиль\'|gettext}}<span></dt></dt></a> </div> </div> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </footer> </div>'}),window.$app.defineComponent("account","vue-account-profiles-form",{data:function(){return{isUpdatingFavourite:!1,isUpdatingTransfer:!1,isUpdatingDelete:!1,isFetching:!0,values:{}}},created:function(){this.fetchData(!0)},computed:{isDisabled:function(){return this.$account.profile_id==this.values.profile_id}},props:["profile_id","fullMode"],mixins:[FormModel],methods:{fetchData:function(e){var s=this;this.isFetching=e,this.$api.get("account/profiles/get",{profile_id:this.profile_id}).then(function(e){var t;s.isFetching=!1,"success"==e.result&&(t=e.response,s.values=t.profiles.values,s.account_token=t.account_token)})},changeProfileInternal:function(e){var t=this;this.$account.profile_id=null,this.$auth.changeProfile(e,"profiles",function(){t.$parent.$parent.refresh()})},deleteProfile:function(){var t=this;this.$confirm(this.$gettext('При выборе "Да, удалить мой профиль" ваши данные будут потеряны. Посетители больше не смогут открыть вашу страницу.'),"is-danger",{yes:this.$gettext("Да, удалить мой профиль")}).then(function(){t.$challenge({account_token:t.account_token}).then(function(e){t.isUpdatingDelete=!0,t.$api.get("account/profiles/delete",{profile_id:t.profile_id,hash:t.values.hash,challenge:e},t).then(function(e){"success"==e.result&&(e.response.profile_id&&t.changeProfileInternal(e.response.profile_id),t.$parent.close()),t.isUpdatingDelete=!1})})})},transferProfile:function(){var t=this;this.isUpdatingTransfer=!0,this.$api.get("account/profiles/transfer",{profile_id:this.profile_id,transfer_email:this.values.transfer_email,hash:this.values.hash},this).then(function(e){"success"==e.result&&(e.response.profile_id&&t.changeProfileInternal(e.response.profile_id),t.$parent.close()),t.isUpdatingTransfer=!1})},transferProfileCancel:function(){var t=this;this.isUpdatingTransfer=!0,this.$api.get("account/profiles/transfercancel",{profile_id:this.profile_id},this).then(function(e){"success"==e.result&&t.$parent.close(),t.isUpdatingTransfer=!1})},changeProfile:function(){this.$auth.changeProfile(this.values.profile_id),this.$parent.close()}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title" v-if="values.nickname">{{values.nickname}}</p> <p class="modal-card-title" v-else>{{\'Профиль\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section v-if="fullMode"> <div class="field"> <label class="label">{{\'Смена профиля\'|gettext}}</label> <p>{{\'Для того чтобы переключиться в выбранный профиль нажмите на кнопку ниже\'|gettext}}</p> </div> <button @click="changeProfile" class="button is-primary" :class="{disabled: isDisabled}" :disabled="isDisabled || values.is_transfer_pending == 1">{{\'Переключиться\'|gettext}}</button> </section> <section> <label class="label">{{\'Передача профиля на другой аккаунт\'|gettext}}</label> <p class="control has-mb-2">{{\'Укажите Email аккаунта на который хотите передать профиль\'|gettext}}</p> <b-field :message="errors.transfer_email" :class="{\'has-error\': errors.transfer_email}"> <b-input v-model="values.transfer_email" placeholder=\'example@mail.com\' :disabled="values.is_transfer_pending == 1"></b-input> </b-field> <button type="submit" class="button is-primary" @click="transferProfile" :class="{\'is-loading\': isUpdatingTransfer && values.is_transfer_pending == 0}" :disabled="values.is_transfer_pending == 1">{{\'Передать профиль\'|gettext}}</button> <button type="button" class="button is-primary has-ml-1" @click="transferProfileCancel" :class="{\'is-loading\': isUpdatingTransfer}" v-if="values.is_transfer_pending == 1">{{\'Отмена\'|gettext}}</button> </section> <section v-if="fullMode"> <label class="label">{{\'Удаление профиля\'|gettext}}</label> <p class="control has-mb-2">{{\'Удаление вашего профиля необратимо, пожалуйста, действуйте с осторожностью\'|gettext}}</p> <button type="submit" class="button is-danger" @click="deleteProfile" :class="{\'is-loading\': isUpdatingDelete}" :disabled="values.is_transfer_pending == 1 || values.profile_status_id == 5 || values.tariff_current != \'basic\'">{{\'Удалить профиль\'|gettext}}</button> </section> </section> <footer class="modal-card-foot level"> <div class="level-left is-hidden-mobile"> </div> <div class="level-right"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("account","vue-account-profiles-list",{data:function(){return{view:"cards",views:{cards:"fa fa-browser",list:"fa fa-bars"},isFetching:!1,perPage:20,sortField:"tms_created",sortOrder:"desc",loadingProfiles:[],loadingProfileId:!0,waitingScreenshots:[],isCreatingNewProfile:!1}},mixins:[ListModel,InfinityModel],created:function(){this.fetchData(!0),this.$io.on("events:profiles.list:refresh",this.refresh),this.$io.on("events:profiles.screenshot:taked",this.screenshotTaked),this.loadingProfiles=new Array(3)},beforeDestroy:function(){this.$io.off("events:profiles.list:refresh",this.refresh),this.$io.off("events:profiles.screenshot:taked",this.screenshotTaked)},props:["part"],methods:{changeProfileInternal:function(e){this.$account.profile_id=null,this.$auth.changeProfile(e,"profiles")},clickRow:function(e){this.$modal("vue-account-profiles-form",{profile_id:e.profile_id,fullMode:!0},this)},onAction:function(e,s){var i=this;switch(e){case"delete":this.$confirm(this.$gettext('При выборе "Да, удалить мой профиль" ваши данные будут потеряны. Посетители больше не смогут открыть вашу страницу.'),"is-danger",{yes:this.$gettext("Да, удалить мой профиль")}).then(function(){i.$api.get("account/profiles/get",{profile_id:s.profile_id}).then(function(e){var t;"success"==e.result&&(t=e.response.profiles.values,i.$challenge({account_token:e.response.account_token}).then(function(e){i.isUpdatingDelete=!0,i.$api.get("account/profiles/delete",{profile_id:s.profile_id,hash:t.hash,challenge:e},i).then(function(e){"success"==e.result&&(e.response.profile_id&&i.changeProfileInternal(e.response.profile_id),i.$delete(i.fields,_.findIndex(i.fields,{profile_id:s.profile_id})),i.clearPages())})}))})});break;case"tariff":this.$modal("vue-account-profiles-rateplan-form",{profile_id:s.profile_id},this);break;case"transfer":this.$modal("vue-account-profiles-form",{profile_id:s.profile_id},this)}},changeProfile:function(e){var t=this;this.loadingProfileId=e,this.$auth.changeProfile(e,null,function(){scrollIt(0,"y",t.$device.mobile?$mx(".main-block")[0]:null,0)})},coverStyle:function(e){return e.screenshot?{"background-image":"url(//"+this.$account.storage_domain+"/"+e.screenshot+")"}:null},screenshotTaked:function(s){var i=this,a=!1;_.each(this.fields,function(e){var t;e.profile_id==s.profile_id&&((t=new Image).addEventListener("load",function(){e.screenshot=s.filename,t=null}),t.src="//"+i.$account.storage_domain+"/"+s.filename,a=!0)}),a||(this.waitingScreenshots[f.profile_id]=s.filename)},fetchData:function(e,s){var i=this;s||(this.isFetching=e),this.isFetching=e,this.loadingProfiles=new Array(this.perPage),this.$api.get("account/profiles/list",{part:this.part,next:this.next,count:this.perPage,sort_field:this.sortField,sort_order:this.sortOrder}).then(function(e){var t=e.response.profiles;t.fields=_.map(t.fields,function(e){return e.is_updating=!1,e}),i.fields=s?i.fields.concat(t.fields):t.fields,i.next=t.next,i.loadingProfiles=[],setTimeout(function(){i.bottom=i.bottomVisible(),i.checkBottom()},100),i.isFetching=i.isFlowFetching=!1}).catch(function(e){throw i.accesses=[],i.total=0,i.isFetching=i.isFlowFetching=!1,e})},createProfile:function(){var e=this;"ru"!=i18n.locale?(this.isCreatingNewProfile=!0,this.$form.open("vue-templates-index",{isNewProfile:!0},null,function(){e.isCreatingNewProfile=!1})):this.$modal("vue-account-profiles-create-form",[],this)},transferTariff:function(){this.$modal("vue-account-profiles-rateplan-form",[],this)},setFavourite:function(t){t.is_updating=!0;var s=!t.is_favourite;this.$api.get("account/profiles/favourite",{profile_id:t.profile_id,val:s}).then(function(e){"success"==e.result&&(t.is_favourite=s),t.is_updating=!1}).catch(function(){t.is_updating=!1})}},template:'<div class="container"> <div class="row has-mt-2 has-mb-2"> <div class="col-xs"><a @click="transferTariff" class="button is-light is-fullwidth-mobile"><i class="fa fa-exchange has-mr-1"></i> {{\'Перенести тариф\'|gettext}}</a></div> <div class="col-xs col-grow"></div> <div class="col-xs-4 col-sm-2"><vue-component-toggle-list v-model="view" :items="views" :is-icons="true"/></div> </div> <div class="has-mt-3 has-mb-3" v-if="view == \'cards\'"> <div class="profiles-grid"> <div class="is-new-profile" :class="{\'is-creating\':isCreatingNewProfile}" @click="createProfile"><div><em></em>{{\'Новый профиль\'|gettext}}</div></div> <div v-for="p in fields" class="item" :class="{skeleton: !p.screenshot, \'is-transfer-pending\': p.is_transfer_pending, \'is-loading\': p.profile_id == loadingProfileId}" :style="coverStyle(p)" @click="changeProfile(p.profile_id)"><div class="inner"><div class="inner-body">{{\'Открыть\'|gettext}}<i class="fa fa-chevron-right has-ml-2"></i></div></div><div class="footer" @click.stop=""> <div> <span class="has-text-success" v-if="p.is_transfer_pending == 1"><i class="far fa-exchange has-mr-1"></i>{{\'Передача\'|gettext}}</span> <span v-else> <span class="tag is-danger " v-if="p.tariff == \'pro\'" style="background:#9d82da">pro</span><span class="tag is-danger" v-if="p.tariff == \'business\'">business</span><span class="tag is-default" v-if="p.tariff != \'business\' && p.tariff != \'pro\'">{{p.tariff}}</span> </span> <vue-component-action-button @action="onAction" :with-title="false" icon="fa fa-ellipsis-h" :context="p"> <template slot="actions"> <b-dropdown-item value="tariff" :class="{disabled: p.is_transfer_pending == 1 || p.profile_status_id == 5 || p.tariff_current == \'basic\'}" v-if="p.tariff != \'basic\'"><i class="fa fa-exchange"></i>{{\'Перенести тариф\'|gettext}}</b-dropdown-item> <b-dropdown-item value="transfer"><i class="fa fa-exchange"></i>{{\'Передать профиль\'|gettext}}</b-dropdown-item> <hr class="dropdown-divider" aria-role="menuitem"> <b-dropdown-item value="delete" class="has-text-danger" :class="{disabled: (p.is_transfer_pending == 1) || (p.profile_status_id == 5) || (p.tariff_current != \'basic\')}"><i class="fa fa-trash-alt"></i> {{\'Удалить профиль\'|gettext}}</b-dropdown-item> </template> </vue-component-action-button> </div> <div class="has-mt-1 is-title"> <span style="width:20px;display:inline-block;" :class="{disabled: p.is_transfer_pending == 1}"> <i class="fal fa-spinner-third fa-spin" v-if="p.is_updating"></i> <i class="fa-star" :class="{fal: !p.is_favourite, fas: p.is_favourite}" @click.stop="setFavourite(p)" v-else></i> </span> <span style="opacity: .6" v-if="p.link.substr(0, 3) == \'id:\'">{{p.link}}</span><a v-else class="has-text-black" target="_blank" :href="\'http://\'+p.link">{{p.link}}</a> </div> </div> </div> <div v-for="p in loadingProfiles" class="skeleton"></div> </div> </div> <div class="has-mb-3" v-else> <b-table backend-pagination backend-sorting pagination-simple :data="fields" :loading="isFetching" :total="total" :default-sort="[sortField, sortOrder]" @sort="onSort" @click="clickRow" hoverable mobile-cards> <b-table-column field="nickname" :label="\'Профиль\'|gettext" v-slot="props"> <div> <span style="width:20px;display:inline-block;" :class="{disabled: props.row.is_transfer_pending == 1}"> <i class="fal fa-spinner-third fa-spin" v-if="props.row.is_updating"></i> <i class="fa-star" :class="{fal: !props.row.is_favourite, fas: props.row.is_favourite}" @click.stop="setFavourite(props.row)" v-else></i> </span> {{props.row.link}} <div class="is-pulled-right has-text-grey is-hidden-mobile" v-if="$account.profile_id == props.row.profile_id">{{\'Текущий профиль\'|gettext}}</div> <div class="is-pulled-right has-text-success is-hidden-mobile" v-if="props.row.is_transfer_pending == 1">{{\'Передача\'|gettext}}</div> </div> </b-table-column> <b-table-column :label="\'Действие\'|gettext" cell-class="has-width-10" v-slot="props"> <button @click.stop="changeProfile(props.row.profile_id)" class="button is-dark is-small" :class="{disabled: props.row.profile_id == $account.profile_id}" :disabled="props.row.is_transfer_pending == 1">{{\'Переключиться\'|gettext}}</button> </b-table-column> <b-table-column field="tariff" :label="\'Тариф\'|gettext" cell-class="has-width-10" v-slot="props"> <span class="tag is-danger" v-if="props.row.tariff == \'pro\'" style="background:#9d82da">pro</span><span class="tag is-danger" v-if="props.row.tariff == \'business\'">business</span><span class="tag is-default" v-if="props.row.tariff != \'business\' && props.row.tariff != \'pro\'">{{props.row.tariff}}</span> </b-table-column> <b-table-column field="tariff_until" :label="\'Тариф активен до\'|gettext" cell-class="has-width-10 has-text-nowrap" numeric sortable v-slot="props"> {{ props.row.tariff_until|datetime }} </b-table-column> <b-table-column field="tms_created" :label="\'Дата добавления\'|gettext" cell-class="has-width-10 has-text-nowrap" numeric sortable v-slot="props"> {{ props.row.tms_created|datetime }} </b-table-column> <template slot="empty"> <section class="has-mb-4 has-mt-4 content has-text-centered" v-if="!isFetching"> <h3 class="has-text-grey">{{\'Список моих профилей\'|gettext}}</h3> </section> <section class="has-mb-4 has-mt-4 content has-text-grey has-text-centered" v-if="isFetching"> <p>{{\'Загрузка данных\'|gettext}}</p> </section> </template> </b-table> </div> </div>'}),window.$app.defineComponent("account","vue-account-profiles-rateplan-form",{data:function(){return{isUpdating:!1,isFetching:!1,values:{profile_from:null,profile_to:null},variants:{profiles:{from:[],to:[]}}}},created:function(){this.profile_id&&(this.values.profile_from=this.profile_id),this.fetchData(!0)},computed:{placeholder:function(){return"-- "+this.$gettext("Профиль")+" --"}},props:["profile_id"],mixins:[FormModel],methods:{fetchData:function(e){var t=this;this.isFetching=e,this.$api.get("account/profiles/rateplan/info").then(function(e){t.isFetching=!1,t.variants=e.response.profiles.transfer.variants})},updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("account/profiles/rateplan/set",this.values,this).then(function(e){"success"==e.result&&(t.$auth.refresh(),t.$parent.close()),t.isUpdating=!1}).catch(function(e){t.isUpdating=!1})}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Перенос тарифа\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="message is-info"> <div class="message-body">{{\'Вы можете перенести тариф с одного профиля на другой. Для этого выберите профиль с тарифом с которого вы будете переносить тариф, профиль без тарифа, на который вы будете переносить тариф и нажмите кнопку "Перенести"\'|gettext}}</div> </section> <section class="modal-card-body"> <b-field :label="\'Профиль с тарифом откуда перенести\'|gettext" :message="errors.profile_from" :class="{\'has-error\': errors.profile_from}"> <b-select v-model="values.profile_from" :placeholder="placeholder" expanded><option v-for="f in variants.profiles.from" :value="f.profile_id">{{ f.username }}</option></b-select> </b-field> <b-field :label="\'Профиль без тарифа куда перенести\'|gettext" :message="errors.profile_to" :class="{\'has-error\': errors.profile_to}"> <b-select v-model="values.profile_to" :placeholder="placeholder" expanded><option v-for="f in variants.profiles.to" :value="f.profile_id">{{ f.username }}</option></b-select> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" :class="{\'is-loading\': isUpdating}" @click="updateData" :disabled="!values.profile_from || !values.profile_to || (values.profile_from == values.profile_to)">{{\'Перенести\'|gettext}}</button> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("account","vue-account-settings-activity-form",{data:function(){return{isFetching:!1,isClosing:!1}},mixins:[ListModel],created:function(){this.fetchData()},methods:{onPageChange:function(e){this.page=e,this.fetchData(!1)},fetchData:function(e){var t=this;this.isFetching=!0;function s(e){t.fields=e.fields,t.isFetching=!1}!e&&this.checkCache(s)||this.$api.get("account/settings/activity/list",{next:this.next}).then(function(e){t.isFetching=t.isClosing=!1,t.cachePage(e.response.activity,s)})},closeSessions:function(){var t=this;this.$confirm(this.$gettext("Вы уверены что хотите завершить все сеансы?"),"is-danger").then(function(){t.isClosing=!0,t.$api.get("account/settings/activity/closesessions").then(function(e){t.$parent.$parent.fetchData(),t.$parent.close()})})},titleIp:function(e){return this.$gettext("IP-адрес")+": "+e}},template:'<div class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'История активности\'|gettext}}</p> <button class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <b-table :data="fields" paginated backend-pagination pagination-simple :mobile-cards="false" class="table-header-hide" :per-page="perPage" :current-page="page" :total="total" @page-change="onPageChange"> <b-table-column field="tms" v-slot="props"> <div style="display: flex;justify-content: space-between;align-items: center"> <div style="display: flex;" :class="{disabled: !props.row.is_active}"> <div class="icon-browser" :data-browser="props.row.client.browser.toLowerCase()"> <span :class="[\'iti__flag iti__flag-box\', \'iti__\'+props.row.country]" style="display: inline-block;position: absolute;right: 0;bottom: 0;" v-tippy="{placement: \'left\'}" :content="titleIp(props.row.ipv4)"></span> </div> <div> <div><b>{{props.row.client.device}}</b></div> <div class="has-text-grey">{{props.row.tms|datetime}} &bull; {{\'Браузер\'|gettext}} {{props.row.client.browser}}</div> </div> </div> <div class="tag has-tag-dot is-success" v-if="props.row.is_online">{{\'Онлайн\'|gettext}}</div> </div> </b-table-column> </b-table> </section> <footer class="modal-card-foot level"> <div class="level-left"> <button :class="[\'button is-danger\', {\'is-loading\': isClosing}]" @click="closeSessions" :disabled="isFetching">{{\'Завершить все сеансы\'|gettext}}</button> </div> <div class="level-right is-hidden-mobile"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </div>'}),window.$app.defineComponent("account","vue-account-settings-authenticator-form",{data:function(){return{isFetching:!0,isUpdating:!1,secret:null,otpauth:null,values:{code:""}}},mixins:[FormModel],computed:{secret_human:function(){var e=this.secret.match(/([A-Z0-9\*]{4})([A-Z0-9\*]{4})([A-Z0-9\*]{4})([A-Z0-9\*]{4})/);return delete e[0],e.join(" ")}},created:function(){var s=this;this.$api.get("account/settings/security/authenticator/get").then(function(e){var t;"success"==e.result&&(t=e.response,s.secret=t.secret,s.otpauth=t.otpauth),s.isFetching=!1})},methods:{save:function(){var t=this;this.isUpdating=!0,this.$api.get("account/settings/security/authenticator/confirm",{secret:this.secret,code:this.values.code},this).then(function(e){"success"==e.result&&(t.$parent.$parent.fetchData(),t.$parent.close()),t.isUpdating=!1})}},template:'<form @submit.prevent="checkCode" class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Настройка приложения для генерации кодов\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section class="message is-warning"> <div class="message-body"> {{\'Воспользуйтесь любым приложением для генерации кодов. Например, Google Authenticator. Просканируйте в приложении QR-код или введите секретный ключ, указанный ниже. После этого, введите проверочный код из приложения.\'|gettext}} </div> </section> <transition name="fade"> <section v-if="secret"> <div class="row"> <div class="col-xs-12 col-sm-4 col-sm-offset-4" v-if="otpauth"> <label class="label">{{\'QR-код\'|gettext}}</label> <vue-component-qrcode :value="otpauth" size="100%"></vue-component-qrcode> <label class="label">{{\'Секретный ключ\'|gettext}}</label> <div class="has-mb-2"> <b>{{secret_human}}</b> <vue-component-clipboard :text="secret" v-if=""/> </div> <b-field :class="{\'has-error\': errors.code}" :message="errors.code" :label="\'Проверочный код\'|gettext"> <input type="text" class="input" v-model="values.code" @keydown="errors.code = null" type="tel" maxlength="6" v-focus> </b-field> </div> <div class="col-xs-12 has-text-centered" v-else> <label class="label">{{\'Секретный ключ\'|gettext}}</label> <div class="has-mb-2"> <b>{{secret_human}}</b> </div> </div> </section> </transition> </section> <footer class="modal-card-foot level"> <div class="level-left"> <button class="button is-danger" type="button" @click="$parent.$parent.deleteAuthenticator()" v-if="secret && !otpauth">{{\'Отключить\'|gettext}}</button> </div> <div class="level-right"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-success" type="submit" @click="save()" v-if="otpauth" :disabled="values.code.length < 6 || !secret" :class="{\'is-loading\': isUpdating}">{{\'Подключить\'|gettext}}</button> </div> </footer> <b-loading :is-full-page="false" :active.sync="isFetching"></b-loading> </form>'}),window.$app.defineComponent("account","vue-account-settings-changeemail-form",{data:function(){return{isUpdating:!1,emailSent:!1,email:"",code:""}},mixins:[FormModel],computed:{allowUpdate:function(){return this.email.trim().length&&this.email.trim()!=this.$account.user.email}},methods:{updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("account/settings/changeemail",{email:this.email,code:this.code,sent:this.emailSent},this).then(function(e){"sent"==e.result&&(t.emailSent=!0),"success"==e.result&&(t.$account.user.email=t.email,t.$parent.$parent.fetchData(),t.$parent.close()),t.isUpdating=!1})}},template:'<form @submit.prevent="updateData" class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Email\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body"> <div class="message is-success" v-if="emailSent"> <div class="message-body"> {{\'Мы отправили проверочный код на вашу электронную почту. Введите его и нажмите кнопку "Продолжить"\'|gettext}} </div> </div> <b-field :class="{\'has-error\': errors.email}" :message="errors.email" :label="\'Электронная почта\'|gettext"> <input type="email" minlength="6" maxlength="40" v-model="email" class="input" :disabled="isUpdating || emailSent" v-focus required autocapitalize="off"></input> </b-field> <b-field :class="{\'has-error\': errors.code}" :message="errors.code" :label="\'Проверочный код\'|gettext" v-if="emailSent"> <vue-component-verifyfield v-model="code" :disabled="isUpdating" @keydown="errors.code = null" type="tel" style="max-width: 460px"></vue-component-verifyfield> </b-field> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" type="submit" :class="{\'is-loading\': isUpdating}" :disabled="!allowUpdate">{{\'Продолжить\'|gettext}}</button> </footer> </form>'}),window.$app.defineComponent("account","vue-account-settings-changepassword-form",{data:function(){return{isUpdating:!1,password0:"",password1:"",password2:""}},props:["hasPassword"],mixins:[FormModel],computed:{allowUpdate:function(){return(6<=this.password0.trim().length||!this.hasPassword)&&6<=this.password1.trim().length}},created:function(){},methods:{updateData:function(){var t=this;this.isUpdating=!0,this.$api.post("account/settings/changepassword",{password0:this.password0,password1:this.password1,password2:this.password2},this).then(function(e){"success"==e.result&&(t.$parent.$parent.fetchData(),t.$parent.close()),t.isUpdating=!1})}},template:'<form @submit.prevent="updateData" class="modal-card"> <header class="modal-card-head"> <p class="modal-card-title">{{\'Пароль\'|gettext}}</p> <button type="button" class="modal-close is-large" @click="$parent.close()"></button> </header> <section class="modal-card-body modal-card-body-blocks"> <section> <b-field :class="{\'has-error\': errors.password0}" :message="errors.password0" v-if="hasPassword" :label="\'Текущий пароль\'|gettext"> <input type="password" minlength="6" maxlength="40" v-model="password0" class="input" :class="{\'disabled\': isUpdating}" v-focus></input> </b-field> </section> <section> <b-field :class="{\'has-error\': errors.password}" :message="errors.password" :label="\'Новый пароль\'|gettext"> <input type="password" minlength="6" maxlength="40" v-model="password1" class="input" :class="{\'disabled\': isUpdating}"></input> </b-field> <b-field :class="{\'has-error\': errors.password}" :message="errors.password" :label="\'Повторите новый пароль\'|gettext"> <input type="password" minlength="6" maxlength="40" v-model="password2" class="input" :class="{\'disabled\': isUpdating}"></input> </b-field> </section> </section> <footer class="modal-card-foot"> <button class="button is-dark" type="button" @click="$parent.close()">{{\'Закрыть\'|gettext}}</button> <button class="button is-primary" type="submit" :class="{\'is-loading\': isUpdating}" :disabled="!allowUpdate">{{\'Продолжить\'|gettext}}</button> </footer> </form>'}),window.$app.defineComponent("account","vue-account-settings-form",{data:function(){return{values:{email:"",password:"",sessions:[],externals:[],security:{operations:[],twofactor_methods:[]}},isUpdating:!1,isFetching:!1,isUpdatingSecurity:!1,isExternalsUpdating:!1,state:""}},created:function(){this.fetchData()},computed:{localeRu:function(){return"ru"==window.i18n.locale}},methods:{showAuthenticatorForm:function(){this.$modal("vue-account-settings-authenticator-form",{},this)},changeSecurityOperations:function(t){var s=this,e=-1!=this.values.security.operations.indexOf(t),i={auth:[this.$gettext("Отключить двойную аутентификацию при авторизации в систему?"),this.$gettext("Включить двойную аутентификацию при авторизации в систему?")],payments:[this.$gettext("Отключить подтверждение действий при изменении платежных систем?"),this.$gettext("Включить подтверждение действий при изменении платежных систем?")]};this.$confirm(i[t][e?0:1],"is-warning",{yes:this.$gettext("Да"),no:this.$gettext("Нет")}).then(function(){e?s.$challenge().then(function(e){s.changeSecurityOperationsInternal(t,!1,e)}):s.changeSecurityOperationsInternal(t,!0)})},changeSecurityOperationsInternal:function(t,s,e){var i=this;this.isUpdatingSecurity=!0,this.$api.post("account/settings/security/update",{field:t,value:s,challenge:e}).then(function(e){"success"==e.result&&(i.isUpdatingSecurity=!1,s?i.values.security.operations.push(t):i.values.security.operations.splice(i.values.security.operations.indexOf(t),1))})},titleIp:function(e){return this.$gettext("IP-адрес")+": "+e},deleteAuthenticator:function(){var t=this;this.$challenge().then(function(e){t.isUpdatingSecurity=!0,t.$api.post("account/settings/security/delete",{method:"authenticator",challenge:e}).then(function(e){t.isUpdatingSecurity=!1,"success"==e.result&&t.values.security.twofactor_methods.splice(t.values.security.twofactor_methods.indexOf("authenticator"),1)})})},challengeSuccess:function(e,t){t},fetchData:function(){var t=this;this.isFetching=!0,this.$api.get("account/settings/get").then(function(e){t.values=e.response,t.isFetching=!1})},showActivityForm:function(){this.$modal("vue-account-settings-activity-form",null,this)},changePassword:function(){this.$modal("vue-account-settings-changepassword-form",{hasPassword:0<this.values.password.length},this)},changeEmail:function(){this.$modal("vue-account-settings-changeemail-form",null,this)},chooseState:function(e){var t=this;this.state=e,setTimeout(function(){t.state=""},1250)},deleteExternal:function(t){var s=this;this.$confirm(this.$gettext("Вы уверены что хотите удалить эту социальную сеть?"),"is-danger").then(function(){s.isExternalsUpdating=!0;var e=s.values.externals[t];s.$api.get("account/settings/externals/delete",{type_id:e.external_type_id,uniq:e.external_uniq}).then(function(e){"success"==e.result&&s.values.externals.splice(t,1),s.isExternalsUpdating=!1})})}},template:'<div class=\'has-mb-4 has-mt-4 has-xs-mb-3 has-xs-mt-3\'> <div class="container"> <div class="row has-mb-2-mobile"> <div class="col-xs-12 col-sm-4"> <h3 class="has-mb-2">{{\'Данные аккаунта\'|gettext}}</h3> </div> <div class="col-xs-12 col-sm-8"> <div class="panel panel-default"> <div class="has-p-2"> <div class="row"> <div class="col-xs-12 col-sm-6 has-xs-mb-2"> <b-field :label="\'Электронная почта\'|gettext"> <p class="control"> <b-field> <b-input type="email" v-model="values.email" disabled="true" expanded></b-input> <p class="control"> <button type="button" class="button is-default is-fullwidth-mobile" :class="{\'is-loading\': isUpdating}" @click="changeEmail" :disabled="isUpdating">{{\'Изменить\'|gettext}}</button> </p> </b-field> </p> </b-field> </div> <div class="col-xs-12 col-sm-6"> <b-field :label="\'Пароль\'|gettext"> <p class="control"> <b-field> <b-input type="password" :value="values.password" disabled="true" :placeholder="\'Пусто\'|gettext" expanded></b-input> <p class="control"> <button type="button" class="button is-default is-fullwidth-mobile" :class="{\'is-loading\': isUpdating}" @click="changePassword" :disabled="isUpdating">{{\'Изменить\'|gettext}}</button> </p> </b-field> </p> </b-field> </div> </div> </div> </div> </div> </div> <hr class="is-hidden-mobile"> <div class="row has-mb-2-mobile"> <div class="col-xs-12 col-sm-4"> <h3 class="has-mb-2">{{\'Безопасность\'|gettext}}</h3> <div class="has-text-grey has-mb-2 is-hidden-mobile">{{\'История активности показывает информацию о том, с каких устройств и в какое время вы входили на сайт\'|gettext}}</div> </div> <div class="col-xs-12 col-sm-8"> <div class="panel panel-default"> <div class="has-p-2"> <label class="label has-xs-mb-2">{{\'Последняя активность\'|gettext}}</label> <b-table :data="values.sessions" :loading="isFetching" :mobile-cards="false" class="table-header-hide has-mb-2"> <b-table-column field="tms" v-slot="props"> <div style="display: flex;justify-content: space-between;align-items: center"> <div style="display: flex;"> <div class="icon-browser" :data-browser="props.row.client.browser.toLowerCase()"> <span :class="[\'iti__flag iti__flag-box\', \'iti__\'+props.row.country]" style="display: inline-block;position: absolute;right: 0;bottom: 0;" v-tippy="{placement: \'left\'}" :content="titleIp(props.row.ipv4)"></span> </div> <div> <div><b>{{props.row.client.device}}</b></div> <div class="has-text-grey">{{props.row.tms|datetime}} &bull; {{\'Браузер\'|gettext}} {{props.row.client.browser}}</div> </div> </div> <div class="tag has-tag-dot is-success" v-if="props.row.is_online">{{\'Онлайн\'|gettext}}</div> </div> </b-table-column> </b-table> <a @click="showActivityForm">{{\'Показать историю активности\'|gettext}}</a> </div> <div class="has-p-2" style="border-top: 1px solid #e9edef;border-color: var(--border-grey-color);"> <label class="label has-xs-mb-2">{{\'Подтверждение действий\'|gettext}}</label> <div><b-checkbox v-model="values.security.operations" native-value="auth" @click.native.prevent="changeSecurityOperations(\'auth\')" :disabled="isUpdatingSecurity">{{\'Авторизация\'|gettext}}</b-checkbox></div> <div><b-checkbox v-model="values.security.operations" native-value="payments" @click.native.prevent="changeSecurityOperations(\'payments\')" :disabled="isUpdatingSecurity">{{\'Изменение платежных систем\'|gettext}}</b-checkbox></div> </div> <transition name="fade"> <div class="has-p-2" style="border-top: 1px solid #e9edef;border-color: var(--border-grey-color);" v-if="values.security.operations.length"> <label class="label has-xs-mb-2">{{\'Способы получить код безопасности\'|gettext}}</label> <div class="b-table table-header-hide has-mb-2"> <div class="table-wrapper"> <table class="table"> <tbody> <tr> <td class="media"> <img src="/s/i/messengers/icons/email.svg" class="has-mr-1" style="width:40px"> <div> <label class="label is-marginless">{{\'Электронная почта\'|gettext}}</label> <span class="has-text-success">{{\'Включено\'|gettext}}</span> </div> </td> </tr> <tr> <td class="media"> <img src="/s/i/icons/authenticator.svg" class="has-mr-1" style="width:40px"> <div> <label class="label is-marginless">{{\'Приложение для генерации кодов\'|gettext}}</label> <div v-if="values.security.twofactor_methods.indexOf(\'authenticator\') == -1"> <span class="has-text-grey">{{\'Выключено\'|gettext}}</span> &bull; <a @click="showAuthenticatorForm">{{\'Настроить\'|gettext}} </div> <div v-else> <span class="has-text-success">{{\'Включено\'|gettext}}</span> &bull; <a @click="deleteAuthenticator" class="has-text-danger">{{\'Отключить\'|gettext}} </div> </div> </td> </tr> </tbody> </table> </div> </div> </div> </transition> </div> </div> </div> <hr class="is-hidden-mobile"> <div class="row has-mb-2-mobile"> <div class="col-xs-12 col-sm-4"> <h3 class="has-mb-2">{{\'Социальные сети\'|gettext}}</h3> <div class="has-text-grey has-mb-2 is-hidden-mobile">{{\'Подключите свои социальные сети для быстрого входа в личный кабинет\'|gettext}}</div> </div> <div class="col-xs-12 col-sm-8"> <div class="panel panel-default"> <div class="has-p-2"> <label class="label" v-if="values.externals.length">{{\'Подключенные социальные сети\'|gettext}}</label> <b-table :data="values.externals" v-if="values.externals.length" :loading="isFetching" :mobile-cards="false" class="table-header-hide has-mb-2" :loading="isExternalsUpdating"> <b-table-column field="external_type_name" v-slot="props"> <div style="display: flex;justify-content: space-between;align-items: center"> <div class="icon-external button fa fab" :class="\'is-\'+props.row.external_type_name" :data-id="props.row.external_type_name"></div> <div style="flex:1"> <b>{{props.row.external_title}}</b> <div class="has-text-grey">{{props.row.external_type_title}}</div> </div> <button class="button has-text-danger" @click="deleteExternal(props.index)"><i class="fal fa-trash-alt"></i></button> </div> </b-table-column> </b-table> <label class="label has-xs-mb-2">{{\'Подключить социальные сети\'|gettext}}</label> <div class="row row-small"> <div class="col-xs"> <a type="button" class="button is-medium is-fullwidth is-light" :class="{\'disabled\': state && state != \'facebook\', \'is-loading\': state== \'facebook\'}" :href="\'{1}/login/facebook/?method=connect\'|format(window.base_path_prefix)" @click="chooseState(\'facebook\')"><i class="fab fa-fb-o"></i><span class="is-hidden-mobile has-ml-1">Facebook</span></a> </div> <div class="col-xs"> <a type="button" class="button is-medium is-fullwidth is-light" :class="{\'disabled\': state && state != \'google\', \'is-loading\': state== \'google\'}" :href="\'{1}/login/google/?method=connect\'|format(window.base_path_prefix)" @click="chooseState(\'google\')"><i class="fab fa-g"></i><span class="is-hidden-mobile has-ml-1">Google</span></a> </div> <div class="col-xs" v-if="localeRu"> <a type="button" class="button is-medium is-fullwidth is-light" :class="{\'disabled\': state && state != \'vkontakte\', \'is-loading\': state== \'vkontakte\'}" :href="\'{1}/login/vkontakte/?method=connect\'|format(window.base_path_prefix)" @click="chooseState(\'vkontakte\')"><i class="fab fa-vk" style="font-size: 1.9rem"></i><span class="is-hidden-mobile has-ml-1">ВКонтакте</span></a> </div> </div> </div> </div> </div> </div> </div> </div>'}),window.$app.defineModule("account",[]);
